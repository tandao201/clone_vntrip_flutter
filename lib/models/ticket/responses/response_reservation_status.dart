///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ResponseReservationStatusDataFlightRateRateItineraryPassengers {
/*
{
  "key": "dup_f_b_cb9c94e5e814e3e0fb8b9c58e643890c",
  "value": "tan@gmail.com0969841833-tan ta-vj_hansgn_2022-09-20t06:05:00"
}
*/

  String? key;
  String? value;

  ResponseReservationStatusDataFlightRateRateItineraryPassengers({
    this.key,
    this.value,
  });
  ResponseReservationStatusDataFlightRateRateItineraryPassengers.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    value = json['value']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['value'] = value;
    return data;
  }
}

class ResponseReservationStatusDataFlightRateRateListFlightListSegment {
/*
{
  "id": 0,
  "class": "E1_ECO",
  "plane": "Airbus A330",
  "airline": "VJ",
  "endTime": "2022-09-20T08:15:00",
  "hasStop": false,
  "duration": 130,
  "endPoint": "SGN",
  "lastItem": true,
  "stopTime": 0,
  "dayChange": false,
  "startTime": "2022-09-20T06:05:00",
  "stopPoint": "SGN",
  "startPoint": "HAN",
  "handBaggage": "07kg",
  "flightNumber": "VJ133",
  "changeAirport": false,
  "changeStation": false,
  "stopOvernight": false
}
*/

  int? id;
  String? theClass;
  String? plane;
  String? airline;
  String? endTime;
  bool? hasStop;
  int? duration;
  String? endPoint;
  bool? lastItem;
  int? stopTime;
  bool? dayChange;
  String? startTime;
  String? stopPoint;
  String? startPoint;
  String? handBaggage;
  String? flightNumber;
  bool? changeAirport;
  bool? changeStation;
  bool? stopOvernight;

  ResponseReservationStatusDataFlightRateRateListFlightListSegment({
    this.id,
    this.theClass,
    this.plane,
    this.airline,
    this.endTime,
    this.hasStop,
    this.duration,
    this.endPoint,
    this.lastItem,
    this.stopTime,
    this.dayChange,
    this.startTime,
    this.stopPoint,
    this.startPoint,
    this.handBaggage,
    this.flightNumber,
    this.changeAirport,
    this.changeStation,
    this.stopOvernight,
  });
  ResponseReservationStatusDataFlightRateRateListFlightListSegment.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    theClass = json['class']?.toString();
    plane = json['plane']?.toString();
    airline = json['airline']?.toString();
    endTime = json['endTime']?.toString();
    hasStop = json['hasStop'];
    duration = json['duration']?.toInt();
    endPoint = json['endPoint']?.toString();
    lastItem = json['lastItem'];
    stopTime = json['stopTime']?.toInt();
    dayChange = json['dayChange'];
    startTime = json['startTime']?.toString();
    stopPoint = json['stopPoint']?.toString();
    startPoint = json['startPoint']?.toString();
    handBaggage = json['handBaggage']?.toString();
    flightNumber = json['flightNumber']?.toString();
    changeAirport = json['changeAirport'];
    changeStation = json['changeStation'];
    stopOvernight = json['stopOvernight'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['class'] = theClass;
    data['plane'] = plane;
    data['airline'] = airline;
    data['endTime'] = endTime;
    data['hasStop'] = hasStop;
    data['duration'] = duration;
    data['endPoint'] = endPoint;
    data['lastItem'] = lastItem;
    data['stopTime'] = stopTime;
    data['dayChange'] = dayChange;
    data['startTime'] = startTime;
    data['stopPoint'] = stopPoint;
    data['startPoint'] = startPoint;
    data['handBaggage'] = handBaggage;
    data['flightNumber'] = flightNumber;
    data['changeAirport'] = changeAirport;
    data['changeStation'] = changeStation;
    data['stopOvernight'] = stopOvernight;
    return data;
  }
}

class ResponseReservationStatusDataFlightRateRateListFlight {
/*
{
  "leg": 0,
  "promo": false,
  "isShow": true,
  "airline": "VJ",
  "endDate": "2022-09-20T08:15:00",
  "stopNum": 0,
  "duration": 130,
  "endPoint": "SGN",
  "flightId": 0,
  "noRefund": false,
  "fareClass": "E1_ECO",
  "startDate": "2022-09-20T06:05:00",
  "groupClass": "Eco",
  "startPoint": "HAN",
  "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
  "hasDownStop": false,
  "listSegment": [
    {
      "id": 0,
      "class": "E1_ECO",
      "plane": "Airbus A330",
      "airline": "VJ",
      "endTime": "2022-09-20T08:15:00",
      "hasStop": false,
      "duration": 130,
      "endPoint": "SGN",
      "lastItem": true,
      "stopTime": 0,
      "dayChange": false,
      "startTime": "2022-09-20T06:05:00",
      "stopPoint": "SGN",
      "startPoint": "HAN",
      "handBaggage": "07kg",
      "flightNumber": "VJ133",
      "changeAirport": false,
      "changeStation": false,
      "stopOvernight": false
    }
  ],
  "flightNumber": "VJ133"
}
*/

  int? leg;
  bool? promo;
  bool? isShow;
  String? airline;
  String? endDate;
  int? stopNum;
  int? duration;
  String? endPoint;
  int? flightId;
  bool? noRefund;
  String? fareClass;
  String? startDate;
  String? groupClass;
  String? startPoint;
  String? flightValue;
  bool? hasDownStop;
  List<ResponseReservationStatusDataFlightRateRateListFlightListSegment?>? listSegment;
  String? flightNumber;

  ResponseReservationStatusDataFlightRateRateListFlight({
    this.leg,
    this.promo,
    this.isShow,
    this.airline,
    this.endDate,
    this.stopNum,
    this.duration,
    this.endPoint,
    this.flightId,
    this.noRefund,
    this.fareClass,
    this.startDate,
    this.groupClass,
    this.startPoint,
    this.flightValue,
    this.hasDownStop,
    this.listSegment,
    this.flightNumber,
  });
  ResponseReservationStatusDataFlightRateRateListFlight.fromJson(Map<String, dynamic> json) {
    leg = json['leg']?.toInt();
    promo = json['promo'];
    isShow = json['isShow'];
    airline = json['airline']?.toString();
    endDate = json['endDate']?.toString();
    stopNum = json['stopNum']?.toInt();
    duration = json['duration']?.toInt();
    endPoint = json['endPoint']?.toString();
    flightId = json['flightId']?.toInt();
    noRefund = json['noRefund'];
    fareClass = json['fareClass']?.toString();
    startDate = json['startDate']?.toString();
    groupClass = json['groupClass']?.toString();
    startPoint = json['startPoint']?.toString();
    flightValue = json['flightValue']?.toString();
    hasDownStop = json['hasDownStop'];
    if (json['listSegment'] != null) {
      final v = json['listSegment'];
      final arr0 = <ResponseReservationStatusDataFlightRateRateListFlightListSegment>[];
      v.forEach((v) {
        arr0.add(ResponseReservationStatusDataFlightRateRateListFlightListSegment.fromJson(v));
      });
      listSegment = arr0;
    }
    flightNumber = json['flightNumber']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['leg'] = leg;
    data['promo'] = promo;
    data['isShow'] = isShow;
    data['airline'] = airline;
    data['endDate'] = endDate;
    data['stopNum'] = stopNum;
    data['duration'] = duration;
    data['endPoint'] = endPoint;
    data['flightId'] = flightId;
    data['noRefund'] = noRefund;
    data['fareClass'] = fareClass;
    data['startDate'] = startDate;
    data['groupClass'] = groupClass;
    data['startPoint'] = startPoint;
    data['flightValue'] = flightValue;
    data['hasDownStop'] = hasDownStop;
    if (listSegment != null) {
      final v = listSegment;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['listSegment'] = arr0;
    }
    data['flightNumber'] = flightNumber;
    return data;
  }
}

class ResponseReservationStatusDataFlightRateRateFlightItemListSegment {
/*
{
  "id": 0,
  "class": "E1_ECO",
  "plane": "Airbus A330",
  "airline": "VJ",
  "endTime": "2022-09-20T08:15:00",
  "hasStop": false,
  "duration": 130,
  "endPoint": "SGN",
  "lastItem": true,
  "stopTime": 0,
  "dayChange": false,
  "startTime": "2022-09-20T06:05:00",
  "stopPoint": "SGN",
  "startPoint": "HAN",
  "handBaggage": "07kg",
  "flightNumber": "VJ133",
  "changeAirport": false,
  "changeStation": false,
  "stopOvernight": false
}
*/

  int? id;
  String? theClass;
  String? plane;
  String? airline;
  String? endTime;
  bool? hasStop;
  int? duration;
  String? endPoint;
  bool? lastItem;
  int? stopTime;
  bool? dayChange;
  String? startTime;
  String? stopPoint;
  String? startPoint;
  String? handBaggage;
  String? flightNumber;
  bool? changeAirport;
  bool? changeStation;
  bool? stopOvernight;

  ResponseReservationStatusDataFlightRateRateFlightItemListSegment({
    this.id,
    this.theClass,
    this.plane,
    this.airline,
    this.endTime,
    this.hasStop,
    this.duration,
    this.endPoint,
    this.lastItem,
    this.stopTime,
    this.dayChange,
    this.startTime,
    this.stopPoint,
    this.startPoint,
    this.handBaggage,
    this.flightNumber,
    this.changeAirport,
    this.changeStation,
    this.stopOvernight,
  });
  ResponseReservationStatusDataFlightRateRateFlightItemListSegment.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    theClass = json['class']?.toString();
    plane = json['plane']?.toString();
    airline = json['airline']?.toString();
    endTime = json['endTime']?.toString();
    hasStop = json['hasStop'];
    duration = json['duration']?.toInt();
    endPoint = json['endPoint']?.toString();
    lastItem = json['lastItem'];
    stopTime = json['stopTime']?.toInt();
    dayChange = json['dayChange'];
    startTime = json['startTime']?.toString();
    stopPoint = json['stopPoint']?.toString();
    startPoint = json['startPoint']?.toString();
    handBaggage = json['handBaggage']?.toString();
    flightNumber = json['flightNumber']?.toString();
    changeAirport = json['changeAirport'];
    changeStation = json['changeStation'];
    stopOvernight = json['stopOvernight'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['class'] = theClass;
    data['plane'] = plane;
    data['airline'] = airline;
    data['endTime'] = endTime;
    data['hasStop'] = hasStop;
    data['duration'] = duration;
    data['endPoint'] = endPoint;
    data['lastItem'] = lastItem;
    data['stopTime'] = stopTime;
    data['dayChange'] = dayChange;
    data['startTime'] = startTime;
    data['stopPoint'] = stopPoint;
    data['startPoint'] = startPoint;
    data['handBaggage'] = handBaggage;
    data['flightNumber'] = flightNumber;
    data['changeAirport'] = changeAirport;
    data['changeStation'] = changeStation;
    data['stopOvernight'] = stopOvernight;
    return data;
  }
}

class ResponseReservationStatusDataFlightRateRateFlightItem {
/*
{
  "leg": 0,
  "promo": false,
  "isShow": true,
  "airline": "VJ",
  "endDate": "2022-09-20T08:15:00",
  "stopNum": 0,
  "duration": 130,
  "endPoint": "SGN",
  "flightId": 0,
  "isReturn": false,
  "noRefund": false,
  "fareClass": "E1_ECO",
  "startDate": "2022-09-20T06:05:00",
  "groupClass": "Eco",
  "startPoint": "HAN",
  "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
  "hasDownStop": false,
  "listSegment": [
    {
      "id": 0,
      "class": "E1_ECO",
      "plane": "Airbus A330",
      "airline": "VJ",
      "endTime": "2022-09-20T08:15:00",
      "hasStop": false,
      "duration": 130,
      "endPoint": "SGN",
      "lastItem": true,
      "stopTime": 0,
      "dayChange": false,
      "startTime": "2022-09-20T06:05:00",
      "stopPoint": "SGN",
      "startPoint": "HAN",
      "handBaggage": "07kg",
      "flightNumber": "VJ133",
      "changeAirport": false,
      "changeStation": false,
      "stopOvernight": false
    }
  ],
  "flightNumber": "VJ133"
}
*/

  int? leg;
  bool? promo;
  bool? isShow;
  String? airline;
  String? endDate;
  int? stopNum;
  int? duration;
  String? endPoint;
  int? flightId;
  bool? isReturn;
  bool? noRefund;
  String? fareClass;
  String? startDate;
  String? groupClass;
  String? startPoint;
  String? flightValue;
  bool? hasDownStop;
  List<ResponseReservationStatusDataFlightRateRateFlightItemListSegment?>? listSegment;
  String? flightNumber;

  ResponseReservationStatusDataFlightRateRateFlightItem({
    this.leg,
    this.promo,
    this.isShow,
    this.airline,
    this.endDate,
    this.stopNum,
    this.duration,
    this.endPoint,
    this.flightId,
    this.isReturn,
    this.noRefund,
    this.fareClass,
    this.startDate,
    this.groupClass,
    this.startPoint,
    this.flightValue,
    this.hasDownStop,
    this.listSegment,
    this.flightNumber,
  });
  ResponseReservationStatusDataFlightRateRateFlightItem.fromJson(Map<String, dynamic> json) {
    leg = json['leg']?.toInt();
    promo = json['promo'];
    isShow = json['isShow'];
    airline = json['airline']?.toString();
    endDate = json['endDate']?.toString();
    stopNum = json['stopNum']?.toInt();
    duration = json['duration']?.toInt();
    endPoint = json['endPoint']?.toString();
    flightId = json['flightId']?.toInt();
    isReturn = json['isReturn'];
    noRefund = json['noRefund'];
    fareClass = json['fareClass']?.toString();
    startDate = json['startDate']?.toString();
    groupClass = json['groupClass']?.toString();
    startPoint = json['startPoint']?.toString();
    flightValue = json['flightValue']?.toString();
    hasDownStop = json['hasDownStop'];
    if (json['listSegment'] != null) {
      final v = json['listSegment'];
      final arr0 = <ResponseReservationStatusDataFlightRateRateFlightItemListSegment>[];
      v.forEach((v) {
        arr0.add(ResponseReservationStatusDataFlightRateRateFlightItemListSegment.fromJson(v));
      });
      listSegment = arr0;
    }
    flightNumber = json['flightNumber']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['leg'] = leg;
    data['promo'] = promo;
    data['isShow'] = isShow;
    data['airline'] = airline;
    data['endDate'] = endDate;
    data['stopNum'] = stopNum;
    data['duration'] = duration;
    data['endPoint'] = endPoint;
    data['flightId'] = flightId;
    data['isReturn'] = isReturn;
    data['noRefund'] = noRefund;
    data['fareClass'] = fareClass;
    data['startDate'] = startDate;
    data['groupClass'] = groupClass;
    data['startPoint'] = startPoint;
    data['flightValue'] = flightValue;
    data['hasDownStop'] = hasDownStop;
    if (listSegment != null) {
      final v = listSegment;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['listSegment'] = arr0;
    }
    data['flightNumber'] = flightNumber;
    return data;
  }
}

class ResponseReservationStatusDataFlightRateRate {
/*
{
  "adt": 1,
  "chd": 0,
  "inf": 0,
  "leg": 0,
  "promo": false,
  "token": "flight_item_491152777647775740",
  "feeAdt": 520000,
  "feeChd": 400000,
  "feeInf": 0,
  "isShow": true,
  "taxAdt": 47920,
  "taxChd": 47920,
  "taxInf": 0,
  "airline": "VJ",
  "fareAdt": 199000,
  "fareChd": 199000,
  "fareInf": 0,
  "session": "1663400736262",
  "currency": "VND",
  "autoIssue": false,
  "itinerary": 1,
  "fareDataId": 0,
  "flightItem": {
    "leg": 0,
    "promo": false,
    "isShow": true,
    "airline": "VJ",
    "endDate": "2022-09-20T08:15:00",
    "stopNum": 0,
    "duration": 130,
    "endPoint": "SGN",
    "flightId": 0,
    "isReturn": false,
    "noRefund": false,
    "fareClass": "E1_ECO",
    "startDate": "2022-09-20T06:05:00",
    "groupClass": "Eco",
    "startPoint": "HAN",
    "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
    "hasDownStop": false,
    "listSegment": [
      {
        "id": 0,
        "class": "E1_ECO",
        "plane": "Airbus A330",
        "airline": "VJ",
        "endTime": "2022-09-20T08:15:00",
        "hasStop": false,
        "duration": 130,
        "endPoint": "SGN",
        "lastItem": true,
        "stopTime": 0,
        "dayChange": false,
        "startTime": "2022-09-20T06:05:00",
        "stopPoint": "SGN",
        "startPoint": "HAN",
        "handBaggage": "07kg",
        "flightNumber": "VJ133",
        "changeAirport": false,
        "changeStation": false,
        "stopOvernight": false
      }
    ],
    "flightNumber": "VJ133"
  },
  "listFlight": [
    {
      "leg": 0,
      "promo": false,
      "isShow": true,
      "airline": "VJ",
      "endDate": "2022-09-20T08:15:00",
      "stopNum": 0,
      "duration": 130,
      "endPoint": "SGN",
      "flightId": 0,
      "noRefund": false,
      "fareClass": "E1_ECO",
      "startDate": "2022-09-20T06:05:00",
      "groupClass": "Eco",
      "startPoint": "HAN",
      "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
      "hasDownStop": false,
      "listSegment": [
        {
          "id": 0,
          "class": "E1_ECO",
          "plane": "Airbus A330",
          "airline": "VJ",
          "endTime": "2022-09-20T08:15:00",
          "hasStop": false,
          "duration": 130,
          "endPoint": "SGN",
          "lastItem": true,
          "stopTime": 0,
          "dayChange": false,
          "startTime": "2022-09-20T06:05:00",
          "stopPoint": "SGN",
          "startPoint": "HAN",
          "handBaggage": "07kg",
          "flightNumber": "VJ133",
          "changeAirport": false,
          "changeStation": false,
          "stopOvernight": false
        }
      ],
      "flightNumber": "VJ133"
    }
  ],
  "totalPrice": 801920,
  "serviceFeeAdt": 35000,
  "serviceFeeChd": 35000,
  "serviceFeeInf": 35000,
  "totalDiscount": 0,
  "totalNetPrice": 719000,
  "totalCommission": 0,
  "totalServiceFee": 35000,
  "itineraryPassengers": [
    {
      "key": "dup_f_b_cb9c94e5e814e3e0fb8b9c58e643890c",
      "value": "tan@gmail.com0969841833-tan ta-vj_hansgn_2022-09-20t06:05:00"
    }
  ]
}
*/

  int? adt;
  int? chd;
  int? inf;
  int? leg;
  bool? promo;
  String? token;
  int? feeAdt;
  int? feeChd;
  int? feeInf;
  bool? isShow;
  int? taxAdt;
  int? taxChd;
  int? taxInf;
  String? airline;
  int? fareAdt;
  int? fareChd;
  int? fareInf;
  String? session;
  String? currency;
  bool? autoIssue;
  int? itinerary;
  int? fareDataId;
  ResponseReservationStatusDataFlightRateRateFlightItem? flightItem;
  List<ResponseReservationStatusDataFlightRateRateListFlight?>? listFlight;
  int? totalPrice;
  int? serviceFeeAdt;
  int? serviceFeeChd;
  int? serviceFeeInf;
  int? totalDiscount;
  int? totalNetPrice;
  int? totalCommission;
  int? totalServiceFee;
  List<ResponseReservationStatusDataFlightRateRateItineraryPassengers?>? itineraryPassengers;

  ResponseReservationStatusDataFlightRateRate({
    this.adt,
    this.chd,
    this.inf,
    this.leg,
    this.promo,
    this.token,
    this.feeAdt,
    this.feeChd,
    this.feeInf,
    this.isShow,
    this.taxAdt,
    this.taxChd,
    this.taxInf,
    this.airline,
    this.fareAdt,
    this.fareChd,
    this.fareInf,
    this.session,
    this.currency,
    this.autoIssue,
    this.itinerary,
    this.fareDataId,
    this.flightItem,
    this.listFlight,
    this.totalPrice,
    this.serviceFeeAdt,
    this.serviceFeeChd,
    this.serviceFeeInf,
    this.totalDiscount,
    this.totalNetPrice,
    this.totalCommission,
    this.totalServiceFee,
    this.itineraryPassengers,
  });
  ResponseReservationStatusDataFlightRateRate.fromJson(Map<String, dynamic> json) {
    adt = json['adt']?.toInt();
    chd = json['chd']?.toInt();
    inf = json['inf']?.toInt();
    leg = json['leg']?.toInt();
    promo = json['promo'];
    token = json['token']?.toString();
    feeAdt = json['feeAdt']?.toInt();
    feeChd = json['feeChd']?.toInt();
    feeInf = json['feeInf']?.toInt();
    isShow = json['isShow'];
    taxAdt = json['taxAdt']?.toInt();
    taxChd = json['taxChd']?.toInt();
    taxInf = json['taxInf']?.toInt();
    airline = json['airline']?.toString();
    fareAdt = json['fareAdt']?.toInt();
    fareChd = json['fareChd']?.toInt();
    fareInf = json['fareInf']?.toInt();
    session = json['session']?.toString();
    currency = json['currency']?.toString();
    autoIssue = json['autoIssue'];
    itinerary = json['itinerary']?.toInt();
    fareDataId = json['fareDataId']?.toInt();
    flightItem = (json['flightItem'] != null) ? ResponseReservationStatusDataFlightRateRateFlightItem.fromJson(json['flightItem']) : null;
    if (json['listFlight'] != null) {
      final v = json['listFlight'];
      final arr0 = <ResponseReservationStatusDataFlightRateRateListFlight>[];
      v.forEach((v) {
        arr0.add(ResponseReservationStatusDataFlightRateRateListFlight.fromJson(v));
      });
      listFlight = arr0;
    }
    totalPrice = json['totalPrice']?.toInt();
    serviceFeeAdt = json['serviceFeeAdt']?.toInt();
    serviceFeeChd = json['serviceFeeChd']?.toInt();
    serviceFeeInf = json['serviceFeeInf']?.toInt();
    totalDiscount = json['totalDiscount']?.toInt();
    totalNetPrice = json['totalNetPrice']?.toInt();
    totalCommission = json['totalCommission']?.toInt();
    totalServiceFee = json['totalServiceFee']?.toInt();
    if (json['itineraryPassengers'] != null) {
      final v = json['itineraryPassengers'];
      final arr0 = <ResponseReservationStatusDataFlightRateRateItineraryPassengers>[];
      v.forEach((v) {
        arr0.add(ResponseReservationStatusDataFlightRateRateItineraryPassengers.fromJson(v));
      });
      itineraryPassengers = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['adt'] = adt;
    data['chd'] = chd;
    data['inf'] = inf;
    data['leg'] = leg;
    data['promo'] = promo;
    data['token'] = token;
    data['feeAdt'] = feeAdt;
    data['feeChd'] = feeChd;
    data['feeInf'] = feeInf;
    data['isShow'] = isShow;
    data['taxAdt'] = taxAdt;
    data['taxChd'] = taxChd;
    data['taxInf'] = taxInf;
    data['airline'] = airline;
    data['fareAdt'] = fareAdt;
    data['fareChd'] = fareChd;
    data['fareInf'] = fareInf;
    data['session'] = session;
    data['currency'] = currency;
    data['autoIssue'] = autoIssue;
    data['itinerary'] = itinerary;
    data['fareDataId'] = fareDataId;
    if (flightItem != null) {
      data['flightItem'] = flightItem!.toJson();
    }
    if (listFlight != null) {
      final v = listFlight;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['listFlight'] = arr0;
    }
    data['totalPrice'] = totalPrice;
    data['serviceFeeAdt'] = serviceFeeAdt;
    data['serviceFeeChd'] = serviceFeeChd;
    data['serviceFeeInf'] = serviceFeeInf;
    data['totalDiscount'] = totalDiscount;
    data['totalNetPrice'] = totalNetPrice;
    data['totalCommission'] = totalCommission;
    data['totalServiceFee'] = totalServiceFee;
    if (itineraryPassengers != null) {
      final v = itineraryPassengers;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['itineraryPassengers'] = arr0;
    }
    return data;
  }
}

class ResponseReservationStatusDataFlightRatePassengers {
/*
{
  "type": "ADT",
  "index": 0,
  "gender": true,
  "birthday": "31082010",
  "lastName": "TAN",
  "firstName": "TA",
  "listBaggage": [
    null
  ]
}
*/

  String? type;
  int? index;
  bool? gender;
  String? birthday;
  String? lastName;
  String? firstName;
  // List<ResponseReservationStatusDataFlightRatePassengersListBaggage?>? listBaggage;

  ResponseReservationStatusDataFlightRatePassengers({
    this.type,
    this.index,
    this.gender,
    this.birthday,
    this.lastName,
    this.firstName,
    // this.listBaggage,
  });
  ResponseReservationStatusDataFlightRatePassengers.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    index = json['index']?.toInt();
    gender = json['gender'];
    birthday = json['birthday']?.toString();
    lastName = json['lastName']?.toString();
    firstName = json['firstName']?.toString();
    }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['index'] = index;
    data['gender'] = gender;
    data['birthday'] = birthday;
    data['lastName'] = lastName;
    data['firstName'] = firstName;
    return data;
  }
}

class ResponseReservationStatusDataFlightRate {
/*
{
  "id": "79a582cc-911f-47a5-8893-17cb8c264f21",
  "suggestionId": "9dbd76f5-ca71-45dc-a7f9-cde8feb7d018",
  "isSelected": true,
  "originCode": "HAN",
  "originName": "Hà Nội",
  "destinationCode": "SGN",
  "destinationName": "Hồ Chí Minh",
  "departureDate": "2022-09-19T23:05:00.000Z",
  "departureTime": "2022-09-19T23:05:00.000Z",
  "arrivalDate": "2022-09-20T01:15:00.000Z",
  "arrivalTime": "2022-09-20T01:15:00.000Z",
  "passengers": [
    {
      "type": "ADT",
      "index": 0,
      "gender": true,
      "birthday": "31082010",
      "lastName": "TAN",
      "firstName": "TA",
      "listBaggage": [
        null
      ]
    }
  ],
  "addons": [
    null
  ],
  "adultCount": 1,
  "childCount": 0,
  "infantCount": 0,
  "totalPrice": 801920,
  "bookingCategory": "DOMESTIC",
  "currency": "VND",
  "seatCount": 1,
  "flightNumber": "VJ133",
  "seatClass": "E1_ECO_Eco",
  "fareClass": "E1_ECO",
  "isReturn": false,
  "airlineProvider": "VJ",
  "rate": {
    "adt": 1,
    "chd": 0,
    "inf": 0,
    "leg": 0,
    "promo": false,
    "token": "flight_item_491152777647775740",
    "feeAdt": 520000,
    "feeChd": 400000,
    "feeInf": 0,
    "isShow": true,
    "taxAdt": 47920,
    "taxChd": 47920,
    "taxInf": 0,
    "airline": "VJ",
    "fareAdt": 199000,
    "fareChd": 199000,
    "fareInf": 0,
    "session": "1663400736262",
    "currency": "VND",
    "autoIssue": false,
    "itinerary": 1,
    "fareDataId": 0,
    "flightItem": {
      "leg": 0,
      "promo": false,
      "isShow": true,
      "airline": "VJ",
      "endDate": "2022-09-20T08:15:00",
      "stopNum": 0,
      "duration": 130,
      "endPoint": "SGN",
      "flightId": 0,
      "isReturn": false,
      "noRefund": false,
      "fareClass": "E1_ECO",
      "startDate": "2022-09-20T06:05:00",
      "groupClass": "Eco",
      "startPoint": "HAN",
      "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
      "hasDownStop": false,
      "listSegment": [
        {
          "id": 0,
          "class": "E1_ECO",
          "plane": "Airbus A330",
          "airline": "VJ",
          "endTime": "2022-09-20T08:15:00",
          "hasStop": false,
          "duration": 130,
          "endPoint": "SGN",
          "lastItem": true,
          "stopTime": 0,
          "dayChange": false,
          "startTime": "2022-09-20T06:05:00",
          "stopPoint": "SGN",
          "startPoint": "HAN",
          "handBaggage": "07kg",
          "flightNumber": "VJ133",
          "changeAirport": false,
          "changeStation": false,
          "stopOvernight": false
        }
      ],
      "flightNumber": "VJ133"
    },
    "listFlight": [
      {
        "leg": 0,
        "promo": false,
        "isShow": true,
        "airline": "VJ",
        "endDate": "2022-09-20T08:15:00",
        "stopNum": 0,
        "duration": 130,
        "endPoint": "SGN",
        "flightId": 0,
        "noRefund": false,
        "fareClass": "E1_ECO",
        "startDate": "2022-09-20T06:05:00",
        "groupClass": "Eco",
        "startPoint": "HAN",
        "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
        "hasDownStop": false,
        "listSegment": [
          {
            "id": 0,
            "class": "E1_ECO",
            "plane": "Airbus A330",
            "airline": "VJ",
            "endTime": "2022-09-20T08:15:00",
            "hasStop": false,
            "duration": 130,
            "endPoint": "SGN",
            "lastItem": true,
            "stopTime": 0,
            "dayChange": false,
            "startTime": "2022-09-20T06:05:00",
            "stopPoint": "SGN",
            "startPoint": "HAN",
            "handBaggage": "07kg",
            "flightNumber": "VJ133",
            "changeAirport": false,
            "changeStation": false,
            "stopOvernight": false
          }
        ],
        "flightNumber": "VJ133"
      }
    ],
    "totalPrice": 801920,
    "serviceFeeAdt": 35000,
    "serviceFeeChd": 35000,
    "serviceFeeInf": 35000,
    "totalDiscount": 0,
    "totalNetPrice": 719000,
    "totalCommission": 0,
    "totalServiceFee": 35000,
    "itineraryPassengers": [
      {
        "key": "dup_f_b_cb9c94e5e814e3e0fb8b9c58e643890c",
        "value": "tan@gmail.com0969841833-tan ta-vj_hansgn_2022-09-20t06:05:00"
      }
    ]
  },
  "priceInfo": null,
  "utilityFee": null,
  "providerBookingCode": "VJ133|HAN-SGN|202209200605-202209200815",
  "createdAt": "2022-09-17T07:47:07.456Z",
  "updatedAt": "2022-09-17T07:47:07.456Z",
  "session": "1663400736262",
  "fareDataId": 0,
  "provider": "VJ",
  "preReservedPrice": null,
  "hasPromo": false,
  "differencePrice": null,
  "leg": 0,
  "itinerary": 1,
  "departureTimezoneOffset": null,
  "arrivalTimezoneOffset": null,
  "operator": null,
  "group_class": "Eco"
}
*/

  String? id;
  String? suggestionId;
  bool? isSelected;
  String? originCode;
  String? originName;
  String? destinationCode;
  String? destinationName;
  String? departureDate;
  String? departureTime;
  String? arrivalDate;
  String? arrivalTime;
  List<ResponseReservationStatusDataFlightRatePassengers?>? passengers;
  // List<ResponseReservationStatusDataFlightRateAddons?>? addons;
  int? adultCount;
  int? childCount;
  int? infantCount;
  int? totalPrice;
  String? bookingCategory;
  String? currency;
  int? seatCount;
  String? flightNumber;
  String? seatClass;
  String? fareClass;
  bool? isReturn;
  String? airlineProvider;
  ResponseReservationStatusDataFlightRateRate? rate;
  String? priceInfo;
  String? utilityFee;
  String? providerBookingCode;
  String? createdAt;
  String? updatedAt;
  String? session;
  int? fareDataId;
  String? provider;
  String? preReservedPrice;
  bool? hasPromo;
  String? differencePrice;
  int? leg;
  int? itinerary;
  String? departureTimezoneOffset;
  String? arrivalTimezoneOffset;
  String? theOperator;
  String? groupClass;

  ResponseReservationStatusDataFlightRate({
    this.id,
    this.suggestionId,
    this.isSelected,
    this.originCode,
    this.originName,
    this.destinationCode,
    this.destinationName,
    this.departureDate,
    this.departureTime,
    this.arrivalDate,
    this.arrivalTime,
    this.passengers,
    // this.addons,
    this.adultCount,
    this.childCount,
    this.infantCount,
    this.totalPrice,
    this.bookingCategory,
    this.currency,
    this.seatCount,
    this.flightNumber,
    this.seatClass,
    this.fareClass,
    this.isReturn,
    this.airlineProvider,
    this.rate,
    this.priceInfo,
    this.utilityFee,
    this.providerBookingCode,
    this.createdAt,
    this.updatedAt,
    this.session,
    this.fareDataId,
    this.provider,
    this.preReservedPrice,
    this.hasPromo,
    this.differencePrice,
    this.leg,
    this.itinerary,
    this.departureTimezoneOffset,
    this.arrivalTimezoneOffset,
    this.theOperator,
    this.groupClass,
  });
  ResponseReservationStatusDataFlightRate.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    suggestionId = json['suggestionId']?.toString();
    isSelected = json['isSelected'];
    originCode = json['originCode']?.toString();
    originName = json['originName']?.toString();
    destinationCode = json['destinationCode']?.toString();
    destinationName = json['destinationName']?.toString();
    departureDate = json['departureDate']?.toString();
    departureTime = json['departureTime']?.toString();
    arrivalDate = json['arrivalDate']?.toString();
    arrivalTime = json['arrivalTime']?.toString();
    if (json['passengers'] != null) {
      final v = json['passengers'];
      final arr0 = <ResponseReservationStatusDataFlightRatePassengers>[];
      v.forEach((v) {
        arr0.add(ResponseReservationStatusDataFlightRatePassengers.fromJson(v));
      });
      passengers = arr0;
    }
    adultCount = json['adultCount']?.toInt();
    childCount = json['childCount']?.toInt();
    infantCount = json['infantCount']?.toInt();
    totalPrice = json['totalPrice']?.toInt();
    bookingCategory = json['bookingCategory']?.toString();
    currency = json['currency']?.toString();
    seatCount = json['seatCount']?.toInt();
    flightNumber = json['flightNumber']?.toString();
    seatClass = json['seatClass']?.toString();
    fareClass = json['fareClass']?.toString();
    isReturn = json['isReturn'];
    airlineProvider = json['airlineProvider']?.toString();
    rate = (json['rate'] != null) ? ResponseReservationStatusDataFlightRateRate.fromJson(json['rate']) : null;
    priceInfo = json['priceInfo']?.toString();
    utilityFee = json['utilityFee']?.toString();
    providerBookingCode = json['providerBookingCode']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    session = json['session']?.toString();
    fareDataId = json['fareDataId']?.toInt();
    provider = json['provider']?.toString();
    preReservedPrice = json['preReservedPrice']?.toString();
    hasPromo = json['hasPromo'];
    differencePrice = json['differencePrice']?.toString();
    leg = json['leg']?.toInt();
    itinerary = json['itinerary']?.toInt();
    departureTimezoneOffset = json['departureTimezoneOffset']?.toString();
    arrivalTimezoneOffset = json['arrivalTimezoneOffset']?.toString();
    theOperator = json['operator']?.toString();
    groupClass = json['group_class']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['suggestionId'] = suggestionId;
    data['isSelected'] = isSelected;
    data['originCode'] = originCode;
    data['originName'] = originName;
    data['destinationCode'] = destinationCode;
    data['destinationName'] = destinationName;
    data['departureDate'] = departureDate;
    data['departureTime'] = departureTime;
    data['arrivalDate'] = arrivalDate;
    data['arrivalTime'] = arrivalTime;
    if (passengers != null) {
      final v = passengers;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['passengers'] = arr0;
    }
    data['adultCount'] = adultCount;
    data['childCount'] = childCount;
    data['infantCount'] = infantCount;
    data['totalPrice'] = totalPrice;
    data['bookingCategory'] = bookingCategory;
    data['currency'] = currency;
    data['seatCount'] = seatCount;
    data['flightNumber'] = flightNumber;
    data['seatClass'] = seatClass;
    data['fareClass'] = fareClass;
    data['isReturn'] = isReturn;
    data['airlineProvider'] = airlineProvider;
    if (rate != null) {
    data['rate'] = rate!.toJson();
    }
    data['priceInfo'] = priceInfo;
    data['utilityFee'] = utilityFee;
    data['providerBookingCode'] = providerBookingCode;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['session'] = session;
    data['fareDataId'] = fareDataId;
    data['provider'] = provider;
    data['preReservedPrice'] = preReservedPrice;
    data['hasPromo'] = hasPromo;
    data['differencePrice'] = differencePrice;
    data['leg'] = leg;
    data['itinerary'] = itinerary;
    data['departureTimezoneOffset'] = departureTimezoneOffset;
    data['arrivalTimezoneOffset'] = arrivalTimezoneOffset;
    data['operator'] = theOperator;
    data['group_class'] = groupClass;
    return data;
  }
}

class ResponseReservationStatusData {
/*
{
  "id": 43010,
  "flightRateId": "79a582cc-911f-47a5-8893-17cb8c264f21",
  "packageCode": "VJXGNC",
  "apiProvider": "VJ",
  "packageStatus": "BOOKED",
  "packageStatusCode": null,
  "providerBookingCode": "VJXGNC",
  "bookingId": 0,
  "orderExpiredAt": "2022-09-17T08:22:07.000Z",
  "totalPrice": 801920,
  "createdAt": "2022-09-17T07:47:07.456Z",
  "updatedAt": "2022-09-17T07:47:07.924Z",
  "bookingRequestId": "5a5fba9f-8dd1-4833-aa40-3a97dd8e4084",
  "bookingSuggestionId": "9dbd76f5-ca71-45dc-a7f9-cde8feb7d018",
  "leg": 0,
  "gdsCode": null,
  "flight": "VJ133|HAN-SGN|202209200605-202209200815",
  "differencePrice": null,
  "sendMailStatus": 1,
  "reservationKey": "MTY2MzQwMDgyNzg1MA==",
  "ticketNumber": null,
  "flightRate": {
    "id": "79a582cc-911f-47a5-8893-17cb8c264f21",
    "suggestionId": "9dbd76f5-ca71-45dc-a7f9-cde8feb7d018",
    "isSelected": true,
    "originCode": "HAN",
    "originName": "Hà Nội",
    "destinationCode": "SGN",
    "destinationName": "Hồ Chí Minh",
    "departureDate": "2022-09-19T23:05:00.000Z",
    "departureTime": "2022-09-19T23:05:00.000Z",
    "arrivalDate": "2022-09-20T01:15:00.000Z",
    "arrivalTime": "2022-09-20T01:15:00.000Z",
    "passengers": [
      {
        "type": "ADT",
        "index": 0,
        "gender": true,
        "birthday": "31082010",
        "lastName": "TAN",
        "firstName": "TA",
        "listBaggage": [
          null
        ]
      }
    ],
    "addons": [
      null
    ],
    "adultCount": 1,
    "childCount": 0,
    "infantCount": 0,
    "totalPrice": 801920,
    "bookingCategory": "DOMESTIC",
    "currency": "VND",
    "seatCount": 1,
    "flightNumber": "VJ133",
    "seatClass": "E1_ECO_Eco",
    "fareClass": "E1_ECO",
    "isReturn": false,
    "airlineProvider": "VJ",
    "rate": {
      "adt": 1,
      "chd": 0,
      "inf": 0,
      "leg": 0,
      "promo": false,
      "token": "flight_item_491152777647775740",
      "feeAdt": 520000,
      "feeChd": 400000,
      "feeInf": 0,
      "isShow": true,
      "taxAdt": 47920,
      "taxChd": 47920,
      "taxInf": 0,
      "airline": "VJ",
      "fareAdt": 199000,
      "fareChd": 199000,
      "fareInf": 0,
      "session": "1663400736262",
      "currency": "VND",
      "autoIssue": false,
      "itinerary": 1,
      "fareDataId": 0,
      "flightItem": {
        "leg": 0,
        "promo": false,
        "isShow": true,
        "airline": "VJ",
        "endDate": "2022-09-20T08:15:00",
        "stopNum": 0,
        "duration": 130,
        "endPoint": "SGN",
        "flightId": 0,
        "isReturn": false,
        "noRefund": false,
        "fareClass": "E1_ECO",
        "startDate": "2022-09-20T06:05:00",
        "groupClass": "Eco",
        "startPoint": "HAN",
        "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
        "hasDownStop": false,
        "listSegment": [
          {
            "id": 0,
            "class": "E1_ECO",
            "plane": "Airbus A330",
            "airline": "VJ",
            "endTime": "2022-09-20T08:15:00",
            "hasStop": false,
            "duration": 130,
            "endPoint": "SGN",
            "lastItem": true,
            "stopTime": 0,
            "dayChange": false,
            "startTime": "2022-09-20T06:05:00",
            "stopPoint": "SGN",
            "startPoint": "HAN",
            "handBaggage": "07kg",
            "flightNumber": "VJ133",
            "changeAirport": false,
            "changeStation": false,
            "stopOvernight": false
          }
        ],
        "flightNumber": "VJ133"
      },
      "listFlight": [
        {
          "leg": 0,
          "promo": false,
          "isShow": true,
          "airline": "VJ",
          "endDate": "2022-09-20T08:15:00",
          "stopNum": 0,
          "duration": 130,
          "endPoint": "SGN",
          "flightId": 0,
          "noRefund": false,
          "fareClass": "E1_ECO",
          "startDate": "2022-09-20T06:05:00",
          "groupClass": "Eco",
          "startPoint": "HAN",
          "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
          "hasDownStop": false,
          "listSegment": [
            {
              "id": 0,
              "class": "E1_ECO",
              "plane": "Airbus A330",
              "airline": "VJ",
              "endTime": "2022-09-20T08:15:00",
              "hasStop": false,
              "duration": 130,
              "endPoint": "SGN",
              "lastItem": true,
              "stopTime": 0,
              "dayChange": false,
              "startTime": "2022-09-20T06:05:00",
              "stopPoint": "SGN",
              "startPoint": "HAN",
              "handBaggage": "07kg",
              "flightNumber": "VJ133",
              "changeAirport": false,
              "changeStation": false,
              "stopOvernight": false
            }
          ],
          "flightNumber": "VJ133"
        }
      ],
      "totalPrice": 801920,
      "serviceFeeAdt": 35000,
      "serviceFeeChd": 35000,
      "serviceFeeInf": 35000,
      "totalDiscount": 0,
      "totalNetPrice": 719000,
      "totalCommission": 0,
      "totalServiceFee": 35000,
      "itineraryPassengers": [
        {
          "key": "dup_f_b_cb9c94e5e814e3e0fb8b9c58e643890c",
          "value": "tan@gmail.com0969841833-tan ta-vj_hansgn_2022-09-20t06:05:00"
        }
      ]
    },
    "priceInfo": null,
    "utilityFee": null,
    "providerBookingCode": "VJ133|HAN-SGN|202209200605-202209200815",
    "createdAt": "2022-09-17T07:47:07.456Z",
    "updatedAt": "2022-09-17T07:47:07.456Z",
    "session": "1663400736262",
    "fareDataId": 0,
    "provider": "VJ",
    "preReservedPrice": null,
    "hasPromo": false,
    "differencePrice": null,
    "leg": 0,
    "itinerary": 1,
    "departureTimezoneOffset": null,
    "arrivalTimezoneOffset": null,
    "operator": null,
    "group_class": "Eco"
  }
}
*/

  int? id;
  String? flightRateId;
  String? packageCode;
  String? apiProvider;
  String? packageStatus;
  String? packageStatusCode;
  String? providerBookingCode;
  int? bookingId;
  String? orderExpiredAt;
  int? totalPrice;
  String? createdAt;
  String? updatedAt;
  String? bookingRequestId;
  String? bookingSuggestionId;
  int? leg;
  String? gdsCode;
  String? flight;
  String? differencePrice;
  int? sendMailStatus;
  String? reservationKey;
  String? ticketNumber;
  ResponseReservationStatusDataFlightRate? flightRate;

  ResponseReservationStatusData({
    this.id,
    this.flightRateId,
    this.packageCode,
    this.apiProvider,
    this.packageStatus,
    this.packageStatusCode,
    this.providerBookingCode,
    this.bookingId,
    this.orderExpiredAt,
    this.totalPrice,
    this.createdAt,
    this.updatedAt,
    this.bookingRequestId,
    this.bookingSuggestionId,
    this.leg,
    this.gdsCode,
    this.flight,
    this.differencePrice,
    this.sendMailStatus,
    this.reservationKey,
    this.ticketNumber,
    this.flightRate,
  });
  ResponseReservationStatusData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    flightRateId = json['flightRateId']?.toString();
    packageCode = json['packageCode']?.toString();
    apiProvider = json['apiProvider']?.toString();
    packageStatus = json['packageStatus']?.toString();
    packageStatusCode = json['packageStatusCode']?.toString();
    providerBookingCode = json['providerBookingCode']?.toString();
    bookingId = json['bookingId']?.toInt();
    orderExpiredAt = json['orderExpiredAt']?.toString();
    totalPrice = json['totalPrice']?.toInt();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    bookingRequestId = json['bookingRequestId']?.toString();
    bookingSuggestionId = json['bookingSuggestionId']?.toString();
    leg = json['leg']?.toInt();
    gdsCode = json['gdsCode']?.toString();
    flight = json['flight']?.toString();
    differencePrice = json['differencePrice']?.toString();
    sendMailStatus = json['sendMailStatus']?.toInt();
    reservationKey = json['reservationKey']?.toString();
    ticketNumber = json['ticketNumber']?.toString();
    flightRate = (json['flightRate'] != null) ? ResponseReservationStatusDataFlightRate.fromJson(json['flightRate']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['flightRateId'] = flightRateId;
    data['packageCode'] = packageCode;
    data['apiProvider'] = apiProvider;
    data['packageStatus'] = packageStatus;
    data['packageStatusCode'] = packageStatusCode;
    data['providerBookingCode'] = providerBookingCode;
    data['bookingId'] = bookingId;
    data['orderExpiredAt'] = orderExpiredAt;
    data['totalPrice'] = totalPrice;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['bookingRequestId'] = bookingRequestId;
    data['bookingSuggestionId'] = bookingSuggestionId;
    data['leg'] = leg;
    data['gdsCode'] = gdsCode;
    data['flight'] = flight;
    data['differencePrice'] = differencePrice;
    data['sendMailStatus'] = sendMailStatus;
    data['reservationKey'] = reservationKey;
    data['ticketNumber'] = ticketNumber;
    if (flightRate != null) {
      data['flightRate'] = flightRate!.toJson();
    }
    return data;
  }
}

class ResponseReservationStatus {
/*
{
  "status": 200,
  "message": "Successful!",
  "data": [
    {
      "id": 43010,
      "flightRateId": "79a582cc-911f-47a5-8893-17cb8c264f21",
      "packageCode": "VJXGNC",
      "apiProvider": "VJ",
      "packageStatus": "BOOKED",
      "packageStatusCode": null,
      "providerBookingCode": "VJXGNC",
      "bookingId": 0,
      "orderExpiredAt": "2022-09-17T08:22:07.000Z",
      "totalPrice": 801920,
      "createdAt": "2022-09-17T07:47:07.456Z",
      "updatedAt": "2022-09-17T07:47:07.924Z",
      "bookingRequestId": "5a5fba9f-8dd1-4833-aa40-3a97dd8e4084",
      "bookingSuggestionId": "9dbd76f5-ca71-45dc-a7f9-cde8feb7d018",
      "leg": 0,
      "gdsCode": null,
      "flight": "VJ133|HAN-SGN|202209200605-202209200815",
      "differencePrice": null,
      "sendMailStatus": 1,
      "reservationKey": "MTY2MzQwMDgyNzg1MA==",
      "ticketNumber": null,
      "flightRate": {
        "id": "79a582cc-911f-47a5-8893-17cb8c264f21",
        "suggestionId": "9dbd76f5-ca71-45dc-a7f9-cde8feb7d018",
        "isSelected": true,
        "originCode": "HAN",
        "originName": "Hà Nội",
        "destinationCode": "SGN",
        "destinationName": "Hồ Chí Minh",
        "departureDate": "2022-09-19T23:05:00.000Z",
        "departureTime": "2022-09-19T23:05:00.000Z",
        "arrivalDate": "2022-09-20T01:15:00.000Z",
        "arrivalTime": "2022-09-20T01:15:00.000Z",
        "passengers": [
          {
            "type": "ADT",
            "index": 0,
            "gender": true,
            "birthday": "31082010",
            "lastName": "TAN",
            "firstName": "TA",
            "listBaggage": [
              null
            ]
          }
        ],
        "addons": [
          null
        ],
        "adultCount": 1,
        "childCount": 0,
        "infantCount": 0,
        "totalPrice": 801920,
        "bookingCategory": "DOMESTIC",
        "currency": "VND",
        "seatCount": 1,
        "flightNumber": "VJ133",
        "seatClass": "E1_ECO_Eco",
        "fareClass": "E1_ECO",
        "isReturn": false,
        "airlineProvider": "VJ",
        "rate": {
          "adt": 1,
          "chd": 0,
          "inf": 0,
          "leg": 0,
          "promo": false,
          "token": "flight_item_491152777647775740",
          "feeAdt": 520000,
          "feeChd": 400000,
          "feeInf": 0,
          "isShow": true,
          "taxAdt": 47920,
          "taxChd": 47920,
          "taxInf": 0,
          "airline": "VJ",
          "fareAdt": 199000,
          "fareChd": 199000,
          "fareInf": 0,
          "session": "1663400736262",
          "currency": "VND",
          "autoIssue": false,
          "itinerary": 1,
          "fareDataId": 0,
          "flightItem": {
            "leg": 0,
            "promo": false,
            "isShow": true,
            "airline": "VJ",
            "endDate": "2022-09-20T08:15:00",
            "stopNum": 0,
            "duration": 130,
            "endPoint": "SGN",
            "flightId": 0,
            "isReturn": false,
            "noRefund": false,
            "fareClass": "E1_ECO",
            "startDate": "2022-09-20T06:05:00",
            "groupClass": "Eco",
            "startPoint": "HAN",
            "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
            "hasDownStop": false,
            "listSegment": [
              {
                "id": 0,
                "class": "E1_ECO",
                "plane": "Airbus A330",
                "airline": "VJ",
                "endTime": "2022-09-20T08:15:00",
                "hasStop": false,
                "duration": 130,
                "endPoint": "SGN",
                "lastItem": true,
                "stopTime": 0,
                "dayChange": false,
                "startTime": "2022-09-20T06:05:00",
                "stopPoint": "SGN",
                "startPoint": "HAN",
                "handBaggage": "07kg",
                "flightNumber": "VJ133",
                "changeAirport": false,
                "changeStation": false,
                "stopOvernight": false
              }
            ],
            "flightNumber": "VJ133"
          },
          "listFlight": [
            {
              "leg": 0,
              "promo": false,
              "isShow": true,
              "airline": "VJ",
              "endDate": "2022-09-20T08:15:00",
              "stopNum": 0,
              "duration": 130,
              "endPoint": "SGN",
              "flightId": 0,
              "noRefund": false,
              "fareClass": "E1_ECO",
              "startDate": "2022-09-20T06:05:00",
              "groupClass": "Eco",
              "startPoint": "HAN",
              "flightValue": "VJ133|HAN-SGN|202209200605-202209200815",
              "hasDownStop": false,
              "listSegment": [
                {
                  "id": 0,
                  "class": "E1_ECO",
                  "plane": "Airbus A330",
                  "airline": "VJ",
                  "endTime": "2022-09-20T08:15:00",
                  "hasStop": false,
                  "duration": 130,
                  "endPoint": "SGN",
                  "lastItem": true,
                  "stopTime": 0,
                  "dayChange": false,
                  "startTime": "2022-09-20T06:05:00",
                  "stopPoint": "SGN",
                  "startPoint": "HAN",
                  "handBaggage": "07kg",
                  "flightNumber": "VJ133",
                  "changeAirport": false,
                  "changeStation": false,
                  "stopOvernight": false
                }
              ],
              "flightNumber": "VJ133"
            }
          ],
          "totalPrice": 801920,
          "serviceFeeAdt": 35000,
          "serviceFeeChd": 35000,
          "serviceFeeInf": 35000,
          "totalDiscount": 0,
          "totalNetPrice": 719000,
          "totalCommission": 0,
          "totalServiceFee": 35000,
          "itineraryPassengers": [
            {
              "key": "dup_f_b_cb9c94e5e814e3e0fb8b9c58e643890c",
              "value": "tan@gmail.com0969841833-tan ta-vj_hansgn_2022-09-20t06:05:00"
            }
          ]
        },
        "priceInfo": null,
        "utilityFee": null,
        "providerBookingCode": "VJ133|HAN-SGN|202209200605-202209200815",
        "createdAt": "2022-09-17T07:47:07.456Z",
        "updatedAt": "2022-09-17T07:47:07.456Z",
        "session": "1663400736262",
        "fareDataId": 0,
        "provider": "VJ",
        "preReservedPrice": null,
        "hasPromo": false,
        "differencePrice": null,
        "leg": 0,
        "itinerary": 1,
        "departureTimezoneOffset": null,
        "arrivalTimezoneOffset": null,
        "operator": null,
        "group_class": "Eco"
      }
    }
  ]
}
*/

  int? status;
  String? message;
  List<ResponseReservationStatusData?>? data;

  ResponseReservationStatus({
    this.status,
    this.message,
    this.data,
  });
  ResponseReservationStatus.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toInt();
    message = json['message']?.toString();
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <ResponseReservationStatusData>[];
      v.forEach((v) {
        arr0.add(ResponseReservationStatusData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}
