///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ResponseDetailHotelDataResultsProfileNotes {
/*
{
  "vntrip_account": "hien.t.trinh@vntrip.vn",
  "content": "KS đã nói ko muốn nhận khách từ Vntrip ",
  "datetime": "2017-11-18T03:51:37.436Z"
}
*/

  String? vntripAccount;
  String? content;
  String? datetime;

  ResponseDetailHotelDataResultsProfileNotes({
    this.vntripAccount,
    this.content,
    this.datetime,
  });
  ResponseDetailHotelDataResultsProfileNotes.fromJson(Map<String, dynamic> json) {
    vntripAccount = json['vntrip_account']?.toString();
    content = json['content']?.toString();
    datetime = json['datetime']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['vntrip_account'] = vntripAccount;
    data['content'] = content;
    data['datetime'] = datetime;
    return data;
  }
}

class ResponseDetailHotelDataResultsProfilePosition {
/*
{
  "key": "old_town"
}
*/

  String? key;

  ResponseDetailHotelDataResultsProfilePosition({
    this.key,
  });
  ResponseDetailHotelDataResultsProfilePosition.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    return data;
  }
}

class ResponseDetailHotelDataResultsProfileCustomerSourceMarket {
/*
{
  "key": "others",
  "value": 100,
  "name": "Nhiều nguồn"
}
*/

  String? key;
  int? value;
  String? name;

  ResponseDetailHotelDataResultsProfileCustomerSourceMarket({
    this.key,
    this.value,
    this.name,
  });
  ResponseDetailHotelDataResultsProfileCustomerSourceMarket.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
    value = json['value']?.toInt();
    name = json['name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    data['value'] = value;
    data['name'] = name;
    return data;
  }
}

class ResponseDetailHotelDataResultsProfileCustomerMarket {
/*
{
  "key": "eu_na"
}
*/

  String? key;

  ResponseDetailHotelDataResultsProfileCustomerMarket({
    this.key,
  });
  ResponseDetailHotelDataResultsProfileCustomerMarket.fromJson(Map<String, dynamic> json) {
    key = json['key']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['key'] = key;
    return data;
  }
}

class ResponseDetailHotelDataResultsProfile {
/*
{
  "id": 15,
  "hotel_id": 439,
  "customer_market": [
    {
      "key": "eu_na"
    }
  ],
  "customer_source_market": [
    {
      "key": "others",
      "value": 100,
      "name": "Nhiều nguồn"
    }
  ],
  "position": [
    {
      "key": "old_town"
    }
  ],
  "notes": [
    {
      "vntrip_account": "hien.t.trinh@vntrip.vn",
      "content": "KS đã nói ko muốn nhận khách từ Vntrip ",
      "datetime": "2017-11-18T03:51:37.436Z"
    }
  ],
  "has_invoice": true
}
*/

  int? id;
  int? hotelId;
  List<ResponseDetailHotelDataResultsProfileCustomerMarket?>? customerMarket;
  List<ResponseDetailHotelDataResultsProfileCustomerSourceMarket?>? customerSourceMarket;
  List<ResponseDetailHotelDataResultsProfilePosition?>? position;
  List<ResponseDetailHotelDataResultsProfileNotes?>? notes;
  bool? hasInvoice;

  ResponseDetailHotelDataResultsProfile({
    this.id,
    this.hotelId,
    this.customerMarket,
    this.customerSourceMarket,
    this.position,
    this.notes,
    this.hasInvoice,
  });
  ResponseDetailHotelDataResultsProfile.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    hotelId = json['hotel_id']?.toInt();
    if (json['customer_market'] != null) {
      final v = json['customer_market'];
      final arr0 = <ResponseDetailHotelDataResultsProfileCustomerMarket>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsProfileCustomerMarket.fromJson(v));
      });
      customerMarket = arr0;
    }
    if (json['customer_source_market'] != null) {
      final v = json['customer_source_market'];
      final arr0 = <ResponseDetailHotelDataResultsProfileCustomerSourceMarket>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsProfileCustomerSourceMarket.fromJson(v));
      });
      customerSourceMarket = arr0;
    }
    if (json['position'] != null) {
      final v = json['position'];
      final arr0 = <ResponseDetailHotelDataResultsProfilePosition>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsProfilePosition.fromJson(v));
      });
      position = arr0;
    }
    if (json['notes'] != null) {
      final v = json['notes'];
      final arr0 = <ResponseDetailHotelDataResultsProfileNotes>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsProfileNotes.fromJson(v));
      });
      notes = arr0;
    }
    hasInvoice = json['has_invoice'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['hotel_id'] = hotelId;
    if (customerMarket != null) {
      final v = customerMarket;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['customer_market'] = arr0;
    }
    if (customerSourceMarket != null) {
      final v = customerSourceMarket;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['customer_source_market'] = arr0;
    }
    if (position != null) {
      final v = position;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['position'] = arr0;
    }
    if (notes != null) {
      final v = notes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['notes'] = arr0;
    }
    data['has_invoice'] = hasInvoice;
    return data;
  }
}

class ResponseDetailHotelDataResultsImages_360 {
/*
{
  "id": 3343,
  "hotel_id": 439,
  "path_file": "439/s1/"
}
*/

  int? id;
  int? hotelId;
  String? pathFile;

  ResponseDetailHotelDataResultsImages_360({
    this.id,
    this.hotelId,
    this.pathFile,
  });
  ResponseDetailHotelDataResultsImages_360.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    hotelId = json['hotel_id']?.toInt();
    pathFile = json['path_file']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['hotel_id'] = hotelId;
    data['path_file'] = pathFile;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilityGroups {
/*
{
  "group_id": 53,
  "group_name": "Wifi",
  "group_order": 2,
  "key": "wifi"
}
*/

  int? groupId;
  String? groupName;
  int? groupOrder;
  String? key;

  ResponseDetailHotelDataResultsFacilityGroups({
    this.groupId,
    this.groupName,
    this.groupOrder,
    this.key,
  });
  ResponseDetailHotelDataResultsFacilityGroups.fromJson(Map<String, dynamic> json) {
    groupId = json['group_id']?.toInt();
    groupName = json['group_name']?.toString();
    groupOrder = json['group_order']?.toInt();
    key = json['key']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['group_id'] = groupId;
    data['group_name'] = groupName;
    data['group_order'] = groupOrder;
    data['key'] = key;
    return data;
  }
}

class ResponseDetailHotelDataResultsCategoriesOthers {
/*
{
  "name": "Others",
  "name_vi": "Dịch vụ khác"
}
*/

  String? name;
  String? nameVi;

  ResponseDetailHotelDataResultsCategoriesOthers({
    this.name,
    this.nameVi,
  });
  ResponseDetailHotelDataResultsCategoriesOthers.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['name_vi'] = nameVi;
    return data;
  }
}

class ResponseDetailHotelDataResultsCategoriesInternet {
/*
{
  "name": "Internet",
  "name_vi": "Internet"
}
*/

  String? name;
  String? nameVi;

  ResponseDetailHotelDataResultsCategoriesInternet({
    this.name,
    this.nameVi,
  });
  ResponseDetailHotelDataResultsCategoriesInternet.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['name_vi'] = nameVi;
    return data;
  }
}

class ResponseDetailHotelDataResultsCategoriesReceptionServices {
/*
{
  "name": "Reception services",
  "name_vi": "Dịch vụ lễ tân"
}
*/

  String? name;
  String? nameVi;

  ResponseDetailHotelDataResultsCategoriesReceptionServices({
    this.name,
    this.nameVi,
  });
  ResponseDetailHotelDataResultsCategoriesReceptionServices.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['name_vi'] = nameVi;
    return data;
  }
}

class ResponseDetailHotelDataResultsCategoriesLanguagesSpoken {
/*
{
  "name": "Languages Spoken",
  "name_vi": "Ngôn ngữ sử dụng"
}
*/

  String? name;
  String? nameVi;

  ResponseDetailHotelDataResultsCategoriesLanguagesSpoken({
    this.name,
    this.nameVi,
  });
  ResponseDetailHotelDataResultsCategoriesLanguagesSpoken.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['name_vi'] = nameVi;
    return data;
  }
}

class ResponseDetailHotelDataResultsCategoriesCleaningServices {
/*
{
  "name": "Cleaning services",
  "name_vi": "Dịch vụ lau dọn"
}
*/

  String? name;
  String? nameVi;

  ResponseDetailHotelDataResultsCategoriesCleaningServices({
    this.name,
    this.nameVi,
  });
  ResponseDetailHotelDataResultsCategoriesCleaningServices.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['name_vi'] = nameVi;
    return data;
  }
}

class ResponseDetailHotelDataResultsCategoriesTransportation {
/*
{
  "name": "Transportation",
  "name_vi": "Phương tiện đi lại"
}
*/

  String? name;
  String? nameVi;

  ResponseDetailHotelDataResultsCategoriesTransportation({
    this.name,
    this.nameVi,
  });
  ResponseDetailHotelDataResultsCategoriesTransportation.fromJson(Map<String, dynamic> json) {
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['name'] = name;
    data['name_vi'] = nameVi;
    return data;
  }
}

class ResponseDetailHotelDataResultsCategories {
/*
{
  "transportation": {
    "name": "Transportation",
    "name_vi": "Phương tiện đi lại"
  },
  "cleaning-services": {
    "name": "Cleaning services",
    "name_vi": "Dịch vụ lau dọn"
  },
  "languages-spoken": {
    "name": "Languages Spoken",
    "name_vi": "Ngôn ngữ sử dụng"
  },
  "reception-services": {
    "name": "Reception services",
    "name_vi": "Dịch vụ lễ tân"
  },
  "internet": {
    "name": "Internet",
    "name_vi": "Internet"
  },
  "others": {
    "name": "Others",
    "name_vi": "Dịch vụ khác"
  }
}
*/

  ResponseDetailHotelDataResultsCategoriesTransportation? transportation;
  ResponseDetailHotelDataResultsCategoriesCleaningServices? cleaningServices;
  ResponseDetailHotelDataResultsCategoriesLanguagesSpoken? languagesSpoken;
  ResponseDetailHotelDataResultsCategoriesReceptionServices? receptionServices;
  ResponseDetailHotelDataResultsCategoriesInternet? internet;
  ResponseDetailHotelDataResultsCategoriesOthers? others;

  ResponseDetailHotelDataResultsCategories({
    this.transportation,
    this.cleaningServices,
    this.languagesSpoken,
    this.receptionServices,
    this.internet,
    this.others,
  });
  ResponseDetailHotelDataResultsCategories.fromJson(Map<String, dynamic> json) {
    transportation = (json['transportation'] != null) ? ResponseDetailHotelDataResultsCategoriesTransportation.fromJson(json['transportation']) : null;
    cleaningServices = (json['cleaning-services'] != null) ? ResponseDetailHotelDataResultsCategoriesCleaningServices.fromJson(json['cleaning-services']) : null;
    languagesSpoken = (json['languages-spoken'] != null) ? ResponseDetailHotelDataResultsCategoriesLanguagesSpoken.fromJson(json['languages-spoken']) : null;
    receptionServices = (json['reception-services'] != null) ? ResponseDetailHotelDataResultsCategoriesReceptionServices.fromJson(json['reception-services']) : null;
    internet = (json['internet'] != null) ? ResponseDetailHotelDataResultsCategoriesInternet.fromJson(json['internet']) : null;
    others = (json['others'] != null) ? ResponseDetailHotelDataResultsCategoriesOthers.fromJson(json['others']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (transportation != null) {
      data['transportation'] = transportation!.toJson();
    }
    if (cleaningServices != null) {
      data['cleaning-services'] = cleaningServices!.toJson();
    }
    if (languagesSpoken != null) {
      data['languages-spoken'] = languagesSpoken!.toJson();
    }
    if (receptionServices != null) {
      data['reception-services'] = receptionServices!.toJson();
    }
    if (internet != null) {
      data['internet'] = internet!.toJson();
    }
    if (others != null) {
      data['others'] = others!.toJson();
    }
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilitiesPerCategoriesOthers {
/*
{
  "id": 128,
  "name": "Designated Smoking Area",
  "name_vi": "Khu vực cho phép hút thuốc",
  "category_id": 20,
  "code": "designated-smoking-area",
  "type": "hotel",
  "created_at": "2015-12-16T03:33:20.013Z"
}
*/

  int? id;
  String? name;
  String? nameVi;
  int? categoryId;
  String? code;
  String? type;
  String? createdAt;

  ResponseDetailHotelDataResultsFacilitiesPerCategoriesOthers({
    this.id,
    this.name,
    this.nameVi,
    this.categoryId,
    this.code,
    this.type,
    this.createdAt,
  });
  ResponseDetailHotelDataResultsFacilitiesPerCategoriesOthers.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    categoryId = json['category_id']?.toInt();
    code = json['code']?.toString();
    type = json['type']?.toString();
    createdAt = json['created_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['category_id'] = categoryId;
    data['code'] = code;
    data['type'] = type;
    data['created_at'] = createdAt;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilitiesPerCategoriesInternet {
/*
{
  "id": 146,
  "name": "Free Wifi in all rooms",
  "name_vi": "Miễn phí Wifi trong phòng",
  "category_id": 4,
  "code": "free-wifi-in-all-rooms",
  "type": "hotel",
  "created_at": "2015-12-16T03:33:20.342Z"
}
*/

  int? id;
  String? name;
  String? nameVi;
  int? categoryId;
  String? code;
  String? type;
  String? createdAt;

  ResponseDetailHotelDataResultsFacilitiesPerCategoriesInternet({
    this.id,
    this.name,
    this.nameVi,
    this.categoryId,
    this.code,
    this.type,
    this.createdAt,
  });
  ResponseDetailHotelDataResultsFacilitiesPerCategoriesInternet.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    categoryId = json['category_id']?.toInt();
    code = json['code']?.toString();
    type = json['type']?.toString();
    createdAt = json['created_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['category_id'] = categoryId;
    data['code'] = code;
    data['type'] = type;
    data['created_at'] = createdAt;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilitiesPerCategoriesReceptionServices {
/*
{
  "id": 73,
  "name": "24-Hour Front Desk",
  "name_vi": "Lễ tân 24 giờ",
  "category_id": 14,
  "code": "24-hour-front-desk",
  "type": "hotel",
  "created_at": "2015-12-16T03:33:19.263Z"
}
*/

  int? id;
  String? name;
  String? nameVi;
  int? categoryId;
  String? code;
  String? type;
  String? createdAt;

  ResponseDetailHotelDataResultsFacilitiesPerCategoriesReceptionServices({
    this.id,
    this.name,
    this.nameVi,
    this.categoryId,
    this.code,
    this.type,
    this.createdAt,
  });
  ResponseDetailHotelDataResultsFacilitiesPerCategoriesReceptionServices.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    categoryId = json['category_id']?.toInt();
    code = json['code']?.toString();
    type = json['type']?.toString();
    createdAt = json['created_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['category_id'] = categoryId;
    data['code'] = code;
    data['type'] = type;
    data['created_at'] = createdAt;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilitiesPerCategoriesLanguagesSpoken {
/*
{
  "id": 149,
  "name": "English",
  "name_vi": "Tiếng Anh",
  "category_id": 5,
  "code": "english",
  "type": "hotel",
  "created_at": "2015-12-16T03:33:20.408Z"
}
*/

  int? id;
  String? name;
  String? nameVi;
  int? categoryId;
  String? code;
  String? type;
  String? createdAt;

  ResponseDetailHotelDataResultsFacilitiesPerCategoriesLanguagesSpoken({
    this.id,
    this.name,
    this.nameVi,
    this.categoryId,
    this.code,
    this.type,
    this.createdAt,
  });
  ResponseDetailHotelDataResultsFacilitiesPerCategoriesLanguagesSpoken.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    categoryId = json['category_id']?.toInt();
    code = json['code']?.toString();
    type = json['type']?.toString();
    createdAt = json['created_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['category_id'] = categoryId;
    data['code'] = code;
    data['type'] = type;
    data['created_at'] = createdAt;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilitiesPerCategoriesCleaningServices {
/*
{
  "id": 108,
  "name": "Cleaning Services",
  "name_vi": "Dịch vụ lau dọn",
  "category_id": 17,
  "code": "cleaning-services",
  "type": "hotel",
  "created_at": "2015-12-16T03:33:19.729Z"
}
*/

  int? id;
  String? name;
  String? nameVi;
  int? categoryId;
  String? code;
  String? type;
  String? createdAt;

  ResponseDetailHotelDataResultsFacilitiesPerCategoriesCleaningServices({
    this.id,
    this.name,
    this.nameVi,
    this.categoryId,
    this.code,
    this.type,
    this.createdAt,
  });
  ResponseDetailHotelDataResultsFacilitiesPerCategoriesCleaningServices.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    categoryId = json['category_id']?.toInt();
    code = json['code']?.toString();
    type = json['type']?.toString();
    createdAt = json['created_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['category_id'] = categoryId;
    data['code'] = code;
    data['type'] = type;
    data['created_at'] = createdAt;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilitiesPerCategoriesTransportation {
/*
{
  "id": 71,
  "name": "Taxi service",
  "name_vi": "Dịch vụ Taxi",
  "category_id": 3,
  "code": "taxi-service",
  "type": "hotel",
  "created_at": "2015-12-16T03:33:19.239Z"
}
*/

  int? id;
  String? name;
  String? nameVi;
  int? categoryId;
  String? code;
  String? type;
  String? createdAt;

  ResponseDetailHotelDataResultsFacilitiesPerCategoriesTransportation({
    this.id,
    this.name,
    this.nameVi,
    this.categoryId,
    this.code,
    this.type,
    this.createdAt,
  });
  ResponseDetailHotelDataResultsFacilitiesPerCategoriesTransportation.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    categoryId = json['category_id']?.toInt();
    code = json['code']?.toString();
    type = json['type']?.toString();
    createdAt = json['created_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['category_id'] = categoryId;
    data['code'] = code;
    data['type'] = type;
    data['created_at'] = createdAt;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilitiesPerCategories {
/*
{
  "transportation": [
    {
      "id": 71,
      "name": "Taxi service",
      "name_vi": "Dịch vụ Taxi",
      "category_id": 3,
      "code": "taxi-service",
      "type": "hotel",
      "created_at": "2015-12-16T03:33:19.239Z"
    }
  ],
  "cleaning-services": [
    {
      "id": 108,
      "name": "Cleaning Services",
      "name_vi": "Dịch vụ lau dọn",
      "category_id": 17,
      "code": "cleaning-services",
      "type": "hotel",
      "created_at": "2015-12-16T03:33:19.729Z"
    }
  ],
  "languages-spoken": [
    {
      "id": 149,
      "name": "English",
      "name_vi": "Tiếng Anh",
      "category_id": 5,
      "code": "english",
      "type": "hotel",
      "created_at": "2015-12-16T03:33:20.408Z"
    }
  ],
  "reception-services": [
    {
      "id": 73,
      "name": "24-Hour Front Desk",
      "name_vi": "Lễ tân 24 giờ",
      "category_id": 14,
      "code": "24-hour-front-desk",
      "type": "hotel",
      "created_at": "2015-12-16T03:33:19.263Z"
    }
  ],
  "internet": [
    {
      "id": 146,
      "name": "Free Wifi in all rooms",
      "name_vi": "Miễn phí Wifi trong phòng",
      "category_id": 4,
      "code": "free-wifi-in-all-rooms",
      "type": "hotel",
      "created_at": "2015-12-16T03:33:20.342Z"
    }
  ],
  "others": [
    {
      "id": 128,
      "name": "Designated Smoking Area",
      "name_vi": "Khu vực cho phép hút thuốc",
      "category_id": 20,
      "code": "designated-smoking-area",
      "type": "hotel",
      "created_at": "2015-12-16T03:33:20.013Z"
    }
  ]
}
*/

  List<ResponseDetailHotelDataResultsFacilitiesPerCategoriesTransportation?>? transportation;
  List<ResponseDetailHotelDataResultsFacilitiesPerCategoriesCleaningServices?>? cleaningServices;
  List<ResponseDetailHotelDataResultsFacilitiesPerCategoriesLanguagesSpoken?>? languagesSpoken;
  List<ResponseDetailHotelDataResultsFacilitiesPerCategoriesReceptionServices?>? receptionServices;
  List<ResponseDetailHotelDataResultsFacilitiesPerCategoriesInternet?>? internet;
  List<ResponseDetailHotelDataResultsFacilitiesPerCategoriesOthers?>? others;

  ResponseDetailHotelDataResultsFacilitiesPerCategories({
    this.transportation,
    this.cleaningServices,
    this.languagesSpoken,
    this.receptionServices,
    this.internet,
    this.others,
  });
  ResponseDetailHotelDataResultsFacilitiesPerCategories.fromJson(Map<String, dynamic> json) {
    if (json['transportation'] != null) {
      final v = json['transportation'];
      final arr0 = <ResponseDetailHotelDataResultsFacilitiesPerCategoriesTransportation>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilitiesPerCategoriesTransportation.fromJson(v));
      });
      transportation = arr0;
    }
    if (json['cleaning-services'] != null) {
      final v = json['cleaning-services'];
      final arr0 = <ResponseDetailHotelDataResultsFacilitiesPerCategoriesCleaningServices>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilitiesPerCategoriesCleaningServices.fromJson(v));
      });
      cleaningServices = arr0;
    }
    if (json['languages-spoken'] != null) {
      final v = json['languages-spoken'];
      final arr0 = <ResponseDetailHotelDataResultsFacilitiesPerCategoriesLanguagesSpoken>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilitiesPerCategoriesLanguagesSpoken.fromJson(v));
      });
      languagesSpoken = arr0;
    }
    if (json['reception-services'] != null) {
      final v = json['reception-services'];
      final arr0 = <ResponseDetailHotelDataResultsFacilitiesPerCategoriesReceptionServices>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilitiesPerCategoriesReceptionServices.fromJson(v));
      });
      receptionServices = arr0;
    }
    if (json['internet'] != null) {
      final v = json['internet'];
      final arr0 = <ResponseDetailHotelDataResultsFacilitiesPerCategoriesInternet>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilitiesPerCategoriesInternet.fromJson(v));
      });
      internet = arr0;
    }
    if (json['others'] != null) {
      final v = json['others'];
      final arr0 = <ResponseDetailHotelDataResultsFacilitiesPerCategoriesOthers>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilitiesPerCategoriesOthers.fromJson(v));
      });
      others = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (transportation != null) {
      final v = transportation;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['transportation'] = arr0;
    }
    if (cleaningServices != null) {
      final v = cleaningServices;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['cleaning-services'] = arr0;
    }
    if (languagesSpoken != null) {
      final v = languagesSpoken;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['languages-spoken'] = arr0;
    }
    if (receptionServices != null) {
      final v = receptionServices;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['reception-services'] = arr0;
    }
    if (internet != null) {
      final v = internet;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['internet'] = arr0;
    }
    if (others != null) {
      final v = others;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['others'] = arr0;
    }
    return data;
  }
}

class ResponseDetailHotelDataResultsImages {
/*
{
  "hotel_id": 439,
  "name": "",
  "hotel_image_type": "other_hotel_image",
  "order": 0,
  "order_room": null,
  "is_visible": true,
  "is_visible_in_all": true,
  "is_hotel_thumb": true,
  "id": 164054,
  "slug": "450C444557E8452992E4_29087980.jpg",
  "image_type": "hotel_image",
  "height": "460.0",
  "width": "840.0"
}
*/

  int? hotelId;
  String? name;
  String? hotelImageType;
  int? order;
  String? orderRoom;
  bool? isVisible;
  bool? isVisibleInAll;
  bool? isHotelThumb;
  int? id;
  String? slug;
  String? imageType;
  String? height;
  String? width;

  ResponseDetailHotelDataResultsImages({
    this.hotelId,
    this.name,
    this.hotelImageType,
    this.order,
    this.orderRoom,
    this.isVisible,
    this.isVisibleInAll,
    this.isHotelThumb,
    this.id,
    this.slug,
    this.imageType,
    this.height,
    this.width,
  });
  ResponseDetailHotelDataResultsImages.fromJson(Map<String, dynamic> json) {
    hotelId = json['hotel_id']?.toInt();
    name = json['name']?.toString();
    hotelImageType = json['hotel_image_type']?.toString();
    order = json['order']?.toInt();
    orderRoom = json['order_room']?.toString();
    isVisible = json['is_visible'];
    isVisibleInAll = json['is_visible_in_all'];
    isHotelThumb = json['is_hotel_thumb'];
    id = json['id']?.toInt();
    slug = json['slug']?.toString();
    imageType = json['image_type']?.toString();
    height = json['height']?.toString();
    width = json['width']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['hotel_id'] = hotelId;
    data['name'] = name;
    data['hotel_image_type'] = hotelImageType;
    data['order'] = order;
    data['order_room'] = orderRoom;
    data['is_visible'] = isVisible;
    data['is_visible_in_all'] = isVisibleInAll;
    data['is_hotel_thumb'] = isHotelThumb;
    data['id'] = id;
    data['slug'] = slug;
    data['image_type'] = imageType;
    data['height'] = height;
    data['width'] = width;
    return data;
  }
}

class ResponseDetailHotelDataResultsFacilities {
/*
{
  "id": 71,
  "name": "Taxi service",
  "name_vi": "Dịch vụ Taxi",
  "category_id": 3,
  "code": "taxi-service",
  "type": "hotel",
  "created_at": "2015-12-16T03:33:19.239Z"
}
*/

  int? id;
  String? name;
  String? nameVi;
  int? categoryId;
  String? code;
  String? type;
  String? createdAt;

  ResponseDetailHotelDataResultsFacilities({
    this.id,
    this.name,
    this.nameVi,
    this.categoryId,
    this.code,
    this.type,
    this.createdAt,
  });
  ResponseDetailHotelDataResultsFacilities.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    categoryId = json['category_id']?.toInt();
    code = json['code']?.toString();
    type = json['type']?.toString();
    createdAt = json['created_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['category_id'] = categoryId;
    data['code'] = code;
    data['type'] = type;
    data['created_at'] = createdAt;
    return data;
  }
}

class ResponseDetailHotelDataResultsHotelPoliciesDiscountMember {
/*
{
  "discount_active": false
}
*/

  bool? discountActive;

  ResponseDetailHotelDataResultsHotelPoliciesDiscountMember({
    this.discountActive,
  });
  ResponseDetailHotelDataResultsHotelPoliciesDiscountMember.fromJson(Map<String, dynamic> json) {
    discountActive = json['discount_active'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['discount_active'] = discountActive;
    return data;
  }
}

class ResponseDetailHotelDataResultsHotelPoliciesDeposit {
/*
{
  "Amount": "0",
  "type": "Percent"
}
*/

  String? Amount;
  String? type;

  ResponseDetailHotelDataResultsHotelPoliciesDeposit({
    this.Amount,
    this.type,
  });
  ResponseDetailHotelDataResultsHotelPoliciesDeposit.fromJson(Map<String, dynamic> json) {
    Amount = json['Amount']?.toString();
    type = json['type']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['Amount'] = Amount;
    data['type'] = type;
    return data;
  }
}

class ResponseDetailHotelDataResultsHotelPoliciesCancelPolicies {
/*
{
  "PenaltyType": "DepositPercent",
  "TimeUnit": "Days",
  "Amount": "100",
  "type": "Absent",
  "UnitTimeMultiplier": "0"
}
*/

  String? PenaltyType;
  String? TimeUnit;
  String? Amount;
  String? type;
  String? UnitTimeMultiplier;

  ResponseDetailHotelDataResultsHotelPoliciesCancelPolicies({
    this.PenaltyType,
    this.TimeUnit,
    this.Amount,
    this.type,
    this.UnitTimeMultiplier,
  });
  ResponseDetailHotelDataResultsHotelPoliciesCancelPolicies.fromJson(Map<String, dynamic> json) {
    PenaltyType = json['PenaltyType']?.toString();
    TimeUnit = json['TimeUnit']?.toString();
    Amount = json['Amount']?.toString();
    type = json['type']?.toString();
    UnitTimeMultiplier = json['UnitTimeMultiplier']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['PenaltyType'] = PenaltyType;
    data['TimeUnit'] = TimeUnit;
    data['Amount'] = Amount;
    data['type'] = type;
    data['UnitTimeMultiplier'] = UnitTimeMultiplier;
    return data;
  }
}

class ResponseDetailHotelDataResultsHotelPolicies {
/*
{
  "cancel_policies": [
    {
      "PenaltyType": "DepositPercent",
      "TimeUnit": "Days",
      "Amount": "100",
      "type": "Absent",
      "UnitTimeMultiplier": "0"
    }
  ],
  "other_policies": "",
  "refundable": true,
  "deposit": {
    "Amount": "0",
    "type": "Percent"
  },
  "discount_member": {
    "discount_active": false
  }
}
*/

  List<ResponseDetailHotelDataResultsHotelPoliciesCancelPolicies?>? cancelPolicies;
  String? otherPolicies;
  bool? refundable;
  ResponseDetailHotelDataResultsHotelPoliciesDeposit? deposit;
  ResponseDetailHotelDataResultsHotelPoliciesDiscountMember? discountMember;

  ResponseDetailHotelDataResultsHotelPolicies({
    this.cancelPolicies,
    this.otherPolicies,
    this.refundable,
    this.deposit,
    this.discountMember,
  });
  ResponseDetailHotelDataResultsHotelPolicies.fromJson(Map<String, dynamic> json) {
    if (json['cancel_policies'] != null) {
      final v = json['cancel_policies'];
      final arr0 = <ResponseDetailHotelDataResultsHotelPoliciesCancelPolicies>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsHotelPoliciesCancelPolicies.fromJson(v));
      });
      cancelPolicies = arr0;
    }
    otherPolicies = json['other_policies']?.toString();
    refundable = json['refundable'];
    deposit = (json['deposit'] != null) ? ResponseDetailHotelDataResultsHotelPoliciesDeposit.fromJson(json['deposit']) : null;
    discountMember = (json['discount_member'] != null) ? ResponseDetailHotelDataResultsHotelPoliciesDiscountMember.fromJson(json['discount_member']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (cancelPolicies != null) {
      final v = cancelPolicies;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['cancel_policies'] = arr0;
    }
    data['other_policies'] = otherPolicies;
    data['refundable'] = refundable;
    if (deposit != null) {
      data['deposit'] = deposit!.toJson();
    }
    if (discountMember != null) {
      data['discount_member'] = discountMember!.toJson();
    }
    return data;
  }
}

class ResponseDetailHotelDataResults {
/*
{
  "id": 439,
  "name": "Especen Hotel",
  "name_vi": "Especen Hotel",
  "code": "80439",
  "des_title": "Especen Hotel – Your home in Hanoi",
  "des_content": "<h2 style=\"text-align:center\"><strong>Especen Hotel &ndash; Kh&aacute;ch sạn rẻ v&agrave; tốt nhất H&agrave; Nội</strong></h2>\n\n<p style=\"text-align:center\"><em>28 Thọ Xương, Hàng Trống, Quận Ho&agrave;n Kiếm, H&agrave; Nội</em></p>\n\n<h3><strong>Vị tr&iacute; địa l&yacute;</strong></h3>\n\n<p>L&agrave; một trong những kh&aacute;ch sạn mini đầu ti&ecirc;n tại H&agrave; Nội <strong>Especen Hotel</strong> nằm giữa trung t&acirc;m Phố cổ với vị tr&iacute; thuận lợi gần kề Nh&agrave; Thờ Lớn, c&aacute;ch đền Ngọc Sơn 300m, Hồ Ho&agrave;n Kiếm 300m ngo&agrave;i ra c&oacute; thể đi bộ đến c&aacute;c điểm tham quan nổi tiếng tại H&agrave; Nội như Hồ Gươm, chợ Đồng Xu&acirc;n, Nh&agrave; h&aacute;t M&uacute;a Rối Nước Thăng Long&hellip;.Đ&acirc;y ch&iacute;nh l&agrave; địa điểm l&yacute; tưởng cho qu&yacute; kh&aacute;ch thăm quan phố phường H&agrave; Nội v&agrave; thưởng thức những m&oacute;n ăn đặc sắc tinh tế của người d&acirc;n thủ đ&ocirc;.</p>\n\n<h3><strong>Đặc điểm kh&aacute;ch sạn</strong></h3>\n\n<p><strong>Especen Hotel </strong>l&agrave; kh&aacute;ch sạn nằm tại khu phố trung t&acirc;m, thuận tiện cho qu&yacute; kh&aacute;ch đi lại thăm quan. Với thiết kế đơn giản, nhẹ nh&agrave;ng v&agrave; tinh tế nhưng kh&ocirc;ng k&eacute;m phần sang trọng, hiện đại c&ugrave;ng hệ thống ph&ograve;ng tiện nghi, nh&acirc;n vi&ecirc;n phục vụ chu đ&aacute;o th&acirc;n thiện cho bạn cảm gi&aacute;c thoải m&aacute;i nhất trong những ng&agrave;y&nbsp; nghỉ dưỡng của m&igrave;nh.</p>\n\n<p>N&eacute;p m&igrave;nh trong con phố nhỏ, nhưng lại mang đến sức lôi cuốn lạ kỳ cho nhiều du kh&aacute;ch quốc tế, từ kh&aacute;ch sạn bạn c&oacute; thể nghe tiếng chu&ocirc;ng nh&agrave; thờ ng&acirc;n vang v&agrave;o mỗi buổi sớm mai thức giấc. Hay từ ban c&ocirc;ng của kh&aacute;ch sạn c&oacute; thể nh&igrave;n bao qu&aacute;t to&agrave;n bộ khu phố cổ k&iacute;nh nhuốm m&agrave;u thời gian.</p>\n\n<p><strong>Especen Hotel </strong>thực sự mang đến cho bạn nhiều cung bậc cảm x&uacute;c trong kỳ nghỉ dưỡng tại thủ đ&ocirc;.</p>\n\n<h3><strong>Dịch vụ kh&aacute;ch sạn</strong></h3>\n\n<p>Thiết kế nhỏ gọn đạt ti&ecirc;u chuẩn kh&aacute;ch sạn 2 sao, <strong>Especen Hotel</strong> bao gồm 29 ph&ograve;ng cao cấp tiện nghi, với sự kết hợp h&agrave;i h&ograve;a kh&eacute;o l&eacute;o c&aacute;c m&agrave;u sắc trong ph&ograve;ng tạo n&ecirc;n kh&ocirc;ng gian ấn tượng, ấm c&uacute;ng v&agrave; v&ocirc; c&ugrave;ng thư th&aacute;i cho du kh&aacute;ch khi nghỉ ngơi tại đ&acirc;y.</p>\n\n<p>Tất cả hệ thống 29 ph&ograve;ng của kh&aacute;ch sạn đều được trang bị nội thất bằng gỗ giản dị c&ugrave;ng hệ thống đ&egrave;n chiếu s&aacute;ng, r&egrave;m cửa sang trọng, đi k&egrave;m c&oacute; wife, m&aacute;y lạnh, ti vi truyền h&igrave;nh c&aacute;p, khu vực tiếp kh&aacute;ch, tủ đựng đồ c&oacute; kh&oacute;a v&agrave; ph&ograve;ng tắm k&egrave;m v&ograve;i sen, d&eacute;p đi trong nh&agrave;, đồ vệ sinh c&aacute; nh&acirc;n miễn ph&iacute;.</p>\n\n<p>Ngo&agrave;i ra tại <strong>Especen Hotel </strong>c&ograve;n c&oacute; c&aacute;c dịch vụ giữ h&agrave;nh l&yacute;, giặt đồ, photocopy, thu đổi ngoại tệ, dọn dẹp ph&ograve;ng h&agrave;ng ng&agrave;y v&agrave; quầy lễ t&acirc;n phục vụ 24 giờ đ&aacute;p ứng nhu cầu nghỉ ngơi tiện nghi thoải m&aacute;i nhất cho qu&yacute; kh&aacute;ch h&agrave;ng.</p>\n\n<p>Nếu qu&yacute; kh&aacute;ch muốn kh&aacute;m ph&aacute; thủ đ&ocirc; v&agrave; những điểm du lịch v&ugrave;ng l&acirc;n cận tại kh&aacute;ch sạn c&ograve;n c&oacute; dịch vụ cho thu&ecirc; xe hơi, xe đạp thuận tiện cho việc đi lại, di chuyển.</p>\n\n<h3><strong>Điểm du lịch thu h&uacute;t kh&aacute;ch gần kh&aacute;ch sạn</strong></h3>\n\n<p><em>Chi&ecirc;m ngưỡng Nh&agrave; Thờ Lớn với lối kiến tr&uacute;c độc đ&aacute;o</em></p>\n\n<p>Nằm giữa trung th&agrave;nh phố H&agrave; Nội, Nh&agrave; Thờ Lớn mang phong c&aacute;ch Gothic v&agrave; dấu ấn thuộc địa ti&ecirc;u biểu tại H&agrave; Nội. Bước ch&acirc;n v&agrave;o khu&ocirc;n vi&ecirc;n nh&agrave; thờ bạn sẽ thực sự ngạc nhi&ecirc;n trước kh&ocirc;ng kh&iacute; y&ecirc;n tĩnh với sảnh đường rộng, h&agrave;ng ghế d&agrave;i c&ugrave;ng những &ocirc; cửa k&iacute;nh m&agrave;u sắc lấp l&aacute;nh đối lập hẳn với cảnh ồn &agrave;o, n&aacute;o nhiệt xung quanh b&ecirc;n ngo&agrave;i nh&agrave; thờ. V&agrave; khi đến phố Nh&agrave; Thờ, bạn cũng đừng qu&ecirc;n trải nghiệm cuộc sống th&uacute; vị quanh khu vực nh&agrave; thờ v&agrave;o buổi tối khi l&ecirc; la ở những qu&aacute;n tr&agrave; chanh t&aacute;n ngẫu c&ugrave;ng bạn b&egrave;.</p>\n\n<p>Đến với <strong>Especen Hotel</strong> qu&yacute; kh&aacute;ch sẽ được tận hưởng một kh&ocirc;ng gian thoải m&aacute;i nhất như đang ở ch&iacute;nh ng&ocirc;i nh&agrave; th&acirc;n y&ecirc;u của m&igrave;nh.</p>",
  "star_rate": 1.5,
  "extra_info": "",
  "latitude": 21.0290238,
  "longitude": 105.848413,
  "featured": false,
  "views": 2054,
  "phone": "2438244401",
  "fax": "",
  "website": "http://www.especen.vn",
  "check_in_time": "13:00:00",
  "check_out_time": "12:00:00",
  "hotel_policies": {
    "cancel_policies": [
      {
        "PenaltyType": "DepositPercent",
        "TimeUnit": "Days",
        "Amount": "100",
        "type": "Absent",
        "UnitTimeMultiplier": "0"
      }
    ],
    "other_policies": "",
    "refundable": true,
    "deposit": {
      "Amount": "0",
      "type": "Percent"
    },
    "discount_member": {
      "discount_active": false
    }
  },
  "full_address": "28 Thọ Xương, quận Hoàn Kiếm, Hà Nội",
  "extranet_approved_status": "extranet_hotel_approved",
  "type": "hotel",
  "street": "Thọ Xương",
  "minimum_commission": 15,
  "total_rooms": 25,
  "facilities": [
    {
      "id": 71,
      "name": "Taxi service",
      "name_vi": "Dịch vụ Taxi",
      "category_id": 3,
      "code": "taxi-service",
      "type": "hotel",
      "created_at": "2015-12-16T03:33:19.239Z"
    }
  ],
  "postal_code": "110214",
  "object_type": "ota_hotels",
  "is_included_in_tax": true,
  "pay_at_hotel": false,
  "active_status": true,
  "close_open_status": true,
  "discount_active": false,
  "included_service_fee": 5,
  "included_VAT": 1,
  "count_reviews": 6,
  "review_point": 8.47222222222222,
  "ean_properties_id": null,
  "country_id": 1,
  "commission": 15,
  "childAge": 5,
  "adultAge": 11,
  "sameBedChildPrice": 0,
  "extraBedLittleChildPrice": 0,
  "extraBedChildPrice": 50000,
  "extraBedPrice": 100000,
  "extraBedOtherPolicies": "Đệm phụ",
  "sameBedLittleChildPrice": null,
  "images": [
    {
      "hotel_id": 439,
      "name": "",
      "hotel_image_type": "other_hotel_image",
      "order": 0,
      "order_room": null,
      "is_visible": true,
      "is_visible_in_all": true,
      "is_hotel_thumb": true,
      "id": 164054,
      "slug": "450C444557E8452992E4_29087980.jpg",
      "image_type": "hotel_image",
      "height": "460.0",
      "width": "840.0"
    }
  ],
  "facilities_per_categories": {
    "transportation": [
      {
        "id": 71,
        "name": "Taxi service",
        "name_vi": "Dịch vụ Taxi",
        "category_id": 3,
        "code": "taxi-service",
        "type": "hotel",
        "created_at": "2015-12-16T03:33:19.239Z"
      }
    ],
    "cleaning-services": [
      {
        "id": 108,
        "name": "Cleaning Services",
        "name_vi": "Dịch vụ lau dọn",
        "category_id": 17,
        "code": "cleaning-services",
        "type": "hotel",
        "created_at": "2015-12-16T03:33:19.729Z"
      }
    ],
    "languages-spoken": [
      {
        "id": 149,
        "name": "English",
        "name_vi": "Tiếng Anh",
        "category_id": 5,
        "code": "english",
        "type": "hotel",
        "created_at": "2015-12-16T03:33:20.408Z"
      }
    ],
    "reception-services": [
      {
        "id": 73,
        "name": "24-Hour Front Desk",
        "name_vi": "Lễ tân 24 giờ",
        "category_id": 14,
        "code": "24-hour-front-desk",
        "type": "hotel",
        "created_at": "2015-12-16T03:33:19.263Z"
      }
    ],
    "internet": [
      {
        "id": 146,
        "name": "Free Wifi in all rooms",
        "name_vi": "Miễn phí Wifi trong phòng",
        "category_id": 4,
        "code": "free-wifi-in-all-rooms",
        "type": "hotel",
        "created_at": "2015-12-16T03:33:20.342Z"
      }
    ],
    "others": [
      {
        "id": 128,
        "name": "Designated Smoking Area",
        "name_vi": "Khu vực cho phép hút thuốc",
        "category_id": 20,
        "code": "designated-smoking-area",
        "type": "hotel",
        "created_at": "2015-12-16T03:33:20.013Z"
      }
    ]
  },
  "facilities_text": "Dịch vụ Taxi, Xe hơi, Đưa đón sân bay, Dịch vụ lau dọn, Phục vụ phòng hằng ngày, Tiếng Anh, Tiếng Việt, Lễ tân 24 giờ, An ninh 24 giờ, Nhận/ Trả phòng riêng, Dịch vụ Nhận/ Trả phòng nhanh, Dịch vụ hướng dẫn khách, Dịch vụ báo thức, Dịch vụ đặt vé, Bàn Tour, Thu đổi ngoại tệ, Dịch vụ giữ hành lý, Miễn phí Wifi trong phòng, Wifi ở khu vực công cộng, Miễn phí WIfi ở tất cả các khu vực, Khu vực cho phép hút thuốc, Không hút thuốc trong tất cả khu vực, Phòng gia đình, Máy điều hòa, Nhân viên đa ngôn ngữ",
  "categories": {
    "transportation": {
      "name": "Transportation",
      "name_vi": "Phương tiện đi lại"
    },
    "cleaning-services": {
      "name": "Cleaning services",
      "name_vi": "Dịch vụ lau dọn"
    },
    "languages-spoken": {
      "name": "Languages Spoken",
      "name_vi": "Ngôn ngữ sử dụng"
    },
    "reception-services": {
      "name": "Reception services",
      "name_vi": "Dịch vụ lễ tân"
    },
    "internet": {
      "name": "Internet",
      "name_vi": "Internet"
    },
    "others": {
      "name": "Others",
      "name_vi": "Dịch vụ khác"
    }
  },
  "facility_groups": [
    {
      "group_id": 53,
      "group_name": "Wifi",
      "group_order": 2,
      "key": "wifi"
    }
  ],
  "thumb_image": "450C444557E8452992E4_29087980.jpg",
  "images_360": [
    {
      "id": 3343,
      "hotel_id": 439,
      "path_file": "439/s1/"
    }
  ],
  "free_shuttle": true,
  "best_rate_commitment": false,
  "province_id": 66,
  "city_id": 712,
  "ratings": 1.5,
  "province_name": "Hà Nội",
  "city_name": "Quận Hoàn Kiếm",
  "province_code": "ha-noi",
  "city_code": "quan-hoan-kiem",
  "hotel_status": 1,
  "hotel_policies_text": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên.",
  "is_favourite": false,
  "profile": {
    "id": 15,
    "hotel_id": 439,
    "customer_market": [
      {
        "key": "eu_na"
      }
    ],
    "customer_source_market": [
      {
        "key": "others",
        "value": 100,
        "name": "Nhiều nguồn"
      }
    ],
    "position": [
      {
        "key": "old_town"
      }
    ],
    "notes": [
      {
        "vntrip_account": "hien.t.trinh@vntrip.vn",
        "content": "KS đã nói ko muốn nhận khách từ Vntrip ",
        "datetime": "2017-11-18T03:51:37.436Z"
      }
    ],
    "has_invoice": true
  },
  "is_tms_special_hotel": false,
  "tms_special_hotel_policy": "",
  "tms_special_hotel_policy_en": "",
  "tags": [
    null
  ]
}
*/

  int? id;
  String? name;
  String? nameVi;
  String? code;
  String? desTitle;
  String? desContent;
  double? starRate;
  String? extraInfo;
  double? latitude;
  double? longitude;
  bool? featured;
  int? views;
  String? phone;
  String? fax;
  String? website;
  String? checkInTime;
  String? checkOutTime;
  ResponseDetailHotelDataResultsHotelPolicies? hotelPolicies;
  String? fullAddress;
  String? extranetApprovedStatus;
  String? type;
  String? street;
  int? minimumCommission;
  int? totalRooms;
  List<ResponseDetailHotelDataResultsFacilities?>? facilities;
  String? postalCode;
  String? objectType;
  bool? isIncludedInTax;
  bool? payAtHotel;
  bool? activeStatus;
  bool? closeOpenStatus;
  bool? discountActive;
  int? includedServiceFee;
  int? includedVAT;
  int? countReviews;
  double? reviewPoint;
  String? eanPropertiesId;
  int? countryId;
  int? commission;
  int? childAge;
  int? adultAge;
  int? sameBedChildPrice;
  int? extraBedLittleChildPrice;
  int? extraBedChildPrice;
  int? extraBedPrice;
  String? extraBedOtherPolicies;
  String? sameBedLittleChildPrice;
  List<ResponseDetailHotelDataResultsImages?>? images;
  ResponseDetailHotelDataResultsFacilitiesPerCategories? facilitiesPerCategories;
  String? facilitiesText;
  ResponseDetailHotelDataResultsCategories? categories;
  List<ResponseDetailHotelDataResultsFacilityGroups?>? facilityGroups;
  String? thumbImage;
  List<ResponseDetailHotelDataResultsImages_360?>? images_360;
  bool? freeShuttle;
  bool? bestRateCommitment;
  int? provinceId;
  int? cityId;
  double? ratings;
  String? provinceName;
  String? cityName;
  String? provinceCode;
  String? cityCode;
  int? hotelStatus;
  String? hotelPoliciesText;
  bool? isFavourite;
  ResponseDetailHotelDataResultsProfile? profile;
  bool? isTmsSpecialHotel;
  String? tmsSpecialHotelPolicy;
  String? tmsSpecialHotelPolicyEn;
  List<String?>? tags;

  ResponseDetailHotelDataResults({
    this.id,
    this.name,
    this.nameVi,
    this.code,
    this.desTitle,
    this.desContent,
    this.starRate,
    this.extraInfo,
    this.latitude,
    this.longitude,
    this.featured,
    this.views,
    this.phone,
    this.fax,
    this.website,
    this.checkInTime,
    this.checkOutTime,
    this.hotelPolicies,
    this.fullAddress,
    this.extranetApprovedStatus,
    this.type,
    this.street,
    this.minimumCommission,
    this.totalRooms,
    this.facilities,
    this.postalCode,
    this.objectType,
    this.isIncludedInTax,
    this.payAtHotel,
    this.activeStatus,
    this.closeOpenStatus,
    this.discountActive,
    this.includedServiceFee,
    this.includedVAT,
    this.countReviews,
    this.reviewPoint,
    this.eanPropertiesId,
    this.countryId,
    this.commission,
    this.childAge,
    this.adultAge,
    this.sameBedChildPrice,
    this.extraBedLittleChildPrice,
    this.extraBedChildPrice,
    this.extraBedPrice,
    this.extraBedOtherPolicies,
    this.sameBedLittleChildPrice,
    this.images,
    this.facilitiesPerCategories,
    this.facilitiesText,
    this.categories,
    this.facilityGroups,
    this.thumbImage,
    this.images_360,
    this.freeShuttle,
    this.bestRateCommitment,
    this.provinceId,
    this.cityId,
    this.ratings,
    this.provinceName,
    this.cityName,
    this.provinceCode,
    this.cityCode,
    this.hotelStatus,
    this.hotelPoliciesText,
    this.isFavourite,
    this.profile,
    this.isTmsSpecialHotel,
    this.tmsSpecialHotelPolicy,
    this.tmsSpecialHotelPolicyEn,
    this.tags,
  });
  ResponseDetailHotelDataResults.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    nameVi = json['name_vi']?.toString();
    code = json['code']?.toString();
    desTitle = json['des_title']?.toString();
    desContent = json['des_content']?.toString();
    starRate = json['star_rate']?.toDouble();
    extraInfo = json['extra_info']?.toString();
    latitude = json['latitude']?.toDouble();
    longitude = json['longitude']?.toDouble();
    featured = json['featured'];
    views = json['views']?.toInt();
    phone = json['phone']?.toString();
    fax = json['fax']?.toString();
    website = json['website']?.toString();
    checkInTime = json['check_in_time']?.toString();
    checkOutTime = json['check_out_time']?.toString();
    hotelPolicies = (json['hotel_policies'] != null) ? ResponseDetailHotelDataResultsHotelPolicies.fromJson(json['hotel_policies']) : null;
    fullAddress = json['full_address']?.toString();
    extranetApprovedStatus = json['extranet_approved_status']?.toString();
    type = json['type']?.toString();
    street = json['street']?.toString();
    minimumCommission = json['minimum_commission']?.toInt();
    totalRooms = json['total_rooms']?.toInt();
    if (json['facilities'] != null) {
      final v = json['facilities'];
      final arr0 = <ResponseDetailHotelDataResultsFacilities>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilities.fromJson(v));
      });
      facilities = arr0;
    }
    postalCode = json['postal_code']?.toString();
    objectType = json['object_type']?.toString();
    isIncludedInTax = json['is_included_in_tax'];
    payAtHotel = json['pay_at_hotel'];
    activeStatus = json['active_status'];
    closeOpenStatus = json['close_open_status'];
    discountActive = json['discount_active'];
    includedServiceFee = json['included_service_fee']?.toInt();
    includedVAT = json['included_VAT']?.toInt();
    countReviews = json['count_reviews']?.toInt();
    reviewPoint = json['review_point']?.toDouble();
    eanPropertiesId = json['ean_properties_id']?.toString();
    countryId = json['country_id']?.toInt();
    commission = json['commission']?.toInt();
    childAge = json['childAge']?.toInt();
    adultAge = json['adultAge']?.toInt();
    sameBedChildPrice = json['sameBedChildPrice']?.toInt();
    extraBedLittleChildPrice = json['extraBedLittleChildPrice']?.toInt();
    extraBedChildPrice = json['extraBedChildPrice']?.toInt();
    extraBedPrice = json['extraBedPrice']?.toInt();
    extraBedOtherPolicies = json['extraBedOtherPolicies']?.toString();
    sameBedLittleChildPrice = json['sameBedLittleChildPrice']?.toString();
    if (json['images'] != null) {
      final v = json['images'];
      final arr0 = <ResponseDetailHotelDataResultsImages>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsImages.fromJson(v));
      });
      images = arr0;
    }
    facilitiesPerCategories = (json['facilities_per_categories'] != null) ? ResponseDetailHotelDataResultsFacilitiesPerCategories.fromJson(json['facilities_per_categories']) : null;
    facilitiesText = json['facilities_text']?.toString();
    categories = (json['categories'] != null) ? ResponseDetailHotelDataResultsCategories.fromJson(json['categories']) : null;
    if (json['facility_groups'] != null) {
      final v = json['facility_groups'];
      final arr0 = <ResponseDetailHotelDataResultsFacilityGroups>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsFacilityGroups.fromJson(v));
      });
      facilityGroups = arr0;
    }
    thumbImage = json['thumb_image']?.toString();
    if (json['images_360'] != null) {
      final v = json['images_360'];
      final arr0 = <ResponseDetailHotelDataResultsImages_360>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResultsImages_360.fromJson(v));
      });
      images_360 = arr0;
    }
    freeShuttle = json['free_shuttle'];
    bestRateCommitment = json['best_rate_commitment'];
    provinceId = json['province_id']?.toInt();
    cityId = json['city_id']?.toInt();
    ratings = json['ratings']?.toDouble();
    provinceName = json['province_name']?.toString();
    cityName = json['city_name']?.toString();
    provinceCode = json['province_code']?.toString();
    cityCode = json['city_code']?.toString();
    hotelStatus = json['hotel_status']?.toInt();
    hotelPoliciesText = json['hotel_policies_text']?.toString();
    isFavourite = json['is_favourite'];
    profile = (json['profile'] != null) ? ResponseDetailHotelDataResultsProfile.fromJson(json['profile']) : null;
    isTmsSpecialHotel = json['is_tms_special_hotel'];
    tmsSpecialHotelPolicy = json['tms_special_hotel_policy']?.toString();
    tmsSpecialHotelPolicyEn = json['tms_special_hotel_policy_en']?.toString();
    // tags = json[]
    }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['name_vi'] = nameVi;
    data['code'] = code;
    data['des_title'] = desTitle;
    data['des_content'] = desContent;
    data['star_rate'] = starRate;
    data['extra_info'] = extraInfo;
    data['latitude'] = latitude;
    data['longitude'] = longitude;
    data['featured'] = featured;
    data['views'] = views;
    data['phone'] = phone;
    data['fax'] = fax;
    data['website'] = website;
    data['check_in_time'] = checkInTime;
    data['check_out_time'] = checkOutTime;
    if (hotelPolicies != null) {
      data['hotel_policies'] = hotelPolicies!.toJson();
    }
    data['full_address'] = fullAddress;
    data['extranet_approved_status'] = extranetApprovedStatus;
    data['type'] = type;
    data['street'] = street;
    data['minimum_commission'] = minimumCommission;
    data['total_rooms'] = totalRooms;
    if (facilities != null) {
      final v = facilities;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['facilities'] = arr0;
    }
    data['postal_code'] = postalCode;
    data['object_type'] = objectType;
    data['is_included_in_tax'] = isIncludedInTax;
    data['pay_at_hotel'] = payAtHotel;
    data['active_status'] = activeStatus;
    data['close_open_status'] = closeOpenStatus;
    data['discount_active'] = discountActive;
    data['included_service_fee'] = includedServiceFee;
    data['included_VAT'] = includedVAT;
    data['count_reviews'] = countReviews;
    data['review_point'] = reviewPoint;
    data['ean_properties_id'] = eanPropertiesId;
    data['country_id'] = countryId;
    data['commission'] = commission;
    data['childAge'] = childAge;
    data['adultAge'] = adultAge;
    data['sameBedChildPrice'] = sameBedChildPrice;
    data['extraBedLittleChildPrice'] = extraBedLittleChildPrice;
    data['extraBedChildPrice'] = extraBedChildPrice;
    data['extraBedPrice'] = extraBedPrice;
    data['extraBedOtherPolicies'] = extraBedOtherPolicies;
    data['sameBedLittleChildPrice'] = sameBedLittleChildPrice;
    if (images != null) {
      final v = images;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['images'] = arr0;
    }
    if (facilitiesPerCategories != null) {
      data['facilities_per_categories'] = facilitiesPerCategories!.toJson();
    }
    data['facilities_text'] = facilitiesText;
    if (categories != null) {
      data['categories'] = categories!.toJson();
    }
    if (facilityGroups != null) {
      final v = facilityGroups;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['facility_groups'] = arr0;
    }
    data['thumb_image'] = thumbImage;
    if (images_360 != null) {
      final v = images_360;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['images_360'] = arr0;
    }
    data['free_shuttle'] = freeShuttle;
    data['best_rate_commitment'] = bestRateCommitment;
    data['province_id'] = provinceId;
    data['city_id'] = cityId;
    data['ratings'] = ratings;
    data['province_name'] = provinceName;
    data['city_name'] = cityName;
    data['province_code'] = provinceCode;
    data['city_code'] = cityCode;
    data['hotel_status'] = hotelStatus;
    data['hotel_policies_text'] = hotelPoliciesText;
    data['is_favourite'] = isFavourite;
    if (profile != null) {
      data['profile'] = profile!.toJson();
    }
    data['is_tms_special_hotel'] = isTmsSpecialHotel;
    data['tms_special_hotel_policy'] = tmsSpecialHotelPolicy;
    data['tms_special_hotel_policy_en'] = tmsSpecialHotelPolicyEn;
    return data;
  }
}

class ResponseDetailHotelData {
/*
{
  "count": 1,
  "previous": null,
  "next": null,
  "results": [
    {
      "id": 439,
      "name": "Especen Hotel",
      "name_vi": "Especen Hotel",
      "code": "80439",
      "des_title": "Especen Hotel – Your home in Hanoi",
      "des_content": "<h2 style=\"text-align:center\"><strong>Especen Hotel &ndash; Kh&aacute;ch sạn rẻ v&agrave; tốt nhất H&agrave; Nội</strong></h2>\n\n<p style=\"text-align:center\"><em>28 Thọ Xương, Hàng Trống, Quận Ho&agrave;n Kiếm, H&agrave; Nội</em></p>\n\n<h3><strong>Vị tr&iacute; địa l&yacute;</strong></h3>\n\n<p>L&agrave; một trong những kh&aacute;ch sạn mini đầu ti&ecirc;n tại H&agrave; Nội <strong>Especen Hotel</strong> nằm giữa trung t&acirc;m Phố cổ với vị tr&iacute; thuận lợi gần kề Nh&agrave; Thờ Lớn, c&aacute;ch đền Ngọc Sơn 300m, Hồ Ho&agrave;n Kiếm 300m ngo&agrave;i ra c&oacute; thể đi bộ đến c&aacute;c điểm tham quan nổi tiếng tại H&agrave; Nội như Hồ Gươm, chợ Đồng Xu&acirc;n, Nh&agrave; h&aacute;t M&uacute;a Rối Nước Thăng Long&hellip;.Đ&acirc;y ch&iacute;nh l&agrave; địa điểm l&yacute; tưởng cho qu&yacute; kh&aacute;ch thăm quan phố phường H&agrave; Nội v&agrave; thưởng thức những m&oacute;n ăn đặc sắc tinh tế của người d&acirc;n thủ đ&ocirc;.</p>\n\n<h3><strong>Đặc điểm kh&aacute;ch sạn</strong></h3>\n\n<p><strong>Especen Hotel </strong>l&agrave; kh&aacute;ch sạn nằm tại khu phố trung t&acirc;m, thuận tiện cho qu&yacute; kh&aacute;ch đi lại thăm quan. Với thiết kế đơn giản, nhẹ nh&agrave;ng v&agrave; tinh tế nhưng kh&ocirc;ng k&eacute;m phần sang trọng, hiện đại c&ugrave;ng hệ thống ph&ograve;ng tiện nghi, nh&acirc;n vi&ecirc;n phục vụ chu đ&aacute;o th&acirc;n thiện cho bạn cảm gi&aacute;c thoải m&aacute;i nhất trong những ng&agrave;y&nbsp; nghỉ dưỡng của m&igrave;nh.</p>\n\n<p>N&eacute;p m&igrave;nh trong con phố nhỏ, nhưng lại mang đến sức lôi cuốn lạ kỳ cho nhiều du kh&aacute;ch quốc tế, từ kh&aacute;ch sạn bạn c&oacute; thể nghe tiếng chu&ocirc;ng nh&agrave; thờ ng&acirc;n vang v&agrave;o mỗi buổi sớm mai thức giấc. Hay từ ban c&ocirc;ng của kh&aacute;ch sạn c&oacute; thể nh&igrave;n bao qu&aacute;t to&agrave;n bộ khu phố cổ k&iacute;nh nhuốm m&agrave;u thời gian.</p>\n\n<p><strong>Especen Hotel </strong>thực sự mang đến cho bạn nhiều cung bậc cảm x&uacute;c trong kỳ nghỉ dưỡng tại thủ đ&ocirc;.</p>\n\n<h3><strong>Dịch vụ kh&aacute;ch sạn</strong></h3>\n\n<p>Thiết kế nhỏ gọn đạt ti&ecirc;u chuẩn kh&aacute;ch sạn 2 sao, <strong>Especen Hotel</strong> bao gồm 29 ph&ograve;ng cao cấp tiện nghi, với sự kết hợp h&agrave;i h&ograve;a kh&eacute;o l&eacute;o c&aacute;c m&agrave;u sắc trong ph&ograve;ng tạo n&ecirc;n kh&ocirc;ng gian ấn tượng, ấm c&uacute;ng v&agrave; v&ocirc; c&ugrave;ng thư th&aacute;i cho du kh&aacute;ch khi nghỉ ngơi tại đ&acirc;y.</p>\n\n<p>Tất cả hệ thống 29 ph&ograve;ng của kh&aacute;ch sạn đều được trang bị nội thất bằng gỗ giản dị c&ugrave;ng hệ thống đ&egrave;n chiếu s&aacute;ng, r&egrave;m cửa sang trọng, đi k&egrave;m c&oacute; wife, m&aacute;y lạnh, ti vi truyền h&igrave;nh c&aacute;p, khu vực tiếp kh&aacute;ch, tủ đựng đồ c&oacute; kh&oacute;a v&agrave; ph&ograve;ng tắm k&egrave;m v&ograve;i sen, d&eacute;p đi trong nh&agrave;, đồ vệ sinh c&aacute; nh&acirc;n miễn ph&iacute;.</p>\n\n<p>Ngo&agrave;i ra tại <strong>Especen Hotel </strong>c&ograve;n c&oacute; c&aacute;c dịch vụ giữ h&agrave;nh l&yacute;, giặt đồ, photocopy, thu đổi ngoại tệ, dọn dẹp ph&ograve;ng h&agrave;ng ng&agrave;y v&agrave; quầy lễ t&acirc;n phục vụ 24 giờ đ&aacute;p ứng nhu cầu nghỉ ngơi tiện nghi thoải m&aacute;i nhất cho qu&yacute; kh&aacute;ch h&agrave;ng.</p>\n\n<p>Nếu qu&yacute; kh&aacute;ch muốn kh&aacute;m ph&aacute; thủ đ&ocirc; v&agrave; những điểm du lịch v&ugrave;ng l&acirc;n cận tại kh&aacute;ch sạn c&ograve;n c&oacute; dịch vụ cho thu&ecirc; xe hơi, xe đạp thuận tiện cho việc đi lại, di chuyển.</p>\n\n<h3><strong>Điểm du lịch thu h&uacute;t kh&aacute;ch gần kh&aacute;ch sạn</strong></h3>\n\n<p><em>Chi&ecirc;m ngưỡng Nh&agrave; Thờ Lớn với lối kiến tr&uacute;c độc đ&aacute;o</em></p>\n\n<p>Nằm giữa trung th&agrave;nh phố H&agrave; Nội, Nh&agrave; Thờ Lớn mang phong c&aacute;ch Gothic v&agrave; dấu ấn thuộc địa ti&ecirc;u biểu tại H&agrave; Nội. Bước ch&acirc;n v&agrave;o khu&ocirc;n vi&ecirc;n nh&agrave; thờ bạn sẽ thực sự ngạc nhi&ecirc;n trước kh&ocirc;ng kh&iacute; y&ecirc;n tĩnh với sảnh đường rộng, h&agrave;ng ghế d&agrave;i c&ugrave;ng những &ocirc; cửa k&iacute;nh m&agrave;u sắc lấp l&aacute;nh đối lập hẳn với cảnh ồn &agrave;o, n&aacute;o nhiệt xung quanh b&ecirc;n ngo&agrave;i nh&agrave; thờ. V&agrave; khi đến phố Nh&agrave; Thờ, bạn cũng đừng qu&ecirc;n trải nghiệm cuộc sống th&uacute; vị quanh khu vực nh&agrave; thờ v&agrave;o buổi tối khi l&ecirc; la ở những qu&aacute;n tr&agrave; chanh t&aacute;n ngẫu c&ugrave;ng bạn b&egrave;.</p>\n\n<p>Đến với <strong>Especen Hotel</strong> qu&yacute; kh&aacute;ch sẽ được tận hưởng một kh&ocirc;ng gian thoải m&aacute;i nhất như đang ở ch&iacute;nh ng&ocirc;i nh&agrave; th&acirc;n y&ecirc;u của m&igrave;nh.</p>",
      "star_rate": 1.5,
      "extra_info": "",
      "latitude": 21.0290238,
      "longitude": 105.848413,
      "featured": false,
      "views": 2054,
      "phone": "2438244401",
      "fax": "",
      "website": "http://www.especen.vn",
      "check_in_time": "13:00:00",
      "check_out_time": "12:00:00",
      "hotel_policies": {
        "cancel_policies": [
          {
            "PenaltyType": "DepositPercent",
            "TimeUnit": "Days",
            "Amount": "100",
            "type": "Absent",
            "UnitTimeMultiplier": "0"
          }
        ],
        "other_policies": "",
        "refundable": true,
        "deposit": {
          "Amount": "0",
          "type": "Percent"
        },
        "discount_member": {
          "discount_active": false
        }
      },
      "full_address": "28 Thọ Xương, quận Hoàn Kiếm, Hà Nội",
      "extranet_approved_status": "extranet_hotel_approved",
      "type": "hotel",
      "street": "Thọ Xương",
      "minimum_commission": 15,
      "total_rooms": 25,
      "facilities": [
        {
          "id": 71,
          "name": "Taxi service",
          "name_vi": "Dịch vụ Taxi",
          "category_id": 3,
          "code": "taxi-service",
          "type": "hotel",
          "created_at": "2015-12-16T03:33:19.239Z"
        }
      ],
      "postal_code": "110214",
      "object_type": "ota_hotels",
      "is_included_in_tax": true,
      "pay_at_hotel": false,
      "active_status": true,
      "close_open_status": true,
      "discount_active": false,
      "included_service_fee": 5,
      "included_VAT": 1,
      "count_reviews": 6,
      "review_point": 8.47222222222222,
      "ean_properties_id": null,
      "country_id": 1,
      "commission": 15,
      "childAge": 5,
      "adultAge": 11,
      "sameBedChildPrice": 0,
      "extraBedLittleChildPrice": 0,
      "extraBedChildPrice": 50000,
      "extraBedPrice": 100000,
      "extraBedOtherPolicies": "Đệm phụ",
      "sameBedLittleChildPrice": null,
      "images": [
        {
          "hotel_id": 439,
          "name": "",
          "hotel_image_type": "other_hotel_image",
          "order": 0,
          "order_room": null,
          "is_visible": true,
          "is_visible_in_all": true,
          "is_hotel_thumb": true,
          "id": 164054,
          "slug": "450C444557E8452992E4_29087980.jpg",
          "image_type": "hotel_image",
          "height": "460.0",
          "width": "840.0"
        }
      ],
      "facilities_per_categories": {
        "transportation": [
          {
            "id": 71,
            "name": "Taxi service",
            "name_vi": "Dịch vụ Taxi",
            "category_id": 3,
            "code": "taxi-service",
            "type": "hotel",
            "created_at": "2015-12-16T03:33:19.239Z"
          }
        ],
        "cleaning-services": [
          {
            "id": 108,
            "name": "Cleaning Services",
            "name_vi": "Dịch vụ lau dọn",
            "category_id": 17,
            "code": "cleaning-services",
            "type": "hotel",
            "created_at": "2015-12-16T03:33:19.729Z"
          }
        ],
        "languages-spoken": [
          {
            "id": 149,
            "name": "English",
            "name_vi": "Tiếng Anh",
            "category_id": 5,
            "code": "english",
            "type": "hotel",
            "created_at": "2015-12-16T03:33:20.408Z"
          }
        ],
        "reception-services": [
          {
            "id": 73,
            "name": "24-Hour Front Desk",
            "name_vi": "Lễ tân 24 giờ",
            "category_id": 14,
            "code": "24-hour-front-desk",
            "type": "hotel",
            "created_at": "2015-12-16T03:33:19.263Z"
          }
        ],
        "internet": [
          {
            "id": 146,
            "name": "Free Wifi in all rooms",
            "name_vi": "Miễn phí Wifi trong phòng",
            "category_id": 4,
            "code": "free-wifi-in-all-rooms",
            "type": "hotel",
            "created_at": "2015-12-16T03:33:20.342Z"
          }
        ],
        "others": [
          {
            "id": 128,
            "name": "Designated Smoking Area",
            "name_vi": "Khu vực cho phép hút thuốc",
            "category_id": 20,
            "code": "designated-smoking-area",
            "type": "hotel",
            "created_at": "2015-12-16T03:33:20.013Z"
          }
        ]
      },
      "facilities_text": "Dịch vụ Taxi, Xe hơi, Đưa đón sân bay, Dịch vụ lau dọn, Phục vụ phòng hằng ngày, Tiếng Anh, Tiếng Việt, Lễ tân 24 giờ, An ninh 24 giờ, Nhận/ Trả phòng riêng, Dịch vụ Nhận/ Trả phòng nhanh, Dịch vụ hướng dẫn khách, Dịch vụ báo thức, Dịch vụ đặt vé, Bàn Tour, Thu đổi ngoại tệ, Dịch vụ giữ hành lý, Miễn phí Wifi trong phòng, Wifi ở khu vực công cộng, Miễn phí WIfi ở tất cả các khu vực, Khu vực cho phép hút thuốc, Không hút thuốc trong tất cả khu vực, Phòng gia đình, Máy điều hòa, Nhân viên đa ngôn ngữ",
      "categories": {
        "transportation": {
          "name": "Transportation",
          "name_vi": "Phương tiện đi lại"
        },
        "cleaning-services": {
          "name": "Cleaning services",
          "name_vi": "Dịch vụ lau dọn"
        },
        "languages-spoken": {
          "name": "Languages Spoken",
          "name_vi": "Ngôn ngữ sử dụng"
        },
        "reception-services": {
          "name": "Reception services",
          "name_vi": "Dịch vụ lễ tân"
        },
        "internet": {
          "name": "Internet",
          "name_vi": "Internet"
        },
        "others": {
          "name": "Others",
          "name_vi": "Dịch vụ khác"
        }
      },
      "facility_groups": [
        {
          "group_id": 53,
          "group_name": "Wifi",
          "group_order": 2,
          "key": "wifi"
        }
      ],
      "thumb_image": "450C444557E8452992E4_29087980.jpg",
      "images_360": [
        {
          "id": 3343,
          "hotel_id": 439,
          "path_file": "439/s1/"
        }
      ],
      "free_shuttle": true,
      "best_rate_commitment": false,
      "province_id": 66,
      "city_id": 712,
      "ratings": 1.5,
      "province_name": "Hà Nội",
      "city_name": "Quận Hoàn Kiếm",
      "province_code": "ha-noi",
      "city_code": "quan-hoan-kiem",
      "hotel_status": 1,
      "hotel_policies_text": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên.",
      "is_favourite": false,
      "profile": {
        "id": 15,
        "hotel_id": 439,
        "customer_market": [
          {
            "key": "eu_na"
          }
        ],
        "customer_source_market": [
          {
            "key": "others",
            "value": 100,
            "name": "Nhiều nguồn"
          }
        ],
        "position": [
          {
            "key": "old_town"
          }
        ],
        "notes": [
          {
            "vntrip_account": "hien.t.trinh@vntrip.vn",
            "content": "KS đã nói ko muốn nhận khách từ Vntrip ",
            "datetime": "2017-11-18T03:51:37.436Z"
          }
        ],
        "has_invoice": true
      },
      "is_tms_special_hotel": false,
      "tms_special_hotel_policy": "",
      "tms_special_hotel_policy_en": "",
      "tags": [
        null
      ]
    }
  ]
}
*/

  int? count;
  String? previous;
  String? next;
  List<ResponseDetailHotelDataResults?>? results;

  ResponseDetailHotelData({
    this.count,
    this.previous,
    this.next,
    this.results,
  });
  ResponseDetailHotelData.fromJson(Map<String, dynamic> json) {
    count = json['count']?.toInt();
    previous = json['previous']?.toString();
    next = json['next']?.toString();
    if (json['results'] != null) {
      final v = json['results'];
      final arr0 = <ResponseDetailHotelDataResults>[];
      v.forEach((v) {
        arr0.add(ResponseDetailHotelDataResults.fromJson(v));
      });
      results = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['count'] = count;
    data['previous'] = previous;
    data['next'] = next;
    if (results != null) {
      final v = results;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['results'] = arr0;
    }
    return data;
  }
}

class ResponseDetailHotel {
/*
{
  "status": "success",
  "data": {
    "count": 1,
    "previous": null,
    "next": null,
    "results": [
      {
        "id": 439,
        "name": "Especen Hotel",
        "name_vi": "Especen Hotel",
        "code": "80439",
        "des_title": "Especen Hotel – Your home in Hanoi",
        "des_content": "<h2 style=\"text-align:center\"><strong>Especen Hotel &ndash; Kh&aacute;ch sạn rẻ v&agrave; tốt nhất H&agrave; Nội</strong></h2>\n\n<p style=\"text-align:center\"><em>28 Thọ Xương, Hàng Trống, Quận Ho&agrave;n Kiếm, H&agrave; Nội</em></p>\n\n<h3><strong>Vị tr&iacute; địa l&yacute;</strong></h3>\n\n<p>L&agrave; một trong những kh&aacute;ch sạn mini đầu ti&ecirc;n tại H&agrave; Nội <strong>Especen Hotel</strong> nằm giữa trung t&acirc;m Phố cổ với vị tr&iacute; thuận lợi gần kề Nh&agrave; Thờ Lớn, c&aacute;ch đền Ngọc Sơn 300m, Hồ Ho&agrave;n Kiếm 300m ngo&agrave;i ra c&oacute; thể đi bộ đến c&aacute;c điểm tham quan nổi tiếng tại H&agrave; Nội như Hồ Gươm, chợ Đồng Xu&acirc;n, Nh&agrave; h&aacute;t M&uacute;a Rối Nước Thăng Long&hellip;.Đ&acirc;y ch&iacute;nh l&agrave; địa điểm l&yacute; tưởng cho qu&yacute; kh&aacute;ch thăm quan phố phường H&agrave; Nội v&agrave; thưởng thức những m&oacute;n ăn đặc sắc tinh tế của người d&acirc;n thủ đ&ocirc;.</p>\n\n<h3><strong>Đặc điểm kh&aacute;ch sạn</strong></h3>\n\n<p><strong>Especen Hotel </strong>l&agrave; kh&aacute;ch sạn nằm tại khu phố trung t&acirc;m, thuận tiện cho qu&yacute; kh&aacute;ch đi lại thăm quan. Với thiết kế đơn giản, nhẹ nh&agrave;ng v&agrave; tinh tế nhưng kh&ocirc;ng k&eacute;m phần sang trọng, hiện đại c&ugrave;ng hệ thống ph&ograve;ng tiện nghi, nh&acirc;n vi&ecirc;n phục vụ chu đ&aacute;o th&acirc;n thiện cho bạn cảm gi&aacute;c thoải m&aacute;i nhất trong những ng&agrave;y&nbsp; nghỉ dưỡng của m&igrave;nh.</p>\n\n<p>N&eacute;p m&igrave;nh trong con phố nhỏ, nhưng lại mang đến sức lôi cuốn lạ kỳ cho nhiều du kh&aacute;ch quốc tế, từ kh&aacute;ch sạn bạn c&oacute; thể nghe tiếng chu&ocirc;ng nh&agrave; thờ ng&acirc;n vang v&agrave;o mỗi buổi sớm mai thức giấc. Hay từ ban c&ocirc;ng của kh&aacute;ch sạn c&oacute; thể nh&igrave;n bao qu&aacute;t to&agrave;n bộ khu phố cổ k&iacute;nh nhuốm m&agrave;u thời gian.</p>\n\n<p><strong>Especen Hotel </strong>thực sự mang đến cho bạn nhiều cung bậc cảm x&uacute;c trong kỳ nghỉ dưỡng tại thủ đ&ocirc;.</p>\n\n<h3><strong>Dịch vụ kh&aacute;ch sạn</strong></h3>\n\n<p>Thiết kế nhỏ gọn đạt ti&ecirc;u chuẩn kh&aacute;ch sạn 2 sao, <strong>Especen Hotel</strong> bao gồm 29 ph&ograve;ng cao cấp tiện nghi, với sự kết hợp h&agrave;i h&ograve;a kh&eacute;o l&eacute;o c&aacute;c m&agrave;u sắc trong ph&ograve;ng tạo n&ecirc;n kh&ocirc;ng gian ấn tượng, ấm c&uacute;ng v&agrave; v&ocirc; c&ugrave;ng thư th&aacute;i cho du kh&aacute;ch khi nghỉ ngơi tại đ&acirc;y.</p>\n\n<p>Tất cả hệ thống 29 ph&ograve;ng của kh&aacute;ch sạn đều được trang bị nội thất bằng gỗ giản dị c&ugrave;ng hệ thống đ&egrave;n chiếu s&aacute;ng, r&egrave;m cửa sang trọng, đi k&egrave;m c&oacute; wife, m&aacute;y lạnh, ti vi truyền h&igrave;nh c&aacute;p, khu vực tiếp kh&aacute;ch, tủ đựng đồ c&oacute; kh&oacute;a v&agrave; ph&ograve;ng tắm k&egrave;m v&ograve;i sen, d&eacute;p đi trong nh&agrave;, đồ vệ sinh c&aacute; nh&acirc;n miễn ph&iacute;.</p>\n\n<p>Ngo&agrave;i ra tại <strong>Especen Hotel </strong>c&ograve;n c&oacute; c&aacute;c dịch vụ giữ h&agrave;nh l&yacute;, giặt đồ, photocopy, thu đổi ngoại tệ, dọn dẹp ph&ograve;ng h&agrave;ng ng&agrave;y v&agrave; quầy lễ t&acirc;n phục vụ 24 giờ đ&aacute;p ứng nhu cầu nghỉ ngơi tiện nghi thoải m&aacute;i nhất cho qu&yacute; kh&aacute;ch h&agrave;ng.</p>\n\n<p>Nếu qu&yacute; kh&aacute;ch muốn kh&aacute;m ph&aacute; thủ đ&ocirc; v&agrave; những điểm du lịch v&ugrave;ng l&acirc;n cận tại kh&aacute;ch sạn c&ograve;n c&oacute; dịch vụ cho thu&ecirc; xe hơi, xe đạp thuận tiện cho việc đi lại, di chuyển.</p>\n\n<h3><strong>Điểm du lịch thu h&uacute;t kh&aacute;ch gần kh&aacute;ch sạn</strong></h3>\n\n<p><em>Chi&ecirc;m ngưỡng Nh&agrave; Thờ Lớn với lối kiến tr&uacute;c độc đ&aacute;o</em></p>\n\n<p>Nằm giữa trung th&agrave;nh phố H&agrave; Nội, Nh&agrave; Thờ Lớn mang phong c&aacute;ch Gothic v&agrave; dấu ấn thuộc địa ti&ecirc;u biểu tại H&agrave; Nội. Bước ch&acirc;n v&agrave;o khu&ocirc;n vi&ecirc;n nh&agrave; thờ bạn sẽ thực sự ngạc nhi&ecirc;n trước kh&ocirc;ng kh&iacute; y&ecirc;n tĩnh với sảnh đường rộng, h&agrave;ng ghế d&agrave;i c&ugrave;ng những &ocirc; cửa k&iacute;nh m&agrave;u sắc lấp l&aacute;nh đối lập hẳn với cảnh ồn &agrave;o, n&aacute;o nhiệt xung quanh b&ecirc;n ngo&agrave;i nh&agrave; thờ. V&agrave; khi đến phố Nh&agrave; Thờ, bạn cũng đừng qu&ecirc;n trải nghiệm cuộc sống th&uacute; vị quanh khu vực nh&agrave; thờ v&agrave;o buổi tối khi l&ecirc; la ở những qu&aacute;n tr&agrave; chanh t&aacute;n ngẫu c&ugrave;ng bạn b&egrave;.</p>\n\n<p>Đến với <strong>Especen Hotel</strong> qu&yacute; kh&aacute;ch sẽ được tận hưởng một kh&ocirc;ng gian thoải m&aacute;i nhất như đang ở ch&iacute;nh ng&ocirc;i nh&agrave; th&acirc;n y&ecirc;u của m&igrave;nh.</p>",
        "star_rate": 1.5,
        "extra_info": "",
        "latitude": 21.0290238,
        "longitude": 105.848413,
        "featured": false,
        "views": 2054,
        "phone": "2438244401",
        "fax": "",
        "website": "http://www.especen.vn",
        "check_in_time": "13:00:00",
        "check_out_time": "12:00:00",
        "hotel_policies": {
          "cancel_policies": [
            {
              "PenaltyType": "DepositPercent",
              "TimeUnit": "Days",
              "Amount": "100",
              "type": "Absent",
              "UnitTimeMultiplier": "0"
            }
          ],
          "other_policies": "",
          "refundable": true,
          "deposit": {
            "Amount": "0",
            "type": "Percent"
          },
          "discount_member": {
            "discount_active": false
          }
        },
        "full_address": "28 Thọ Xương, quận Hoàn Kiếm, Hà Nội",
        "extranet_approved_status": "extranet_hotel_approved",
        "type": "hotel",
        "street": "Thọ Xương",
        "minimum_commission": 15,
        "total_rooms": 25,
        "facilities": [
          {
            "id": 71,
            "name": "Taxi service",
            "name_vi": "Dịch vụ Taxi",
            "category_id": 3,
            "code": "taxi-service",
            "type": "hotel",
            "created_at": "2015-12-16T03:33:19.239Z"
          }
        ],
        "postal_code": "110214",
        "object_type": "ota_hotels",
        "is_included_in_tax": true,
        "pay_at_hotel": false,
        "active_status": true,
        "close_open_status": true,
        "discount_active": false,
        "included_service_fee": 5,
        "included_VAT": 1,
        "count_reviews": 6,
        "review_point": 8.47222222222222,
        "ean_properties_id": null,
        "country_id": 1,
        "commission": 15,
        "childAge": 5,
        "adultAge": 11,
        "sameBedChildPrice": 0,
        "extraBedLittleChildPrice": 0,
        "extraBedChildPrice": 50000,
        "extraBedPrice": 100000,
        "extraBedOtherPolicies": "Đệm phụ",
        "sameBedLittleChildPrice": null,
        "images": [
          {
            "hotel_id": 439,
            "name": "",
            "hotel_image_type": "other_hotel_image",
            "order": 0,
            "order_room": null,
            "is_visible": true,
            "is_visible_in_all": true,
            "is_hotel_thumb": true,
            "id": 164054,
            "slug": "450C444557E8452992E4_29087980.jpg",
            "image_type": "hotel_image",
            "height": "460.0",
            "width": "840.0"
          }
        ],
        "facilities_per_categories": {
          "transportation": [
            {
              "id": 71,
              "name": "Taxi service",
              "name_vi": "Dịch vụ Taxi",
              "category_id": 3,
              "code": "taxi-service",
              "type": "hotel",
              "created_at": "2015-12-16T03:33:19.239Z"
            }
          ],
          "cleaning-services": [
            {
              "id": 108,
              "name": "Cleaning Services",
              "name_vi": "Dịch vụ lau dọn",
              "category_id": 17,
              "code": "cleaning-services",
              "type": "hotel",
              "created_at": "2015-12-16T03:33:19.729Z"
            }
          ],
          "languages-spoken": [
            {
              "id": 149,
              "name": "English",
              "name_vi": "Tiếng Anh",
              "category_id": 5,
              "code": "english",
              "type": "hotel",
              "created_at": "2015-12-16T03:33:20.408Z"
            }
          ],
          "reception-services": [
            {
              "id": 73,
              "name": "24-Hour Front Desk",
              "name_vi": "Lễ tân 24 giờ",
              "category_id": 14,
              "code": "24-hour-front-desk",
              "type": "hotel",
              "created_at": "2015-12-16T03:33:19.263Z"
            }
          ],
          "internet": [
            {
              "id": 146,
              "name": "Free Wifi in all rooms",
              "name_vi": "Miễn phí Wifi trong phòng",
              "category_id": 4,
              "code": "free-wifi-in-all-rooms",
              "type": "hotel",
              "created_at": "2015-12-16T03:33:20.342Z"
            }
          ],
          "others": [
            {
              "id": 128,
              "name": "Designated Smoking Area",
              "name_vi": "Khu vực cho phép hút thuốc",
              "category_id": 20,
              "code": "designated-smoking-area",
              "type": "hotel",
              "created_at": "2015-12-16T03:33:20.013Z"
            }
          ]
        },
        "facilities_text": "Dịch vụ Taxi, Xe hơi, Đưa đón sân bay, Dịch vụ lau dọn, Phục vụ phòng hằng ngày, Tiếng Anh, Tiếng Việt, Lễ tân 24 giờ, An ninh 24 giờ, Nhận/ Trả phòng riêng, Dịch vụ Nhận/ Trả phòng nhanh, Dịch vụ hướng dẫn khách, Dịch vụ báo thức, Dịch vụ đặt vé, Bàn Tour, Thu đổi ngoại tệ, Dịch vụ giữ hành lý, Miễn phí Wifi trong phòng, Wifi ở khu vực công cộng, Miễn phí WIfi ở tất cả các khu vực, Khu vực cho phép hút thuốc, Không hút thuốc trong tất cả khu vực, Phòng gia đình, Máy điều hòa, Nhân viên đa ngôn ngữ",
        "categories": {
          "transportation": {
            "name": "Transportation",
            "name_vi": "Phương tiện đi lại"
          },
          "cleaning-services": {
            "name": "Cleaning services",
            "name_vi": "Dịch vụ lau dọn"
          },
          "languages-spoken": {
            "name": "Languages Spoken",
            "name_vi": "Ngôn ngữ sử dụng"
          },
          "reception-services": {
            "name": "Reception services",
            "name_vi": "Dịch vụ lễ tân"
          },
          "internet": {
            "name": "Internet",
            "name_vi": "Internet"
          },
          "others": {
            "name": "Others",
            "name_vi": "Dịch vụ khác"
          }
        },
        "facility_groups": [
          {
            "group_id": 53,
            "group_name": "Wifi",
            "group_order": 2,
            "key": "wifi"
          }
        ],
        "thumb_image": "450C444557E8452992E4_29087980.jpg",
        "images_360": [
          {
            "id": 3343,
            "hotel_id": 439,
            "path_file": "439/s1/"
          }
        ],
        "free_shuttle": true,
        "best_rate_commitment": false,
        "province_id": 66,
        "city_id": 712,
        "ratings": 1.5,
        "province_name": "Hà Nội",
        "city_name": "Quận Hoàn Kiếm",
        "province_code": "ha-noi",
        "city_code": "quan-hoan-kiem",
        "hotel_status": 1,
        "hotel_policies_text": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên.",
        "is_favourite": false,
        "profile": {
          "id": 15,
          "hotel_id": 439,
          "customer_market": [
            {
              "key": "eu_na"
            }
          ],
          "customer_source_market": [
            {
              "key": "others",
              "value": 100,
              "name": "Nhiều nguồn"
            }
          ],
          "position": [
            {
              "key": "old_town"
            }
          ],
          "notes": [
            {
              "vntrip_account": "hien.t.trinh@vntrip.vn",
              "content": "KS đã nói ko muốn nhận khách từ Vntrip ",
              "datetime": "2017-11-18T03:51:37.436Z"
            }
          ],
          "has_invoice": true
        },
        "is_tms_special_hotel": false,
        "tms_special_hotel_policy": "",
        "tms_special_hotel_policy_en": "",
        "tags": [
          null
        ]
      }
    ]
  }
}
*/

  String? status;
  ResponseDetailHotelData? data;

  ResponseDetailHotel({
    this.status,
    this.data,
  });
  ResponseDetailHotel.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toString();
    data = (json['data'] != null) ? ResponseDetailHotelData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}
