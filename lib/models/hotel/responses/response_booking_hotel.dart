///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ResponseBookingHotelDataPrices {
/*
{
  "total_price": 500000,
  "final_discount_value": 0,
  "final_price": 500000,
  "coupon_price": 0,
  "hotel_item_total_price": 500000,
  "flight_item_total_price": 0,
  "addons_price": 0,
  "loyalty_benefit_price": 0,
  "vat": 0,
  "loyalty_redeem_price": 0,
  "payment_fee": 0
}
*/

  int? totalPrice;
  int? finalDiscountValue;
  int? finalPrice;
  int? couponPrice;
  int? hotelItemTotalPrice;
  int? flightItemTotalPrice;
  int? addonsPrice;
  int? loyaltyBenefitPrice;
  int? vat;
  int? loyaltyRedeemPrice;
  int? paymentFee;

  ResponseBookingHotelDataPrices({
    this.totalPrice,
    this.finalDiscountValue,
    this.finalPrice,
    this.couponPrice,
    this.hotelItemTotalPrice,
    this.flightItemTotalPrice,
    this.addonsPrice,
    this.loyaltyBenefitPrice,
    this.vat,
    this.loyaltyRedeemPrice,
    this.paymentFee,
  });
  ResponseBookingHotelDataPrices.fromJson(Map<String, dynamic> json) {
    totalPrice = json['total_price']?.toInt();
    finalDiscountValue = json['final_discount_value']?.toInt();
    finalPrice = json['final_price']?.toInt();
    couponPrice = json['coupon_price']?.toInt();
    hotelItemTotalPrice = json['hotel_item_total_price']?.toInt();
    flightItemTotalPrice = json['flight_item_total_price']?.toInt();
    addonsPrice = json['addons_price']?.toInt();
    loyaltyBenefitPrice = json['loyalty_benefit_price']?.toInt();
    vat = json['vat']?.toInt();
    loyaltyRedeemPrice = json['loyalty_redeem_price']?.toInt();
    paymentFee = json['payment_fee']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['total_price'] = totalPrice;
    data['final_discount_value'] = finalDiscountValue;
    data['final_price'] = finalPrice;
    data['coupon_price'] = couponPrice;
    data['hotel_item_total_price'] = hotelItemTotalPrice;
    data['flight_item_total_price'] = flightItemTotalPrice;
    data['addons_price'] = addonsPrice;
    data['loyalty_benefit_price'] = loyaltyBenefitPrice;
    data['vat'] = vat;
    data['loyalty_redeem_price'] = loyaltyRedeemPrice;
    data['payment_fee'] = paymentFee;
    return data;
  }
}

class ResponseBookingHotelDataBonusCashback {
/*
{
  "coupon_cashback": null,
  "allow_cashback": true,
  "allow_redeem": true,
  "bonus_id": null,
  "campaign_id": null,
  "campaign_type": null
}
*/

  String? couponCashback;
  bool? allowCashback;
  bool? allowRedeem;
  String? bonusId;
  String? campaignId;
  String? campaignType;

  ResponseBookingHotelDataBonusCashback({
    this.couponCashback,
    this.allowCashback,
    this.allowRedeem,
    this.bonusId,
    this.campaignId,
    this.campaignType,
  });
  ResponseBookingHotelDataBonusCashback.fromJson(Map<String, dynamic> json) {
    couponCashback = json['coupon_cashback']?.toString();
    allowCashback = json['allow_cashback'];
    allowRedeem = json['allow_redeem'];
    bonusId = json['bonus_id']?.toString();
    campaignId = json['campaign_id']?.toString();
    campaignType = json['campaign_type']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['coupon_cashback'] = couponCashback;
    data['allow_cashback'] = allowCashback;
    data['allow_redeem'] = allowRedeem;
    data['bonus_id'] = bonusId;
    data['campaign_id'] = campaignId;
    data['campaign_type'] = campaignType;
    return data;
  }
}

class ResponseBookingHotelDataValidations {
/*
{
  "loyalty_redeem_info": null,
  "coupon_info": null
}
*/

  String? loyaltyRedeemInfo;
  String? couponInfo;

  ResponseBookingHotelDataValidations({
    this.loyaltyRedeemInfo,
    this.couponInfo,
  });
  ResponseBookingHotelDataValidations.fromJson(Map<String, dynamic> json) {
    loyaltyRedeemInfo = json['loyalty_redeem_info']?.toString();
    couponInfo = json['coupon_info']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['loyalty_redeem_info'] = loyaltyRedeemInfo;
    data['coupon_info'] = couponInfo;
    return data;
  }
}

class ResponseBookingHotelDataHotelShowPricesLoyaltyDiscount {
/*
{
  "show": false,
  "order": 4,
  "title": "",
  "discount_type": "",
  "discount_value": 0,
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelShowPricesLoyaltyDiscount({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelShowPricesLoyaltyDiscount.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelShowPricesMemberDiscount {
/*
{
  "show": false,
  "order": 2,
  "title": "SECRET_DEALS",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelShowPricesMemberDiscount({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelShowPricesMemberDiscount.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelShowPricesDiscountCoupon {
/*
{
  "show": false,
  "order": 5,
  "title": "",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelShowPricesDiscountCoupon({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelShowPricesDiscountCoupon.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelShowPricesMobileRate {
/*
{
  "show": false,
  "order": 3,
  "title": "MOBILE_RATE",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelShowPricesMobileRate({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelShowPricesMobileRate.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelShowPricesFinalPrice {
/*
{
  "show": false,
  "order": 6,
  "title": "Giá cuối",
  "discount_type": "PERCENT",
  "excl_vat_fee_price": 425000,
  "incl_vat_fee_price": 500000,
  "excl_discount_value": 0,
  "incl_discount_value": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  int? exclVatFeePrice;
  int? inclVatFeePrice;
  int? exclDiscountValue;
  int? inclDiscountValue;

  ResponseBookingHotelDataHotelShowPricesFinalPrice({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
    this.exclDiscountValue,
    this.inclDiscountValue,
  });
  ResponseBookingHotelDataHotelShowPricesFinalPrice.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclDiscountValue = json['excl_discount_value']?.toInt();
    inclDiscountValue = json['incl_discount_value']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_discount_value'] = exclDiscountValue;
    data['incl_discount_value'] = inclDiscountValue;
    return data;
  }
}

class ResponseBookingHotelDataHotelShowPricesPromotion {
/*
{
  "show": false,
  "order": 1,
  "title": "",
  "end_time": -1,
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  int? endTime;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelShowPricesPromotion({
    this.theShow,
    this.order,
    this.title,
    this.endTime,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelShowPricesPromotion.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    endTime = json['end_time']?.toInt();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['end_time'] = endTime;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelShowPrices {
/*
{
  "promotion": {
    "show": false,
    "order": 1,
    "title": "",
    "end_time": -1,
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "final_price": {
    "show": false,
    "order": 6,
    "title": "Giá cuối",
    "discount_type": "PERCENT",
    "excl_vat_fee_price": 425000,
    "incl_vat_fee_price": 500000,
    "excl_discount_value": 0,
    "incl_discount_value": 0
  },
  "mobile_rate": {
    "show": false,
    "order": 3,
    "title": "MOBILE_RATE",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "discount_coupon": {
    "show": false,
    "order": 5,
    "title": "",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "member_discount": {
    "show": false,
    "order": 2,
    "title": "SECRET_DEALS",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "loyalty_discount": {
    "show": false,
    "order": 4,
    "title": "",
    "discount_type": "",
    "discount_value": 0,
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  }
}
*/

  ResponseBookingHotelDataHotelShowPricesPromotion? promotion;
  ResponseBookingHotelDataHotelShowPricesFinalPrice? finalPrice;
  ResponseBookingHotelDataHotelShowPricesMobileRate? mobileRate;
  ResponseBookingHotelDataHotelShowPricesDiscountCoupon? discountCoupon;
  ResponseBookingHotelDataHotelShowPricesMemberDiscount? memberDiscount;
  ResponseBookingHotelDataHotelShowPricesLoyaltyDiscount? loyaltyDiscount;

  ResponseBookingHotelDataHotelShowPrices({
    this.promotion,
    this.finalPrice,
    this.mobileRate,
    this.discountCoupon,
    this.memberDiscount,
    this.loyaltyDiscount,
  });
  ResponseBookingHotelDataHotelShowPrices.fromJson(Map<String, dynamic> json) {
    promotion = (json['promotion'] != null) ? ResponseBookingHotelDataHotelShowPricesPromotion.fromJson(json['promotion']) : null;
    finalPrice = (json['final_price'] != null) ? ResponseBookingHotelDataHotelShowPricesFinalPrice.fromJson(json['final_price']) : null;
    mobileRate = (json['mobile_rate'] != null) ? ResponseBookingHotelDataHotelShowPricesMobileRate.fromJson(json['mobile_rate']) : null;
    discountCoupon = (json['discount_coupon'] != null) ? ResponseBookingHotelDataHotelShowPricesDiscountCoupon.fromJson(json['discount_coupon']) : null;
    memberDiscount = (json['member_discount'] != null) ? ResponseBookingHotelDataHotelShowPricesMemberDiscount.fromJson(json['member_discount']) : null;
    loyaltyDiscount = (json['loyalty_discount'] != null) ? ResponseBookingHotelDataHotelShowPricesLoyaltyDiscount.fromJson(json['loyalty_discount']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (promotion != null) {
      data['promotion'] = promotion!.toJson();
    }
    if (finalPrice != null) {
      data['final_price'] = finalPrice!.toJson();
    }
    if (mobileRate != null) {
      data['mobile_rate'] = mobileRate!.toJson();
    }
    if (discountCoupon != null) {
      data['discount_coupon'] = discountCoupon!.toJson();
    }
    if (memberDiscount != null) {
      data['member_discount'] = memberDiscount!.toJson();
    }
    if (loyaltyDiscount != null) {
      data['loyalty_discount'] = loyaltyDiscount!.toJson();
    }
    return data;
  }
}

class ResponseBookingHotelDataHotelBedTypeDataReformatBedTypesBedData {
/*
{
  "type": "Giường cỡ King",
  "count": "1",
  "description": ""
}
*/

  String? type;
  String? count;
  String? description;

  ResponseBookingHotelDataHotelBedTypeDataReformatBedTypesBedData({
    this.type,
    this.count,
    this.description,
  });
  ResponseBookingHotelDataHotelBedTypeDataReformatBedTypesBedData.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    count = json['count']?.toString();
    description = json['description']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['count'] = count;
    data['description'] = description;
    return data;
  }
}

class ResponseBookingHotelDataHotelBedTypeDataReformatBedTypes {
/*
{
  "bed_data": [
    {
      "type": "Giường cỡ King",
      "count": "1",
      "description": ""
    }
  ],
  "group_id": "0"
}
*/

  List<ResponseBookingHotelDataHotelBedTypeDataReformatBedTypesBedData?>? bedData;
  String? groupId;

  ResponseBookingHotelDataHotelBedTypeDataReformatBedTypes({
    this.bedData,
    this.groupId,
  });
  ResponseBookingHotelDataHotelBedTypeDataReformatBedTypes.fromJson(Map<String, dynamic> json) {
    if (json['bed_data'] != null) {
      final v = json['bed_data'];
      final arr0 = <ResponseBookingHotelDataHotelBedTypeDataReformatBedTypesBedData>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelBedTypeDataReformatBedTypesBedData.fromJson(v));
      });
      bedData = arr0;
    }
    groupId = json['group_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (bedData != null) {
      final v = bedData;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['bed_data'] = arr0;
    }
    data['group_id'] = groupId;
    return data;
  }
}

class ResponseBookingHotelDataHotelBedTypeData {
/*
{
  "selected_group_id": 0,
  "reformat_bed_types": [
    {
      "bed_data": [
        {
          "type": "Giường cỡ King",
          "count": "1",
          "description": ""
        }
      ],
      "group_id": "0"
    }
  ]
}
*/

  int? selectedGroupId;
  List<ResponseBookingHotelDataHotelBedTypeDataReformatBedTypes?>? reformatBedTypes;

  ResponseBookingHotelDataHotelBedTypeData({
    this.selectedGroupId,
    this.reformatBedTypes,
  });
  ResponseBookingHotelDataHotelBedTypeData.fromJson(Map<String, dynamic> json) {
    selectedGroupId = json['selected_group_id']?.toInt();
    if (json['reformat_bed_types'] != null) {
      final v = json['reformat_bed_types'];
      final arr0 = <ResponseBookingHotelDataHotelBedTypeDataReformatBedTypes>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelBedTypeDataReformatBedTypes.fromJson(v));
      });
      reformatBedTypes = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['selected_group_id'] = selectedGroupId;
    if (reformatBedTypes != null) {
      final v = reformatBedTypes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['reformat_bed_types'] = arr0;
    }
    return data;
  }
}

class ResponseBookingHotelDataHotelReceiverData {
/*
{
  "phone": "344850761",
  "last_name": "Bùi",
  "first_name": "Chiên",
  "country_code": "84"
}
*/

  String? phone;
  String? lastName;
  String? firstName;
  String? countryCode;

  ResponseBookingHotelDataHotelReceiverData({
    this.phone,
    this.lastName,
    this.firstName,
    this.countryCode,
  });
  ResponseBookingHotelDataHotelReceiverData.fromJson(Map<String, dynamic> json) {
    phone = json['phone']?.toString();
    lastName = json['last_name']?.toString();
    firstName = json['first_name']?.toString();
    countryCode = json['country_code']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['phone'] = phone;
    data['last_name'] = lastName;
    data['first_name'] = firstName;
    data['country_code'] = countryCode;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoSpecificFacilities {
/*
{
  "lcd": true,
  "bathtub": true,
  "minibar": true,
  "no_smoking": true,
  "private_pool": false,
  "tv_and_cable": true,
  "air_conditioner": true
}
*/

  bool? lcd;
  bool? bathtub;
  bool? minibar;
  bool? noSmoking;
  bool? privatePool;
  bool? tvAndCable;
  bool? airConditioner;

  ResponseBookingHotelDataHotelTokenDataRoomInfoSpecificFacilities({
    this.lcd,
    this.bathtub,
    this.minibar,
    this.noSmoking,
    this.privatePool,
    this.tvAndCable,
    this.airConditioner,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoSpecificFacilities.fromJson(Map<String, dynamic> json) {
    lcd = json['lcd'];
    bathtub = json['bathtub'];
    minibar = json['minibar'];
    noSmoking = json['no_smoking'];
    privatePool = json['private_pool'];
    tvAndCable = json['tv_and_cable'];
    airConditioner = json['air_conditioner'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['lcd'] = lcd;
    data['bathtub'] = bathtub;
    data['minibar'] = minibar;
    data['no_smoking'] = noSmoking;
    data['private_pool'] = privatePool;
    data['tv_and_cable'] = tvAndCable;
    data['air_conditioner'] = airConditioner;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypesBedData {
/*
{
  "type": "Giường cỡ King",
  "count": "1",
  "description": ""
}
*/

  String? type;
  String? count;
  String? description;

  ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypesBedData({
    this.type,
    this.count,
    this.description,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypesBedData.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    count = json['count']?.toString();
    description = json['description']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['count'] = count;
    data['description'] = description;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypes {
/*
{
  "bed_data": [
    {
      "type": "Giường cỡ King",
      "count": "1",
      "description": ""
    }
  ],
  "group_id": "0"
}
*/

  List<ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypesBedData?>? bedData;
  String? groupId;

  ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypes({
    this.bedData,
    this.groupId,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypes.fromJson(Map<String, dynamic> json) {
    if (json['bed_data'] != null) {
      final v = json['bed_data'];
      final arr0 = <ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypesBedData>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypesBedData.fromJson(v));
      });
      bedData = arr0;
    }
    groupId = json['group_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (bedData != null) {
      final v = bedData;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['bed_data'] = arr0;
    }
    data['group_id'] = groupId;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoClientMetadata {
/*
{
  "request_from": "app_android",
  "customerIpAddress": "118.70.118.215",
  "customerSessionId": "16GuKzV8K1@92YcLg85uR5ku;peVriRZSn!1.UTh, qHGT0xYHSPLyscJP",
  "customerUserAgent": "vntrip.vn/129 ( Android 7.0 )"
}
*/

  String? requestFrom;
  String? customerIpAddress;
  String? customerSessionId;
  String? customerUserAgent;

  ResponseBookingHotelDataHotelTokenDataRoomInfoClientMetadata({
    this.requestFrom,
    this.customerIpAddress,
    this.customerSessionId,
    this.customerUserAgent,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoClientMetadata.fromJson(Map<String, dynamic> json) {
    requestFrom = json['request_from']?.toString();
    customerIpAddress = json['customerIpAddress']?.toString();
    customerSessionId = json['customerSessionId']?.toString();
    customerUserAgent = json['customerUserAgent']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['request_from'] = requestFrom;
    data['customerIpAddress'] = customerIpAddress;
    data['customerSessionId'] = customerSessionId;
    data['customerUserAgent'] = customerUserAgent;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoExtraBedInfo {
/*
{
  "adult_age": null,
  "child_age": null,
  "extra_bed_price": 0,
  "same_bed_child_price": 0,
  "extra_bed_child_price": 0,
  "extra_bed_other_policies": "",
  "extra_bed_little_child_price": 0
}
*/

  String? adultAge;
  String? childAge;
  int? extraBedPrice;
  int? sameBedChildPrice;
  int? extraBedChildPrice;
  String? extraBedOtherPolicies;
  int? extraBedLittleChildPrice;

  ResponseBookingHotelDataHotelTokenDataRoomInfoExtraBedInfo({
    this.adultAge,
    this.childAge,
    this.extraBedPrice,
    this.sameBedChildPrice,
    this.extraBedChildPrice,
    this.extraBedOtherPolicies,
    this.extraBedLittleChildPrice,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoExtraBedInfo.fromJson(Map<String, dynamic> json) {
    adultAge = json['adult_age']?.toString();
    childAge = json['child_age']?.toString();
    extraBedPrice = json['extra_bed_price']?.toInt();
    sameBedChildPrice = json['same_bed_child_price']?.toInt();
    extraBedChildPrice = json['extra_bed_child_price']?.toInt();
    extraBedOtherPolicies = json['extra_bed_other_policies']?.toString();
    extraBedLittleChildPrice = json['extra_bed_little_child_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['adult_age'] = adultAge;
    data['child_age'] = childAge;
    data['extra_bed_price'] = extraBedPrice;
    data['same_bed_child_price'] = sameBedChildPrice;
    data['extra_bed_child_price'] = extraBedChildPrice;
    data['extra_bed_other_policies'] = extraBedOtherPolicies;
    data['extra_bed_little_child_price'] = extraBedLittleChildPrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoBedTypes {
/*
{
  "type": "Giường cỡ King",
  "count": "1",
  "extra": false,
  "description": ""
}
*/

  String? type;
  String? count;
  bool? extra;
  String? description;

  ResponseBookingHotelDataHotelTokenDataRoomInfoBedTypes({
    this.type,
    this.count,
    this.extra,
    this.description,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoBedTypes.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    count = json['count']?.toString();
    extra = json['extra'];
    description = json['description']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['count'] = count;
    data['extra'] = extra;
    data['description'] = description;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoPhotos {
/*
{
  "order": 2,
  "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
  "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
}
*/

  int? order;
  String? roomImage;
  String? thumbImage;

  ResponseBookingHotelDataHotelTokenDataRoomInfoPhotos({
    this.order,
    this.roomImage,
    this.thumbImage,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoPhotos.fromJson(Map<String, dynamic> json) {
    order = json['order']?.toInt();
    roomImage = json['room_image']?.toString();
    thumbImage = json['thumb_image']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['order'] = order;
    data['room_image'] = roomImage;
    data['thumb_image'] = thumbImage;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfoThumb {
/*
{
  "order": 2,
  "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
  "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
}
*/

  int? order;
  String? roomImage;
  String? thumbImage;

  ResponseBookingHotelDataHotelTokenDataRoomInfoThumb({
    this.order,
    this.roomImage,
    this.thumbImage,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfoThumb.fromJson(Map<String, dynamic> json) {
    order = json['order']?.toInt();
    roomImage = json['room_image']?.toString();
    thumbImage = json['thumb_image']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['order'] = order;
    data['room_image'] = roomImage;
    data['thumb_image'] = thumbImage;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRoomInfo {
/*
{
  "id": 50195,
  "name": "Executive Double/Twin",
  "count": 5,
  "thumb": {
    "order": 2,
    "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
    "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
  },
  "photos": [
    {
      "order": 2,
      "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
      "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
    }
  ],
  "hotel_id": 70518,
  "provider": "VNTRIP",
  "bed_types": [
    [
      {
        "type": "Giường cỡ King",
        "count": "1",
        "extra": false,
        "description": ""
      }
    ]
  ],
  "max_adult": 2,
  "min_price": 500000,
  "room_area": "38.0 m2",
  "facilities": "Điều hòa, Giá treo quần áo, Bàn, Bồn tắm, Két sắt, Tường cách âm, Máy sấy, Tủ quần áo, Phòng không hút thuốc, Phòng tắm của khách, Bồn tắm, Áo choàng tắm, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Bồn tắm và vòi sen riêng biệt, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Máy pha trà/ café, Đồng hồ báo thức , Khăn, Dịch vụ báo thức, Đồng hồ báo thức, Hướng thành phố",
  "sort_price": 500000,
  "description": "",
  "max_children": 1,
  "max_extra_bed": 1,
  "extra_bed_info": {
    "adult_age": null,
    "child_age": null,
    "extra_bed_price": 0,
    "same_bed_child_price": 0,
    "extra_bed_child_price": 0,
    "extra_bed_other_policies": "",
    "extra_bed_little_child_price": 0
  },
  "additional_info": null,
  "client_metadata": {
    "request_from": "app_android",
    "customerIpAddress": "118.70.118.215",
    "customerSessionId": "16GuKzV8K1@92YcLg85uR5ku;peVriRZSn!1.UTh, qHGT0xYHSPLyscJP",
    "customerUserAgent": "vntrip.vn/129 ( Android 7.0 )"
  },
  "reformat_bed_types": [
    {
      "bed_data": [
        {
          "type": "Giường cỡ King",
          "count": "1",
          "description": ""
        }
      ],
      "group_id": "0"
    }
  ],
  "specific_facilities": {
    "lcd": true,
    "bathtub": true,
    "minibar": true,
    "no_smoking": true,
    "private_pool": false,
    "tv_and_cable": true,
    "air_conditioner": true
  }
}
*/

  int? id;
  String? name;
  int? count;
  ResponseBookingHotelDataHotelTokenDataRoomInfoThumb? thumb;
  List<ResponseBookingHotelDataHotelTokenDataRoomInfoPhotos?>? photos;
  int? hotelId;
  String? provider;
  List<List<ResponseBookingHotelDataHotelTokenDataRoomInfoBedTypes?>?>? bedTypes;
  int? maxAdult;
  int? minPrice;
  String? roomArea;
  String? facilities;
  int? sortPrice;
  String? description;
  int? maxChildren;
  int? maxExtraBed;
  ResponseBookingHotelDataHotelTokenDataRoomInfoExtraBedInfo? extraBedInfo;
  String? additionalInfo;
  ResponseBookingHotelDataHotelTokenDataRoomInfoClientMetadata? clientMetadata;
  List<ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypes?>? reformatBedTypes;
  ResponseBookingHotelDataHotelTokenDataRoomInfoSpecificFacilities? specificFacilities;

  ResponseBookingHotelDataHotelTokenDataRoomInfo({
    this.id,
    this.name,
    this.count,
    this.thumb,
    this.photos,
    this.hotelId,
    this.provider,
    this.bedTypes,
    this.maxAdult,
    this.minPrice,
    this.roomArea,
    this.facilities,
    this.sortPrice,
    this.description,
    this.maxChildren,
    this.maxExtraBed,
    this.extraBedInfo,
    this.additionalInfo,
    this.clientMetadata,
    this.reformatBedTypes,
    this.specificFacilities,
  });
  ResponseBookingHotelDataHotelTokenDataRoomInfo.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    count = json['count']?.toInt();
    thumb = (json['thumb'] != null) ? ResponseBookingHotelDataHotelTokenDataRoomInfoThumb.fromJson(json['thumb']) : null;
    if (json['photos'] != null) {
      final v = json['photos'];
      final arr0 = <ResponseBookingHotelDataHotelTokenDataRoomInfoPhotos>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelTokenDataRoomInfoPhotos.fromJson(v));
      });
      photos = arr0;
    }
    hotelId = json['hotel_id']?.toInt();
    provider = json['provider']?.toString();
    if (json['bed_types'] != null) {
      final v = json['bed_types'];
      final arr0 = <List<ResponseBookingHotelDataHotelTokenDataRoomInfoBedTypes>>[];
      v.forEach((v) {
        final arr1 = <ResponseBookingHotelDataHotelTokenDataRoomInfoBedTypes>[];
        v.forEach((v) {
          arr1.add(ResponseBookingHotelDataHotelTokenDataRoomInfoBedTypes.fromJson(v));
        });
        arr0.add(arr1);
      });
      bedTypes = arr0;
    }
    maxAdult = json['max_adult']?.toInt();
    minPrice = json['min_price']?.toInt();
    roomArea = json['room_area']?.toString();
    facilities = json['facilities']?.toString();
    sortPrice = json['sort_price']?.toInt();
    description = json['description']?.toString();
    maxChildren = json['max_children']?.toInt();
    maxExtraBed = json['max_extra_bed']?.toInt();
    extraBedInfo = (json['extra_bed_info'] != null) ? ResponseBookingHotelDataHotelTokenDataRoomInfoExtraBedInfo.fromJson(json['extra_bed_info']) : null;
    additionalInfo = json['additional_info']?.toString();
    clientMetadata = (json['client_metadata'] != null) ? ResponseBookingHotelDataHotelTokenDataRoomInfoClientMetadata.fromJson(json['client_metadata']) : null;
    if (json['reformat_bed_types'] != null) {
      final v = json['reformat_bed_types'];
      final arr0 = <ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypes>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelTokenDataRoomInfoReformatBedTypes.fromJson(v));
      });
      reformatBedTypes = arr0;
    }
    specificFacilities = (json['specific_facilities'] != null) ? ResponseBookingHotelDataHotelTokenDataRoomInfoSpecificFacilities.fromJson(json['specific_facilities']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['count'] = count;
    if (thumb != null) {
      data['thumb'] = thumb!.toJson();
    }
    if (photos != null) {
      final v = photos;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['photos'] = arr0;
    }
    data['hotel_id'] = hotelId;
    data['provider'] = provider;
    if (bedTypes != null) {
      final v = bedTypes;
      final arr0 = [];
      v!.forEach((v) {
        final arr1 = [];
        v!.forEach((v) {
          arr1.add(v!.toJson());
        });
        arr0.add(arr1);
      });
      data['bed_types'] = arr0;
    }
    data['max_adult'] = maxAdult;
    data['min_price'] = minPrice;
    data['room_area'] = roomArea;
    data['facilities'] = facilities;
    data['sort_price'] = sortPrice;
    data['description'] = description;
    data['max_children'] = maxChildren;
    data['max_extra_bed'] = maxExtraBed;
    if (extraBedInfo != null) {
      data['extra_bed_info'] = extraBedInfo!.toJson();
    }
    data['additional_info'] = additionalInfo;
    if (clientMetadata != null) {
      data['client_metadata'] = clientMetadata!.toJson();
    }
    if (reformatBedTypes != null) {
      final v = reformatBedTypes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['reformat_bed_types'] = arr0;
    }
    if (specificFacilities != null) {
      data['specific_facilities'] = specificFacilities!.toJson();
    }
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesDiscountMember {
/*
{
  "discount_active": false
}
*/

  bool? discountActive;

  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesDiscountMember({
    this.discountActive,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesDiscountMember.fromJson(Map<String, dynamic> json) {
    discountActive = json['discount_active'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['discount_active'] = discountActive;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesCancelPolicies {
/*
{
  "type": "BeforeArrival",
  "Amount": "0",
  "TimeUnit": "Days",
  "PenaltyType": "RoomPercent",
  "UnitTimeMultiplier": "3"
}
*/

  String? type;
  String? Amount;
  String? TimeUnit;
  String? PenaltyType;
  String? UnitTimeMultiplier;

  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesCancelPolicies({
    this.type,
    this.Amount,
    this.TimeUnit,
    this.PenaltyType,
    this.UnitTimeMultiplier,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesCancelPolicies.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    Amount = json['Amount']?.toString();
    TimeUnit = json['TimeUnit']?.toString();
    PenaltyType = json['PenaltyType']?.toString();
    UnitTimeMultiplier = json['UnitTimeMultiplier']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['Amount'] = Amount;
    data['TimeUnit'] = TimeUnit;
    data['PenaltyType'] = PenaltyType;
    data['UnitTimeMultiplier'] = UnitTimeMultiplier;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPolicies {
/*
{
  "is_general": true,
  "refundable": true,
  "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
  "cancel_policies": [
    {
      "type": "BeforeArrival",
      "Amount": "0",
      "TimeUnit": "Days",
      "PenaltyType": "RoomPercent",
      "UnitTimeMultiplier": "3"
    }
  ],
  "discount_member": {
    "discount_active": false
  }
}
*/

  bool? isGeneral;
  bool? refundable;
  String? otherPolicies;
  List<ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesCancelPolicies?>? cancelPolicies;
  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesDiscountMember? discountMember;

  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPolicies({
    this.isGeneral,
    this.refundable,
    this.otherPolicies,
    this.cancelPolicies,
    this.discountMember,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPolicies.fromJson(Map<String, dynamic> json) {
    isGeneral = json['is_general'];
    refundable = json['refundable'];
    otherPolicies = json['other_policies']?.toString();
    if (json['cancel_policies'] != null) {
      final v = json['cancel_policies'];
      final arr0 = <ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesCancelPolicies>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesCancelPolicies.fromJson(v));
      });
      cancelPolicies = arr0;
    }
    discountMember = (json['discount_member'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPoliciesDiscountMember.fromJson(json['discount_member']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['is_general'] = isGeneral;
    data['refundable'] = refundable;
    data['other_policies'] = otherPolicies;
    if (cancelPolicies != null) {
      final v = cancelPolicies;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['cancel_policies'] = arr0;
    }
    if (discountMember != null) {
      data['discount_member'] = discountMember!.toJson();
    }
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoVntripMetadata {
/*
{}
*/


ResponseBookingHotelDataHotelTokenDataRateInfoVntripMetadata.fromJson(Map<String, dynamic> json);
Map<String, dynamic> toJson() {
  final data = <String, dynamic>{};
  return data;
}
}

class ResponseBookingHotelDataHotelTokenDataRateInfoPriceBreakdown {
/*
{
  "sales_tax": 0,
  "included_fee": true,
  "charges_total": 75000,
  "mandatory_tax": 0,
  "tax_and_service_fee": 75000,
  "price_without_charges": 425000
}
*/

  int? salesTax;
  bool? includedFee;
  int? chargesTotal;
  int? mandatoryTax;
  int? taxAndServiceFee;
  int? priceWithoutCharges;

  ResponseBookingHotelDataHotelTokenDataRateInfoPriceBreakdown({
    this.salesTax,
    this.includedFee,
    this.chargesTotal,
    this.mandatoryTax,
    this.taxAndServiceFee,
    this.priceWithoutCharges,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoPriceBreakdown.fromJson(Map<String, dynamic> json) {
    salesTax = json['sales_tax']?.toInt();
    includedFee = json['included_fee'];
    chargesTotal = json['charges_total']?.toInt();
    mandatoryTax = json['mandatory_tax']?.toInt();
    taxAndServiceFee = json['tax_and_service_fee']?.toInt();
    priceWithoutCharges = json['price_without_charges']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['sales_tax'] = salesTax;
    data['included_fee'] = includedFee;
    data['charges_total'] = chargesTotal;
    data['mandatory_tax'] = mandatoryTax;
    data['tax_and_service_fee'] = taxAndServiceFee;
    data['price_without_charges'] = priceWithoutCharges;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoPrettyPrices {
/*
{
  "nights": 1,
  "base_price": 500000,
  "total_price": 500000,
  "checkin_date": "20220908",
  "checkout_date": "20220909",
  "base_net_price": 425000,
  "total_net_price": 425000,
  "base_price_per_room": 500000,
  "number_of_book_room": 1,
  "base_price_per_night": 500000,
  "number_of_room_avail": 5,
  "total_price_per_room": 500000,
  "total_price_per_night": 500000,
  "base_price_per_night_per_room": 500000,
  "total_price_per_night_per_room": 500000,
  "base_net_price_per_night_per_room": 425000,
  "total_net_price_per_night_per_room": 425000
}
*/

  int? nights;
  int? basePrice;
  int? totalPrice;
  String? checkinDate;
  String? checkoutDate;
  int? baseNetPrice;
  int? totalNetPrice;
  int? basePricePerRoom;
  int? numberOfBookRoom;
  int? basePricePerNight;
  int? numberOfRoomAvail;
  int? totalPricePerRoom;
  int? totalPricePerNight;
  int? basePricePerNightPerRoom;
  int? totalPricePerNightPerRoom;
  int? baseNetPricePerNightPerRoom;
  int? totalNetPricePerNightPerRoom;

  ResponseBookingHotelDataHotelTokenDataRateInfoPrettyPrices({
    this.nights,
    this.basePrice,
    this.totalPrice,
    this.checkinDate,
    this.checkoutDate,
    this.baseNetPrice,
    this.totalNetPrice,
    this.basePricePerRoom,
    this.numberOfBookRoom,
    this.basePricePerNight,
    this.numberOfRoomAvail,
    this.totalPricePerRoom,
    this.totalPricePerNight,
    this.basePricePerNightPerRoom,
    this.totalPricePerNightPerRoom,
    this.baseNetPricePerNightPerRoom,
    this.totalNetPricePerNightPerRoom,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoPrettyPrices.fromJson(Map<String, dynamic> json) {
    nights = json['nights']?.toInt();
    basePrice = json['base_price']?.toInt();
    totalPrice = json['total_price']?.toInt();
    checkinDate = json['checkin_date']?.toString();
    checkoutDate = json['checkout_date']?.toString();
    baseNetPrice = json['base_net_price']?.toInt();
    totalNetPrice = json['total_net_price']?.toInt();
    basePricePerRoom = json['base_price_per_room']?.toInt();
    numberOfBookRoom = json['number_of_book_room']?.toInt();
    basePricePerNight = json['base_price_per_night']?.toInt();
    numberOfRoomAvail = json['number_of_room_avail']?.toInt();
    totalPricePerRoom = json['total_price_per_room']?.toInt();
    totalPricePerNight = json['total_price_per_night']?.toInt();
    basePricePerNightPerRoom = json['base_price_per_night_per_room']?.toInt();
    totalPricePerNightPerRoom = json['total_price_per_night_per_room']?.toInt();
    baseNetPricePerNightPerRoom = json['base_net_price_per_night_per_room']?.toInt();
    totalNetPricePerNightPerRoom = json['total_net_price_per_night_per_room']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['nights'] = nights;
    data['base_price'] = basePrice;
    data['total_price'] = totalPrice;
    data['checkin_date'] = checkinDate;
    data['checkout_date'] = checkoutDate;
    data['base_net_price'] = baseNetPrice;
    data['total_net_price'] = totalNetPrice;
    data['base_price_per_room'] = basePricePerRoom;
    data['number_of_book_room'] = numberOfBookRoom;
    data['base_price_per_night'] = basePricePerNight;
    data['number_of_room_avail'] = numberOfRoomAvail;
    data['total_price_per_room'] = totalPricePerRoom;
    data['total_price_per_night'] = totalPricePerNight;
    data['base_price_per_night_per_room'] = basePricePerNightPerRoom;
    data['total_price_per_night_per_room'] = totalPricePerNightPerRoom;
    data['base_net_price_per_night_per_room'] = baseNetPricePerNightPerRoom;
    data['total_net_price_per_night_per_room'] = totalNetPricePerNightPerRoom;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoBlockPrices {
/*
{
  "id": "52108_1",
  "price": 500000,
  "origin_price": 500000,
  "promotion_price": 500000
}
*/

  String? id;
  int? price;
  int? originPrice;
  int? promotionPrice;

  ResponseBookingHotelDataHotelTokenDataRateInfoBlockPrices({
    this.id,
    this.price,
    this.originPrice,
    this.promotionPrice,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoBlockPrices.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    price = json['price']?.toInt();
    originPrice = json['origin_price']?.toInt();
    promotionPrice = json['promotion_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['price'] = price;
    data['origin_price'] = originPrice;
    data['promotion_price'] = promotionPrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoUnitPrices {
/*
{
  "day": "20220908",
  "price": 500000,
  "promotion_price": 500000
}
*/

  String? day;
  int? price;
  int? promotionPrice;

  ResponseBookingHotelDataHotelTokenDataRateInfoUnitPrices({
    this.day,
    this.price,
    this.promotionPrice,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoUnitPrices.fromJson(Map<String, dynamic> json) {
    day = json['day']?.toString();
    price = json['price']?.toInt();
    promotionPrice = json['promotion_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['day'] = day;
    data['price'] = price;
    data['promotion_price'] = promotionPrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesLoyaltyDiscount {
/*
{
  "show": false,
  "order": 4,
  "title": "",
  "discount_type": "",
  "discount_value": 0,
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesLoyaltyDiscount({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesLoyaltyDiscount.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMemberDiscount {
/*
{
  "show": false,
  "order": 2,
  "title": "SECRET_DEALS",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMemberDiscount({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMemberDiscount.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesDiscountCoupon {
/*
{
  "show": false,
  "order": 5,
  "title": "",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesDiscountCoupon({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesDiscountCoupon.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMobileRate {
/*
{
  "show": false,
  "order": 3,
  "title": "MOBILE_RATE",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMobileRate({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMobileRate.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesFinalPrice {
/*
{
  "show": false,
  "order": 6,
  "title": "Giá cuối",
  "discount_type": "PERCENT",
  "excl_vat_fee_price": 425000,
  "incl_vat_fee_price": 500000,
  "excl_discount_value": 0,
  "incl_discount_value": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  int? exclVatFeePrice;
  int? inclVatFeePrice;
  int? exclDiscountValue;
  int? inclDiscountValue;

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesFinalPrice({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
    this.exclDiscountValue,
    this.inclDiscountValue,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesFinalPrice.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclDiscountValue = json['excl_discount_value']?.toInt();
    inclDiscountValue = json['incl_discount_value']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_discount_value'] = exclDiscountValue;
    data['incl_discount_value'] = inclDiscountValue;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesPromotion {
/*
{
  "show": false,
  "order": 1,
  "title": "",
  "end_time": -1,
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  int? endTime;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesPromotion({
    this.theShow,
    this.order,
    this.title,
    this.endTime,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesPromotion.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    endTime = json['end_time']?.toInt();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['end_time'] = endTime;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoShowPrices {
/*
{
  "promotion": {
    "show": false,
    "order": 1,
    "title": "",
    "end_time": -1,
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "final_price": {
    "show": false,
    "order": 6,
    "title": "Giá cuối",
    "discount_type": "PERCENT",
    "excl_vat_fee_price": 425000,
    "incl_vat_fee_price": 500000,
    "excl_discount_value": 0,
    "incl_discount_value": 0
  },
  "mobile_rate": {
    "show": false,
    "order": 3,
    "title": "MOBILE_RATE",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "discount_coupon": {
    "show": false,
    "order": 5,
    "title": "",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "member_discount": {
    "show": false,
    "order": 2,
    "title": "SECRET_DEALS",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "loyalty_discount": {
    "show": false,
    "order": 4,
    "title": "",
    "discount_type": "",
    "discount_value": 0,
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  }
}
*/

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesPromotion? promotion;
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesFinalPrice? finalPrice;
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMobileRate? mobileRate;
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesDiscountCoupon? discountCoupon;
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMemberDiscount? memberDiscount;
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesLoyaltyDiscount? loyaltyDiscount;

  ResponseBookingHotelDataHotelTokenDataRateInfoShowPrices({
    this.promotion,
    this.finalPrice,
    this.mobileRate,
    this.discountCoupon,
    this.memberDiscount,
    this.loyaltyDiscount,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPrices.fromJson(Map<String, dynamic> json) {
    promotion = (json['promotion'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesPromotion.fromJson(json['promotion']) : null;
    finalPrice = (json['final_price'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesFinalPrice.fromJson(json['final_price']) : null;
    mobileRate = (json['mobile_rate'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMobileRate.fromJson(json['mobile_rate']) : null;
    discountCoupon = (json['discount_coupon'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesDiscountCoupon.fromJson(json['discount_coupon']) : null;
    memberDiscount = (json['member_discount'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesMemberDiscount.fromJson(json['member_discount']) : null;
    loyaltyDiscount = (json['loyalty_discount'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoShowPricesLoyaltyDiscount.fromJson(json['loyalty_discount']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (promotion != null) {
      data['promotion'] = promotion!.toJson();
    }
    if (finalPrice != null) {
      data['final_price'] = finalPrice!.toJson();
    }
    if (mobileRate != null) {
      data['mobile_rate'] = mobileRate!.toJson();
    }
    if (discountCoupon != null) {
      data['discount_coupon'] = discountCoupon!.toJson();
    }
    if (memberDiscount != null) {
      data['member_discount'] = memberDiscount!.toJson();
    }
    if (loyaltyDiscount != null) {
      data['loyalty_discount'] = loyaltyDiscount!.toJson();
    }
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfoSurcharge {
/*
{
  "price": 0
}
*/

  int? price;

  ResponseBookingHotelDataHotelTokenDataRateInfoSurcharge({
    this.price,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfoSurcharge.fromJson(Map<String, dynamic> json) {
    price = json['price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['price'] = price;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRateInfo {
/*
{
  "id": 52108,
  "vat": true,
  "name": "Standard Rate",
  "tags": [
    null
  ],
  "price": 500000,
  "bookable": true,
  "hotel_id": 70518,
  "provider": "VNTRIP",
  "deal_type": "",
  "extra_bed": 1,
  "meal_plan": "breakfast",
  "net_price": 425000,
  "surcharge": {
    "price": 0
  },
  "commission": 15,
  "is_ta_rate": false,
  "refundable": true,
  "room_count": 5,
  "show_price": 500000,
  "adult_count": 2,
  "avail_token": "d1ededee7e7541aa97593387c669eaaf",
  "cc_required": true,
  "child_count": 1,
  "hotel_price": 425000,
  "show_prices": {
    "promotion": {
      "show": false,
      "order": 1,
      "title": "",
      "end_time": -1,
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "final_price": {
      "show": false,
      "order": 6,
      "title": "Giá cuối",
      "discount_type": "PERCENT",
      "excl_vat_fee_price": 425000,
      "incl_vat_fee_price": 500000,
      "excl_discount_value": 0,
      "incl_discount_value": 0
    },
    "mobile_rate": {
      "show": false,
      "order": 3,
      "title": "MOBILE_RATE",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "discount_coupon": {
      "show": false,
      "order": 5,
      "title": "",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "member_discount": {
      "show": false,
      "order": 2,
      "title": "SECRET_DEALS",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "loyalty_discount": {
      "show": false,
      "order": 4,
      "title": "",
      "discount_type": "",
      "discount_value": 0,
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    }
  },
  "total_price": 500000,
  "unit_prices": [
    {
      "day": "20220908",
      "price": 500000,
      "promotion_price": 500000
    }
  ],
  "arrival_date": "20220908",
  "block_prices": [
    {
      "id": "52108_1",
      "price": 500000,
      "origin_price": 500000,
      "promotion_price": 500000
    }
  ],
  "included_VAT": 10,
  "instant_book": true,
  "is_promotion": false,
  "promotion_id": null,
  "pretty_prices": {
    "nights": 1,
    "base_price": 500000,
    "total_price": 500000,
    "checkin_date": "20220908",
    "checkout_date": "20220909",
    "base_net_price": 425000,
    "total_net_price": 425000,
    "base_price_per_room": 500000,
    "number_of_book_room": 1,
    "base_price_per_night": 500000,
    "number_of_room_avail": 5,
    "total_price_per_room": 500000,
    "total_price_per_night": 500000,
    "base_price_per_night_per_room": 500000,
    "total_price_per_night_per_room": 500000,
    "base_net_price_per_night_per_room": 425000,
    "total_net_price_per_night_per_room": 425000
  },
  "departure_date": "20220909",
  "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
  "extra_bed_price": 0,
  "price_breakdown": {
    "sales_tax": 0,
    "included_fee": true,
    "charges_total": 75000,
    "mandatory_tax": 0,
    "tax_and_service_fee": 75000,
    "price_without_charges": 425000
  },
  "rate_identifier": "OO",
  "vntrip_metadata": {},
  "vntrip_rate_type": "ota_rate",
  "children_free_age": 0,
  "is_payment_online": true,
  "vntrip_markup_vat": 0,
  "is_tms_special_deal": false,
  "raw_cancel_policies": {
    "is_general": true,
    "refundable": true,
    "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
    "cancel_policies": [
      {
        "type": "BeforeArrival",
        "Amount": "0",
        "TimeUnit": "Days",
        "PenaltyType": "RoomPercent",
        "UnitTimeMultiplier": "3"
      }
    ],
    "discount_member": {
      "discount_active": false
    }
  },
  "included_service_fee": 5,
  "allow_member_discount": false
}
*/

  int? id;
  bool? vat;
  String? name;
  // List<ResponseBookingHotelDataHotelTokenDataRateInfoTags?>? tags;
  int? price;
  bool? bookable;
  int? hotelId;
  String? provider;
  String? dealType;
  int? extraBed;
  String? mealPlan;
  int? netPrice;
  ResponseBookingHotelDataHotelTokenDataRateInfoSurcharge? surcharge;
  int? commission;
  bool? isTaRate;
  bool? refundable;
  int? roomCount;
  int? showPrice;
  int? adultCount;
  String? availToken;
  bool? ccRequired;
  int? childCount;
  int? hotelPrice;
  ResponseBookingHotelDataHotelTokenDataRateInfoShowPrices? showPrices;
  int? totalPrice;
  List<ResponseBookingHotelDataHotelTokenDataRateInfoUnitPrices?>? unitPrices;
  String? arrivalDate;
  List<ResponseBookingHotelDataHotelTokenDataRateInfoBlockPrices?>? blockPrices;
  int? includedVAT;
  bool? instantBook;
  bool? isPromotion;
  String? promotionId;
  ResponseBookingHotelDataHotelTokenDataRateInfoPrettyPrices? prettyPrices;
  String? departureDate;
  String? cancelPolicies;
  int? extraBedPrice;
  ResponseBookingHotelDataHotelTokenDataRateInfoPriceBreakdown? priceBreakdown;
  String? rateIdentifier;
  ResponseBookingHotelDataHotelTokenDataRateInfoVntripMetadata? vntripMetadata;
  String? vntripRateType;
  int? childrenFreeAge;
  bool? isPaymentOnline;
  int? vntripMarkupVat;
  bool? isTmsSpecialDeal;
  ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPolicies? rawCancelPolicies;
  int? includedServiceFee;
  bool? allowMemberDiscount;

  ResponseBookingHotelDataHotelTokenDataRateInfo({
    this.id,
    this.vat,
    this.name,
    // this.tags,
    this.price,
    this.bookable,
    this.hotelId,
    this.provider,
    this.dealType,
    this.extraBed,
    this.mealPlan,
    this.netPrice,
    this.surcharge,
    this.commission,
    this.isTaRate,
    this.refundable,
    this.roomCount,
    this.showPrice,
    this.adultCount,
    this.availToken,
    this.ccRequired,
    this.childCount,
    this.hotelPrice,
    this.showPrices,
    this.totalPrice,
    this.unitPrices,
    this.arrivalDate,
    this.blockPrices,
    this.includedVAT,
    this.instantBook,
    this.isPromotion,
    this.promotionId,
    this.prettyPrices,
    this.departureDate,
    this.cancelPolicies,
    this.extraBedPrice,
    this.priceBreakdown,
    this.rateIdentifier,
    this.vntripMetadata,
    this.vntripRateType,
    this.childrenFreeAge,
    this.isPaymentOnline,
    this.vntripMarkupVat,
    this.isTmsSpecialDeal,
    this.rawCancelPolicies,
    this.includedServiceFee,
    this.allowMemberDiscount,
  });
  ResponseBookingHotelDataHotelTokenDataRateInfo.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    vat = json['vat'];
    name = json['name']?.toString();
    price = json['price']?.toInt();
    bookable = json['bookable'];
    hotelId = json['hotel_id']?.toInt();
    provider = json['provider']?.toString();
    dealType = json['deal_type']?.toString();
    extraBed = json['extra_bed']?.toInt();
    mealPlan = json['meal_plan']?.toString();
    netPrice = json['net_price']?.toInt();
    surcharge = (json['surcharge'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoSurcharge.fromJson(json['surcharge']) : null;
    commission = json['commission']?.toInt();
    isTaRate = json['is_ta_rate'];
    refundable = json['refundable'];
    roomCount = json['room_count']?.toInt();
    showPrice = json['show_price']?.toInt();
    adultCount = json['adult_count']?.toInt();
    availToken = json['avail_token']?.toString();
    ccRequired = json['cc_required'];
    childCount = json['child_count']?.toInt();
    hotelPrice = json['hotel_price']?.toInt();
    showPrices = (json['show_prices'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoShowPrices.fromJson(json['show_prices']) : null;
    totalPrice = json['total_price']?.toInt();
    if (json['unit_prices'] != null) {
    final v = json['unit_prices'];
    final arr0 = <ResponseBookingHotelDataHotelTokenDataRateInfoUnitPrices>[];
    v.forEach((v) {
    arr0.add(ResponseBookingHotelDataHotelTokenDataRateInfoUnitPrices.fromJson(v));
    });
    unitPrices = arr0;
    }
    arrivalDate = json['arrival_date']?.toString();
    if (json['block_prices'] != null) {
    final v = json['block_prices'];
    final arr0 = <ResponseBookingHotelDataHotelTokenDataRateInfoBlockPrices>[];
    v.forEach((v) {
    arr0.add(ResponseBookingHotelDataHotelTokenDataRateInfoBlockPrices.fromJson(v));
    });
    blockPrices = arr0;
    }
    includedVAT = json['included_VAT']?.toInt();
    instantBook = json['instant_book'];
    isPromotion = json['is_promotion'];
    promotionId = json['promotion_id']?.toString();
    prettyPrices = (json['pretty_prices'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoPrettyPrices.fromJson(json['pretty_prices']) : null;
    departureDate = json['departure_date']?.toString();
    cancelPolicies = json['cancel_policies']?.toString();
    extraBedPrice = json['extra_bed_price']?.toInt();
    priceBreakdown = (json['price_breakdown'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoPriceBreakdown.fromJson(json['price_breakdown']) : null;
    rateIdentifier = json['rate_identifier']?.toString();
    vntripMetadata = (json['vntrip_metadata'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoVntripMetadata.fromJson(json['vntrip_metadata']) : null;
    vntripRateType = json['vntrip_rate_type']?.toString();
    childrenFreeAge = json['children_free_age']?.toInt();
    isPaymentOnline = json['is_payment_online'];
    vntripMarkupVat = json['vntrip_markup_vat']?.toInt();
    isTmsSpecialDeal = json['is_tms_special_deal'];
    rawCancelPolicies = (json['raw_cancel_policies'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfoRawCancelPolicies.fromJson(json['raw_cancel_policies']) : null;
    includedServiceFee = json['included_service_fee']?.toInt();
    allowMemberDiscount = json['allow_member_discount'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['vat'] = vat;
    data['name'] = name;
    data['price'] = price;
    data['bookable'] = bookable;
    data['hotel_id'] = hotelId;
    data['provider'] = provider;
    data['deal_type'] = dealType;
    data['extra_bed'] = extraBed;
    data['meal_plan'] = mealPlan;
    data['net_price'] = netPrice;
    if (surcharge != null) {
    data['surcharge'] = surcharge!.toJson();
    }
    data['commission'] = commission;
    data['is_ta_rate'] = isTaRate;
    data['refundable'] = refundable;
    data['room_count'] = roomCount;
    data['show_price'] = showPrice;
    data['adult_count'] = adultCount;
    data['avail_token'] = availToken;
    data['cc_required'] = ccRequired;
    data['child_count'] = childCount;
    data['hotel_price'] = hotelPrice;
    if (showPrices != null) {
    data['show_prices'] = showPrices!.toJson();
    }
    data['total_price'] = totalPrice;
    if (unitPrices != null) {
    final v = unitPrices;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['unit_prices'] = arr0;
    }
    data['arrival_date'] = arrivalDate;
    if (blockPrices != null) {
    final v = blockPrices;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['block_prices'] = arr0;
    }
    data['included_VAT'] = includedVAT;
    data['instant_book'] = instantBook;
    data['is_promotion'] = isPromotion;
    data['promotion_id'] = promotionId;
    if (prettyPrices != null) {
    data['pretty_prices'] = prettyPrices!.toJson();
    }
    data['departure_date'] = departureDate;
    data['cancel_policies'] = cancelPolicies;
    data['extra_bed_price'] = extraBedPrice;
    if (priceBreakdown != null) {
    data['price_breakdown'] = priceBreakdown!.toJson();
    }
    data['rate_identifier'] = rateIdentifier;
    if (vntripMetadata != null) {
    data['vntrip_metadata'] = vntripMetadata!.toJson();
    }
    data['vntrip_rate_type'] = vntripRateType;
    data['children_free_age'] = childrenFreeAge;
    data['is_payment_online'] = isPaymentOnline;
    data['vntrip_markup_vat'] = vntripMarkupVat;
    data['is_tms_special_deal'] = isTmsSpecialDeal;
    if (rawCancelPolicies != null) {
    data['raw_cancel_policies'] = rawCancelPolicies!.toJson();
    }
    data['included_service_fee'] = includedServiceFee;
    data['allow_member_discount'] = allowMemberDiscount;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesDiscountMember {
/*
{
  "discount_active": false
}
*/

  bool? discountActive;

  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesDiscountMember({
    this.discountActive,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesDiscountMember.fromJson(Map<String, dynamic> json) {
    discountActive = json['discount_active'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['discount_active'] = discountActive;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesCancelPolicies {
/*
{
  "type": "BeforeArrival",
  "Amount": "0",
  "TimeUnit": "Days",
  "PenaltyType": "RoomPercent",
  "UnitTimeMultiplier": "3"
}
*/

  String? type;
  String? Amount;
  String? TimeUnit;
  String? PenaltyType;
  String? UnitTimeMultiplier;

  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesCancelPolicies({
    this.type,
    this.Amount,
    this.TimeUnit,
    this.PenaltyType,
    this.UnitTimeMultiplier,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesCancelPolicies.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    Amount = json['Amount']?.toString();
    TimeUnit = json['TimeUnit']?.toString();
    PenaltyType = json['PenaltyType']?.toString();
    UnitTimeMultiplier = json['UnitTimeMultiplier']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['Amount'] = Amount;
    data['TimeUnit'] = TimeUnit;
    data['PenaltyType'] = PenaltyType;
    data['UnitTimeMultiplier'] = UnitTimeMultiplier;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPolicies {
/*
{
  "is_general": true,
  "refundable": true,
  "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
  "cancel_policies": [
    {
      "type": "BeforeArrival",
      "Amount": "0",
      "TimeUnit": "Days",
      "PenaltyType": "RoomPercent",
      "UnitTimeMultiplier": "3"
    }
  ],
  "discount_member": {
    "discount_active": false
  }
}
*/

  bool? isGeneral;
  bool? refundable;
  String? otherPolicies;
  List<ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesCancelPolicies?>? cancelPolicies;
  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesDiscountMember? discountMember;

  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPolicies({
    this.isGeneral,
    this.refundable,
    this.otherPolicies,
    this.cancelPolicies,
    this.discountMember,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPolicies.fromJson(Map<String, dynamic> json) {
    isGeneral = json['is_general'];
    refundable = json['refundable'];
    otherPolicies = json['other_policies']?.toString();
    if (json['cancel_policies'] != null) {
      final v = json['cancel_policies'];
      final arr0 = <ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesCancelPolicies>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesCancelPolicies.fromJson(v));
      });
      cancelPolicies = arr0;
    }
    discountMember = (json['discount_member'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPoliciesDiscountMember.fromJson(json['discount_member']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['is_general'] = isGeneral;
    data['refundable'] = refundable;
    data['other_policies'] = otherPolicies;
    if (cancelPolicies != null) {
      final v = cancelPolicies;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['cancel_policies'] = arr0;
    }
    if (discountMember != null) {
      data['discount_member'] = discountMember!.toJson();
    }
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoVntripMetadata {
/*
{}
*/



ResponseBookingHotelDataHotelTokenDataRawInfoVntripMetadata.fromJson(Map<String, dynamic> json) {
}
Map<String, dynamic> toJson() {
  final data = <String, dynamic>{};
  return data;
}
}

class ResponseBookingHotelDataHotelTokenDataRawInfoPriceBreakdown {
/*
{
  "sales_tax": 0,
  "included_fee": true,
  "charges_total": 75000,
  "mandatory_tax": 0,
  "tax_and_service_fee": 75000,
  "price_without_charges": 425000
}
*/

  int? salesTax;
  bool? includedFee;
  int? chargesTotal;
  int? mandatoryTax;
  int? taxAndServiceFee;
  int? priceWithoutCharges;

  ResponseBookingHotelDataHotelTokenDataRawInfoPriceBreakdown({
    this.salesTax,
    this.includedFee,
    this.chargesTotal,
    this.mandatoryTax,
    this.taxAndServiceFee,
    this.priceWithoutCharges,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoPriceBreakdown.fromJson(Map<String, dynamic> json) {
    salesTax = json['sales_tax']?.toInt();
    includedFee = json['included_fee'];
    chargesTotal = json['charges_total']?.toInt();
    mandatoryTax = json['mandatory_tax']?.toInt();
    taxAndServiceFee = json['tax_and_service_fee']?.toInt();
    priceWithoutCharges = json['price_without_charges']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['sales_tax'] = salesTax;
    data['included_fee'] = includedFee;
    data['charges_total'] = chargesTotal;
    data['mandatory_tax'] = mandatoryTax;
    data['tax_and_service_fee'] = taxAndServiceFee;
    data['price_without_charges'] = priceWithoutCharges;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoPrettyPrices {
/*
{
  "nights": 1,
  "base_price": 500000,
  "total_price": 500000,
  "checkin_date": "20220908",
  "checkout_date": "20220909",
  "base_net_price": 425000,
  "total_net_price": 425000,
  "base_price_per_room": 500000,
  "number_of_book_room": 1,
  "base_price_per_night": 500000,
  "number_of_room_avail": 5,
  "total_price_per_room": 500000,
  "total_price_per_night": 500000,
  "base_price_per_night_per_room": 500000,
  "total_price_per_night_per_room": 500000,
  "base_net_price_per_night_per_room": 425000,
  "total_net_price_per_night_per_room": 425000
}
*/

  int? nights;
  int? basePrice;
  int? totalPrice;
  String? checkinDate;
  String? checkoutDate;
  int? baseNetPrice;
  int? totalNetPrice;
  int? basePricePerRoom;
  int? numberOfBookRoom;
  int? basePricePerNight;
  int? numberOfRoomAvail;
  int? totalPricePerRoom;
  int? totalPricePerNight;
  int? basePricePerNightPerRoom;
  int? totalPricePerNightPerRoom;
  int? baseNetPricePerNightPerRoom;
  int? totalNetPricePerNightPerRoom;

  ResponseBookingHotelDataHotelTokenDataRawInfoPrettyPrices({
    this.nights,
    this.basePrice,
    this.totalPrice,
    this.checkinDate,
    this.checkoutDate,
    this.baseNetPrice,
    this.totalNetPrice,
    this.basePricePerRoom,
    this.numberOfBookRoom,
    this.basePricePerNight,
    this.numberOfRoomAvail,
    this.totalPricePerRoom,
    this.totalPricePerNight,
    this.basePricePerNightPerRoom,
    this.totalPricePerNightPerRoom,
    this.baseNetPricePerNightPerRoom,
    this.totalNetPricePerNightPerRoom,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoPrettyPrices.fromJson(Map<String, dynamic> json) {
    nights = json['nights']?.toInt();
    basePrice = json['base_price']?.toInt();
    totalPrice = json['total_price']?.toInt();
    checkinDate = json['checkin_date']?.toString();
    checkoutDate = json['checkout_date']?.toString();
    baseNetPrice = json['base_net_price']?.toInt();
    totalNetPrice = json['total_net_price']?.toInt();
    basePricePerRoom = json['base_price_per_room']?.toInt();
    numberOfBookRoom = json['number_of_book_room']?.toInt();
    basePricePerNight = json['base_price_per_night']?.toInt();
    numberOfRoomAvail = json['number_of_room_avail']?.toInt();
    totalPricePerRoom = json['total_price_per_room']?.toInt();
    totalPricePerNight = json['total_price_per_night']?.toInt();
    basePricePerNightPerRoom = json['base_price_per_night_per_room']?.toInt();
    totalPricePerNightPerRoom = json['total_price_per_night_per_room']?.toInt();
    baseNetPricePerNightPerRoom = json['base_net_price_per_night_per_room']?.toInt();
    totalNetPricePerNightPerRoom = json['total_net_price_per_night_per_room']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['nights'] = nights;
    data['base_price'] = basePrice;
    data['total_price'] = totalPrice;
    data['checkin_date'] = checkinDate;
    data['checkout_date'] = checkoutDate;
    data['base_net_price'] = baseNetPrice;
    data['total_net_price'] = totalNetPrice;
    data['base_price_per_room'] = basePricePerRoom;
    data['number_of_book_room'] = numberOfBookRoom;
    data['base_price_per_night'] = basePricePerNight;
    data['number_of_room_avail'] = numberOfRoomAvail;
    data['total_price_per_room'] = totalPricePerRoom;
    data['total_price_per_night'] = totalPricePerNight;
    data['base_price_per_night_per_room'] = basePricePerNightPerRoom;
    data['total_price_per_night_per_room'] = totalPricePerNightPerRoom;
    data['base_net_price_per_night_per_room'] = baseNetPricePerNightPerRoom;
    data['total_net_price_per_night_per_room'] = totalNetPricePerNightPerRoom;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoBlockPrices {
/*
{
  "id": "52108_1",
  "price": 500000,
  "origin_price": 500000,
  "promotion_price": 500000
}
*/

  String? id;
  int? price;
  int? originPrice;
  int? promotionPrice;

  ResponseBookingHotelDataHotelTokenDataRawInfoBlockPrices({
    this.id,
    this.price,
    this.originPrice,
    this.promotionPrice,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoBlockPrices.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    price = json['price']?.toInt();
    originPrice = json['origin_price']?.toInt();
    promotionPrice = json['promotion_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['price'] = price;
    data['origin_price'] = originPrice;
    data['promotion_price'] = promotionPrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoUnitPrices {
/*
{
  "day": "20220908",
  "price": 500000,
  "promotion_price": 500000
}
*/

  String? day;
  int? price;
  int? promotionPrice;

  ResponseBookingHotelDataHotelTokenDataRawInfoUnitPrices({
    this.day,
    this.price,
    this.promotionPrice,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoUnitPrices.fromJson(Map<String, dynamic> json) {
    day = json['day']?.toString();
    price = json['price']?.toInt();
    promotionPrice = json['promotion_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['day'] = day;
    data['price'] = price;
    data['promotion_price'] = promotionPrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesLoyaltyDiscount {
/*
{
  "show": false,
  "order": 4,
  "title": "",
  "discount_type": "",
  "discount_value": 0,
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesLoyaltyDiscount({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesLoyaltyDiscount.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMemberDiscount {
/*
{
  "show": false,
  "order": 2,
  "title": "SECRET_DEALS",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMemberDiscount({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMemberDiscount.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesDiscountCoupon {
/*
{
  "show": false,
  "order": 5,
  "title": "",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesDiscountCoupon({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesDiscountCoupon.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMobileRate {
/*
{
  "show": false,
  "order": 3,
  "title": "MOBILE_RATE",
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMobileRate({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMobileRate.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesFinalPrice {
/*
{
  "show": false,
  "order": 6,
  "title": "Giá cuối",
  "discount_type": "PERCENT",
  "excl_vat_fee_price": 425000,
  "incl_vat_fee_price": 500000,
  "excl_discount_value": 0,
  "incl_discount_value": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  String? discountType;
  int? exclVatFeePrice;
  int? inclVatFeePrice;
  int? exclDiscountValue;
  int? inclDiscountValue;

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesFinalPrice({
    this.theShow,
    this.order,
    this.title,
    this.discountType,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
    this.exclDiscountValue,
    this.inclDiscountValue,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesFinalPrice.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclDiscountValue = json['excl_discount_value']?.toInt();
    inclDiscountValue = json['incl_discount_value']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['discount_type'] = discountType;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_discount_value'] = exclDiscountValue;
    data['incl_discount_value'] = inclDiscountValue;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesPromotion {
/*
{
  "show": false,
  "order": 1,
  "title": "",
  "end_time": -1,
  "discount_type": "",
  "discount_value": "",
  "excl_vat_fee_price": 0,
  "incl_vat_fee_price": 0
}
*/

  bool? theShow;
  int? order;
  String? title;
  int? endTime;
  String? discountType;
  String? discountValue;
  int? exclVatFeePrice;
  int? inclVatFeePrice;

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesPromotion({
    this.theShow,
    this.order,
    this.title,
    this.endTime,
    this.discountType,
    this.discountValue,
    this.exclVatFeePrice,
    this.inclVatFeePrice,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesPromotion.fromJson(Map<String, dynamic> json) {
    theShow = json['show'];
    order = json['order']?.toInt();
    title = json['title']?.toString();
    endTime = json['end_time']?.toInt();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['show'] = theShow;
    data['order'] = order;
    data['title'] = title;
    data['end_time'] = endTime;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoShowPrices {
/*
{
  "promotion": {
    "show": false,
    "order": 1,
    "title": "",
    "end_time": -1,
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "final_price": {
    "show": false,
    "order": 6,
    "title": "Giá cuối",
    "discount_type": "PERCENT",
    "excl_vat_fee_price": 425000,
    "incl_vat_fee_price": 500000,
    "excl_discount_value": 0,
    "incl_discount_value": 0
  },
  "mobile_rate": {
    "show": false,
    "order": 3,
    "title": "MOBILE_RATE",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "discount_coupon": {
    "show": false,
    "order": 5,
    "title": "",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "member_discount": {
    "show": false,
    "order": 2,
    "title": "SECRET_DEALS",
    "discount_type": "",
    "discount_value": "",
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  },
  "loyalty_discount": {
    "show": false,
    "order": 4,
    "title": "",
    "discount_type": "",
    "discount_value": 0,
    "excl_vat_fee_price": 0,
    "incl_vat_fee_price": 0
  }
}
*/

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesPromotion? promotion;
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesFinalPrice? finalPrice;
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMobileRate? mobileRate;
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesDiscountCoupon? discountCoupon;
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMemberDiscount? memberDiscount;
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesLoyaltyDiscount? loyaltyDiscount;

  ResponseBookingHotelDataHotelTokenDataRawInfoShowPrices({
    this.promotion,
    this.finalPrice,
    this.mobileRate,
    this.discountCoupon,
    this.memberDiscount,
    this.loyaltyDiscount,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPrices.fromJson(Map<String, dynamic> json) {
    promotion = (json['promotion'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesPromotion.fromJson(json['promotion']) : null;
    finalPrice = (json['final_price'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesFinalPrice.fromJson(json['final_price']) : null;
    mobileRate = (json['mobile_rate'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMobileRate.fromJson(json['mobile_rate']) : null;
    discountCoupon = (json['discount_coupon'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesDiscountCoupon.fromJson(json['discount_coupon']) : null;
    memberDiscount = (json['member_discount'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesMemberDiscount.fromJson(json['member_discount']) : null;
    loyaltyDiscount = (json['loyalty_discount'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoShowPricesLoyaltyDiscount.fromJson(json['loyalty_discount']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (promotion != null) {
      data['promotion'] = promotion!.toJson();
    }
    if (finalPrice != null) {
      data['final_price'] = finalPrice!.toJson();
    }
    if (mobileRate != null) {
      data['mobile_rate'] = mobileRate!.toJson();
    }
    if (discountCoupon != null) {
      data['discount_coupon'] = discountCoupon!.toJson();
    }
    if (memberDiscount != null) {
      data['member_discount'] = memberDiscount!.toJson();
    }
    if (loyaltyDiscount != null) {
      data['loyalty_discount'] = loyaltyDiscount!.toJson();
    }
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfoSurcharge {
/*
{
  "price": 0
}
*/

  int? price;

  ResponseBookingHotelDataHotelTokenDataRawInfoSurcharge({
    this.price,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfoSurcharge.fromJson(Map<String, dynamic> json) {
    price = json['price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['price'] = price;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenDataRawInfo {
/*
{
  "id": 52108,
  "vat": true,
  "name": "Standard Rate",
  "tags": [
    null
  ],
  "price": 500000,
  "bookable": true,
  "hotel_id": 70518,
  "provider": "VNTRIP",
  "deal_type": "",
  "extra_bed": 1,
  "meal_plan": "breakfast",
  "net_price": 425000,
  "surcharge": {
    "price": 0
  },
  "commission": 15,
  "is_ta_rate": false,
  "refundable": true,
  "room_count": 5,
  "show_price": 500000,
  "adult_count": 2,
  "avail_token": "d1ededee7e7541aa97593387c669eaaf",
  "cc_required": true,
  "child_count": 1,
  "hotel_price": 425000,
  "show_prices": {
    "promotion": {
      "show": false,
      "order": 1,
      "title": "",
      "end_time": -1,
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "final_price": {
      "show": false,
      "order": 6,
      "title": "Giá cuối",
      "discount_type": "PERCENT",
      "excl_vat_fee_price": 425000,
      "incl_vat_fee_price": 500000,
      "excl_discount_value": 0,
      "incl_discount_value": 0
    },
    "mobile_rate": {
      "show": false,
      "order": 3,
      "title": "MOBILE_RATE",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "discount_coupon": {
      "show": false,
      "order": 5,
      "title": "",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "member_discount": {
      "show": false,
      "order": 2,
      "title": "SECRET_DEALS",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "loyalty_discount": {
      "show": false,
      "order": 4,
      "title": "",
      "discount_type": "",
      "discount_value": 0,
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    }
  },
  "total_price": 500000,
  "unit_prices": [
    {
      "day": "20220908",
      "price": 500000,
      "promotion_price": 500000
    }
  ],
  "arrival_date": "20220908",
  "block_prices": [
    {
      "id": "52108_1",
      "price": 500000,
      "origin_price": 500000,
      "promotion_price": 500000
    }
  ],
  "included_VAT": 10,
  "instant_book": true,
  "is_promotion": false,
  "promotion_id": null,
  "pretty_prices": {
    "nights": 1,
    "base_price": 500000,
    "total_price": 500000,
    "checkin_date": "20220908",
    "checkout_date": "20220909",
    "base_net_price": 425000,
    "total_net_price": 425000,
    "base_price_per_room": 500000,
    "number_of_book_room": 1,
    "base_price_per_night": 500000,
    "number_of_room_avail": 5,
    "total_price_per_room": 500000,
    "total_price_per_night": 500000,
    "base_price_per_night_per_room": 500000,
    "total_price_per_night_per_room": 500000,
    "base_net_price_per_night_per_room": 425000,
    "total_net_price_per_night_per_room": 425000
  },
  "departure_date": "20220909",
  "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
  "extra_bed_price": 0,
  "price_breakdown": {
    "sales_tax": 0,
    "included_fee": true,
    "charges_total": 75000,
    "mandatory_tax": 0,
    "tax_and_service_fee": 75000,
    "price_without_charges": 425000
  },
  "rate_identifier": "OO",
  "vntrip_metadata": {},
  "vntrip_rate_type": "ota_rate",
  "children_free_age": 0,
  "is_payment_online": true,
  "vntrip_markup_vat": 0,
  "is_tms_special_deal": false,
  "raw_cancel_policies": {
    "is_general": true,
    "refundable": true,
    "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
    "cancel_policies": [
      {
        "type": "BeforeArrival",
        "Amount": "0",
        "TimeUnit": "Days",
        "PenaltyType": "RoomPercent",
        "UnitTimeMultiplier": "3"
      }
    ],
    "discount_member": {
      "discount_active": false
    }
  },
  "included_service_fee": 5,
  "allow_member_discount": false
}
*/

  int? id;
  bool? vat;
  String? name;
  // List<ResponseBookingHotelDataHotelTokenDataRawInfoTags?>? tags;
  int? price;
  bool? bookable;
  int? hotelId;
  String? provider;
  String? dealType;
  int? extraBed;
  String? mealPlan;
  int? netPrice;
  ResponseBookingHotelDataHotelTokenDataRawInfoSurcharge? surcharge;
  int? commission;
  bool? isTaRate;
  bool? refundable;
  int? roomCount;
  int? showPrice;
  int? adultCount;
  String? availToken;
  bool? ccRequired;
  int? childCount;
  int? hotelPrice;
  ResponseBookingHotelDataHotelTokenDataRawInfoShowPrices? showPrices;
  int? totalPrice;
  List<ResponseBookingHotelDataHotelTokenDataRawInfoUnitPrices?>? unitPrices;
  String? arrivalDate;
  List<ResponseBookingHotelDataHotelTokenDataRawInfoBlockPrices?>? blockPrices;
  int? includedVAT;
  bool? instantBook;
  bool? isPromotion;
  String? promotionId;
  ResponseBookingHotelDataHotelTokenDataRawInfoPrettyPrices? prettyPrices;
  String? departureDate;
  String? cancelPolicies;
  int? extraBedPrice;
  ResponseBookingHotelDataHotelTokenDataRawInfoPriceBreakdown? priceBreakdown;
  String? rateIdentifier;
  ResponseBookingHotelDataHotelTokenDataRawInfoVntripMetadata? vntripMetadata;
  String? vntripRateType;
  int? childrenFreeAge;
  bool? isPaymentOnline;
  int? vntripMarkupVat;
  bool? isTmsSpecialDeal;
  ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPolicies? rawCancelPolicies;
  int? includedServiceFee;
  bool? allowMemberDiscount;

  ResponseBookingHotelDataHotelTokenDataRawInfo({
    this.id,
    this.vat,
    this.name,
    // this.tags,
    this.price,
    this.bookable,
    this.hotelId,
    this.provider,
    this.dealType,
    this.extraBed,
    this.mealPlan,
    this.netPrice,
    this.surcharge,
    this.commission,
    this.isTaRate,
    this.refundable,
    this.roomCount,
    this.showPrice,
    this.adultCount,
    this.availToken,
    this.ccRequired,
    this.childCount,
    this.hotelPrice,
    this.showPrices,
    this.totalPrice,
    this.unitPrices,
    this.arrivalDate,
    this.blockPrices,
    this.includedVAT,
    this.instantBook,
    this.isPromotion,
    this.promotionId,
    this.prettyPrices,
    this.departureDate,
    this.cancelPolicies,
    this.extraBedPrice,
    this.priceBreakdown,
    this.rateIdentifier,
    this.vntripMetadata,
    this.vntripRateType,
    this.childrenFreeAge,
    this.isPaymentOnline,
    this.vntripMarkupVat,
    this.isTmsSpecialDeal,
    this.rawCancelPolicies,
    this.includedServiceFee,
    this.allowMemberDiscount,
  });
  ResponseBookingHotelDataHotelTokenDataRawInfo.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    vat = json['vat'];
    name = json['name']?.toString();
    price = json['price']?.toInt();
    bookable = json['bookable'];
    hotelId = json['hotel_id']?.toInt();
    provider = json['provider']?.toString();
    dealType = json['deal_type']?.toString();
    extraBed = json['extra_bed']?.toInt();
    mealPlan = json['meal_plan']?.toString();
    netPrice = json['net_price']?.toInt();
    surcharge = (json['surcharge'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoSurcharge.fromJson(json['surcharge']) : null;
    commission = json['commission']?.toInt();
    isTaRate = json['is_ta_rate'];
    refundable = json['refundable'];
    roomCount = json['room_count']?.toInt();
    showPrice = json['show_price']?.toInt();
    adultCount = json['adult_count']?.toInt();
    availToken = json['avail_token']?.toString();
    ccRequired = json['cc_required'];
    childCount = json['child_count']?.toInt();
    hotelPrice = json['hotel_price']?.toInt();
    showPrices = (json['show_prices'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoShowPrices.fromJson(json['show_prices']) : null;
    totalPrice = json['total_price']?.toInt();
    if (json['unit_prices'] != null) {
    final v = json['unit_prices'];
    final arr0 = <ResponseBookingHotelDataHotelTokenDataRawInfoUnitPrices>[];
    v.forEach((v) {
    arr0.add(ResponseBookingHotelDataHotelTokenDataRawInfoUnitPrices.fromJson(v));
    });
    unitPrices = arr0;
    }
    arrivalDate = json['arrival_date']?.toString();
    if (json['block_prices'] != null) {
    final v = json['block_prices'];
    final arr0 = <ResponseBookingHotelDataHotelTokenDataRawInfoBlockPrices>[];
    v.forEach((v) {
    arr0.add(ResponseBookingHotelDataHotelTokenDataRawInfoBlockPrices.fromJson(v));
    });
    blockPrices = arr0;
    }
    includedVAT = json['included_VAT']?.toInt();
    instantBook = json['instant_book'];
    isPromotion = json['is_promotion'];
    promotionId = json['promotion_id']?.toString();
    prettyPrices = (json['pretty_prices'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoPrettyPrices.fromJson(json['pretty_prices']) : null;
    departureDate = json['departure_date']?.toString();
    cancelPolicies = json['cancel_policies']?.toString();
    extraBedPrice = json['extra_bed_price']?.toInt();
    priceBreakdown = (json['price_breakdown'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoPriceBreakdown.fromJson(json['price_breakdown']) : null;
    rateIdentifier = json['rate_identifier']?.toString();
    vntripMetadata = (json['vntrip_metadata'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoVntripMetadata.fromJson(json['vntrip_metadata']) : null;
    vntripRateType = json['vntrip_rate_type']?.toString();
    childrenFreeAge = json['children_free_age']?.toInt();
    isPaymentOnline = json['is_payment_online'];
    vntripMarkupVat = json['vntrip_markup_vat']?.toInt();
    isTmsSpecialDeal = json['is_tms_special_deal'];
    rawCancelPolicies = (json['raw_cancel_policies'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfoRawCancelPolicies.fromJson(json['raw_cancel_policies']) : null;
    includedServiceFee = json['included_service_fee']?.toInt();
    allowMemberDiscount = json['allow_member_discount'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['vat'] = vat;
    data['name'] = name;
    data['price'] = price;
    data['bookable'] = bookable;
    data['hotel_id'] = hotelId;
    data['provider'] = provider;
    data['deal_type'] = dealType;
    data['extra_bed'] = extraBed;
    data['meal_plan'] = mealPlan;
    data['net_price'] = netPrice;
    if (surcharge != null) {
    data['surcharge'] = surcharge!.toJson();
    }
    data['commission'] = commission;
    data['is_ta_rate'] = isTaRate;
    data['refundable'] = refundable;
    data['room_count'] = roomCount;
    data['show_price'] = showPrice;
    data['adult_count'] = adultCount;
    data['avail_token'] = availToken;
    data['cc_required'] = ccRequired;
    data['child_count'] = childCount;
    data['hotel_price'] = hotelPrice;
    if (showPrices != null) {
    data['show_prices'] = showPrices!.toJson();
    }
    data['total_price'] = totalPrice;
    if (unitPrices != null) {
    final v = unitPrices;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['unit_prices'] = arr0;
    }
    data['arrival_date'] = arrivalDate;
    if (blockPrices != null) {
    final v = blockPrices;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['block_prices'] = arr0;
    }
    data['included_VAT'] = includedVAT;
    data['instant_book'] = instantBook;
    data['is_promotion'] = isPromotion;
    data['promotion_id'] = promotionId;
    if (prettyPrices != null) {
    data['pretty_prices'] = prettyPrices!.toJson();
    }
    data['departure_date'] = departureDate;
    data['cancel_policies'] = cancelPolicies;
    data['extra_bed_price'] = extraBedPrice;
    if (priceBreakdown != null) {
    data['price_breakdown'] = priceBreakdown!.toJson();
    }
    data['rate_identifier'] = rateIdentifier;
    if (vntripMetadata != null) {
    data['vntrip_metadata'] = vntripMetadata!.toJson();
    }
    data['vntrip_rate_type'] = vntripRateType;
    data['children_free_age'] = childrenFreeAge;
    data['is_payment_online'] = isPaymentOnline;
    data['vntrip_markup_vat'] = vntripMarkupVat;
    data['is_tms_special_deal'] = isTmsSpecialDeal;
    if (rawCancelPolicies != null) {
    data['raw_cancel_policies'] = rawCancelPolicies!.toJson();
    }
    data['included_service_fee'] = includedServiceFee;
    data['allow_member_discount'] = allowMemberDiscount;
    return data;
  }
}

class ResponseBookingHotelDataHotelTokenData {
/*
{
  "hotel_id": 70518,
  "raw_info": {
    "id": 52108,
    "vat": true,
    "name": "Standard Rate",
    "tags": [
      null
    ],
    "price": 500000,
    "bookable": true,
    "hotel_id": 70518,
    "provider": "VNTRIP",
    "deal_type": "",
    "extra_bed": 1,
    "meal_plan": "breakfast",
    "net_price": 425000,
    "surcharge": {
      "price": 0
    },
    "commission": 15,
    "is_ta_rate": false,
    "refundable": true,
    "room_count": 5,
    "show_price": 500000,
    "adult_count": 2,
    "avail_token": "d1ededee7e7541aa97593387c669eaaf",
    "cc_required": true,
    "child_count": 1,
    "hotel_price": 425000,
    "show_prices": {
      "promotion": {
        "show": false,
        "order": 1,
        "title": "",
        "end_time": -1,
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "final_price": {
        "show": false,
        "order": 6,
        "title": "Giá cuối",
        "discount_type": "PERCENT",
        "excl_vat_fee_price": 425000,
        "incl_vat_fee_price": 500000,
        "excl_discount_value": 0,
        "incl_discount_value": 0
      },
      "mobile_rate": {
        "show": false,
        "order": 3,
        "title": "MOBILE_RATE",
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "discount_coupon": {
        "show": false,
        "order": 5,
        "title": "",
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "member_discount": {
        "show": false,
        "order": 2,
        "title": "SECRET_DEALS",
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "loyalty_discount": {
        "show": false,
        "order": 4,
        "title": "",
        "discount_type": "",
        "discount_value": 0,
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      }
    },
    "total_price": 500000,
    "unit_prices": [
      {
        "day": "20220908",
        "price": 500000,
        "promotion_price": 500000
      }
    ],
    "arrival_date": "20220908",
    "block_prices": [
      {
        "id": "52108_1",
        "price": 500000,
        "origin_price": 500000,
        "promotion_price": 500000
      }
    ],
    "included_VAT": 10,
    "instant_book": true,
    "is_promotion": false,
    "promotion_id": null,
    "pretty_prices": {
      "nights": 1,
      "base_price": 500000,
      "total_price": 500000,
      "checkin_date": "20220908",
      "checkout_date": "20220909",
      "base_net_price": 425000,
      "total_net_price": 425000,
      "base_price_per_room": 500000,
      "number_of_book_room": 1,
      "base_price_per_night": 500000,
      "number_of_room_avail": 5,
      "total_price_per_room": 500000,
      "total_price_per_night": 500000,
      "base_price_per_night_per_room": 500000,
      "total_price_per_night_per_room": 500000,
      "base_net_price_per_night_per_room": 425000,
      "total_net_price_per_night_per_room": 425000
    },
    "departure_date": "20220909",
    "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
    "extra_bed_price": 0,
    "price_breakdown": {
      "sales_tax": 0,
      "included_fee": true,
      "charges_total": 75000,
      "mandatory_tax": 0,
      "tax_and_service_fee": 75000,
      "price_without_charges": 425000
    },
    "rate_identifier": "OO",
    "vntrip_metadata": {},
    "vntrip_rate_type": "ota_rate",
    "children_free_age": 0,
    "is_payment_online": true,
    "vntrip_markup_vat": 0,
    "is_tms_special_deal": false,
    "raw_cancel_policies": {
      "is_general": true,
      "refundable": true,
      "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
      "cancel_policies": [
        {
          "type": "BeforeArrival",
          "Amount": "0",
          "TimeUnit": "Days",
          "PenaltyType": "RoomPercent",
          "UnitTimeMultiplier": "3"
        }
      ],
      "discount_member": {
        "discount_active": false
      }
    },
    "included_service_fee": 5,
    "allow_member_discount": false
  },
  "rate_info": {
    "id": 52108,
    "vat": true,
    "name": "Standard Rate",
    "tags": [
      null
    ],
    "price": 500000,
    "bookable": true,
    "hotel_id": 70518,
    "provider": "VNTRIP",
    "deal_type": "",
    "extra_bed": 1,
    "meal_plan": "breakfast",
    "net_price": 425000,
    "surcharge": {
      "price": 0
    },
    "commission": 15,
    "is_ta_rate": false,
    "refundable": true,
    "room_count": 5,
    "show_price": 500000,
    "adult_count": 2,
    "avail_token": "d1ededee7e7541aa97593387c669eaaf",
    "cc_required": true,
    "child_count": 1,
    "hotel_price": 425000,
    "show_prices": {
      "promotion": {
        "show": false,
        "order": 1,
        "title": "",
        "end_time": -1,
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "final_price": {
        "show": false,
        "order": 6,
        "title": "Giá cuối",
        "discount_type": "PERCENT",
        "excl_vat_fee_price": 425000,
        "incl_vat_fee_price": 500000,
        "excl_discount_value": 0,
        "incl_discount_value": 0
      },
      "mobile_rate": {
        "show": false,
        "order": 3,
        "title": "MOBILE_RATE",
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "discount_coupon": {
        "show": false,
        "order": 5,
        "title": "",
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "member_discount": {
        "show": false,
        "order": 2,
        "title": "SECRET_DEALS",
        "discount_type": "",
        "discount_value": "",
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      },
      "loyalty_discount": {
        "show": false,
        "order": 4,
        "title": "",
        "discount_type": "",
        "discount_value": 0,
        "excl_vat_fee_price": 0,
        "incl_vat_fee_price": 0
      }
    },
    "total_price": 500000,
    "unit_prices": [
      {
        "day": "20220908",
        "price": 500000,
        "promotion_price": 500000
      }
    ],
    "arrival_date": "20220908",
    "block_prices": [
      {
        "id": "52108_1",
        "price": 500000,
        "origin_price": 500000,
        "promotion_price": 500000
      }
    ],
    "included_VAT": 10,
    "instant_book": true,
    "is_promotion": false,
    "promotion_id": null,
    "pretty_prices": {
      "nights": 1,
      "base_price": 500000,
      "total_price": 500000,
      "checkin_date": "20220908",
      "checkout_date": "20220909",
      "base_net_price": 425000,
      "total_net_price": 425000,
      "base_price_per_room": 500000,
      "number_of_book_room": 1,
      "base_price_per_night": 500000,
      "number_of_room_avail": 5,
      "total_price_per_room": 500000,
      "total_price_per_night": 500000,
      "base_price_per_night_per_room": 500000,
      "total_price_per_night_per_room": 500000,
      "base_net_price_per_night_per_room": 425000,
      "total_net_price_per_night_per_room": 425000
    },
    "departure_date": "20220909",
    "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
    "extra_bed_price": 0,
    "price_breakdown": {
      "sales_tax": 0,
      "included_fee": true,
      "charges_total": 75000,
      "mandatory_tax": 0,
      "tax_and_service_fee": 75000,
      "price_without_charges": 425000
    },
    "rate_identifier": "OO",
    "vntrip_metadata": {},
    "vntrip_rate_type": "ota_rate",
    "children_free_age": 0,
    "is_payment_online": true,
    "vntrip_markup_vat": 0,
    "is_tms_special_deal": false,
    "raw_cancel_policies": {
      "is_general": true,
      "refundable": true,
      "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
      "cancel_policies": [
        {
          "type": "BeforeArrival",
          "Amount": "0",
          "TimeUnit": "Days",
          "PenaltyType": "RoomPercent",
          "UnitTimeMultiplier": "3"
        }
      ],
      "discount_member": {
        "discount_active": false
      }
    },
    "included_service_fee": 5,
    "allow_member_discount": false
  },
  "room_info": {
    "id": 50195,
    "name": "Executive Double/Twin",
    "count": 5,
    "thumb": {
      "order": 2,
      "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
      "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
    },
    "photos": [
      {
        "order": 2,
        "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
        "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
      }
    ],
    "hotel_id": 70518,
    "provider": "VNTRIP",
    "bed_types": [
      [
        {
          "type": "Giường cỡ King",
          "count": "1",
          "extra": false,
          "description": ""
        }
      ]
    ],
    "max_adult": 2,
    "min_price": 500000,
    "room_area": "38.0 m2",
    "facilities": "Điều hòa, Giá treo quần áo, Bàn, Bồn tắm, Két sắt, Tường cách âm, Máy sấy, Tủ quần áo, Phòng không hút thuốc, Phòng tắm của khách, Bồn tắm, Áo choàng tắm, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Bồn tắm và vòi sen riêng biệt, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Máy pha trà/ café, Đồng hồ báo thức , Khăn, Dịch vụ báo thức, Đồng hồ báo thức, Hướng thành phố",
    "sort_price": 500000,
    "description": "",
    "max_children": 1,
    "max_extra_bed": 1,
    "extra_bed_info": {
      "adult_age": null,
      "child_age": null,
      "extra_bed_price": 0,
      "same_bed_child_price": 0,
      "extra_bed_child_price": 0,
      "extra_bed_other_policies": "",
      "extra_bed_little_child_price": 0
    },
    "additional_info": null,
    "client_metadata": {
      "request_from": "app_android",
      "customerIpAddress": "118.70.118.215",
      "customerSessionId": "16GuKzV8K1@92YcLg85uR5ku;peVriRZSn!1.UTh, qHGT0xYHSPLyscJP",
      "customerUserAgent": "vntrip.vn/129 ( Android 7.0 )"
    },
    "reformat_bed_types": [
      {
        "bed_data": [
          {
            "type": "Giường cỡ King",
            "count": "1",
            "description": ""
          }
        ],
        "group_id": "0"
      }
    ],
    "specific_facilities": {
      "lcd": true,
      "bathtub": true,
      "minibar": true,
      "no_smoking": true,
      "private_pool": false,
      "tv_and_cable": true,
      "air_conditioner": true
    }
  },
  "commission": 15,
  "room_count": 1,
  "median_price": 0,
  "person_count": 2,
  "check_in_date": "20220908",
  "check_out_date": "20220909"
}
*/

  int? hotelId;
  ResponseBookingHotelDataHotelTokenDataRawInfo? rawInfo;
  ResponseBookingHotelDataHotelTokenDataRateInfo? rateInfo;
  ResponseBookingHotelDataHotelTokenDataRoomInfo? roomInfo;
  int? commission;
  int? roomCount;
  int? medianPrice;
  int? personCount;
  String? checkInDate;
  String? checkOutDate;

  ResponseBookingHotelDataHotelTokenData({
    this.hotelId,
    this.rawInfo,
    this.rateInfo,
    this.roomInfo,
    this.commission,
    this.roomCount,
    this.medianPrice,
    this.personCount,
    this.checkInDate,
    this.checkOutDate,
  });
  ResponseBookingHotelDataHotelTokenData.fromJson(Map<String, dynamic> json) {
    hotelId = json['hotel_id']?.toInt();
    rawInfo = (json['raw_info'] != null) ? ResponseBookingHotelDataHotelTokenDataRawInfo.fromJson(json['raw_info']) : null;
    rateInfo = (json['rate_info'] != null) ? ResponseBookingHotelDataHotelTokenDataRateInfo.fromJson(json['rate_info']) : null;
    roomInfo = (json['room_info'] != null) ? ResponseBookingHotelDataHotelTokenDataRoomInfo.fromJson(json['room_info']) : null;
    commission = json['commission']?.toInt();
    roomCount = json['room_count']?.toInt();
    medianPrice = json['median_price']?.toInt();
    personCount = json['person_count']?.toInt();
    checkInDate = json['check_in_date']?.toString();
    checkOutDate = json['check_out_date']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['hotel_id'] = hotelId;
    if (rawInfo != null) {
      data['raw_info'] = rawInfo!.toJson();
    }
    if (rateInfo != null) {
      data['rate_info'] = rateInfo!.toJson();
    }
    if (roomInfo != null) {
      data['room_info'] = roomInfo!.toJson();
    }
    data['commission'] = commission;
    data['room_count'] = roomCount;
    data['median_price'] = medianPrice;
    data['person_count'] = personCount;
    data['check_in_date'] = checkInDate;
    data['check_out_date'] = checkOutDate;
    return data;
  }
}

class ResponseBookingHotelDataHotelExtraInfo {
/*
{
  "ean_id": null,
  "area_id": null,
  "city_id": 711,
  "hotel_id": 70518,
  "latitude": "21.0253508",
  "area_name": null,
  "city_name": "Quận Ba Đình",
  "longitude": "105.8217117",
  "country_id": 1,
  "hotel_name": "Grand Vista Hanoi Hotel",
  "hotel_type": "ota_hotels",
  "province_id": 66,
  "country_code": "VN",
  "country_name": "Việt Nam",
  "request_from": "APP_ANDROID",
  "hotel_address": "146 Giảng Võ, Ba Đình, Hà Nội",
  "province_name": "Hà Nội",
  "hotel_star_rate": "5.0",
  "is_international": false
}
*/

  String? eanId;
  String? areaId;
  int? cityId;
  int? hotelId;
  String? latitude;
  String? areaName;
  String? cityName;
  String? longitude;
  int? countryId;
  String? hotelName;
  String? hotelType;
  int? provinceId;
  String? countryCode;
  String? countryName;
  String? requestFrom;
  String? hotelAddress;
  String? provinceName;
  String? hotelStarRate;
  bool? isInternational;

  ResponseBookingHotelDataHotelExtraInfo({
    this.eanId,
    this.areaId,
    this.cityId,
    this.hotelId,
    this.latitude,
    this.areaName,
    this.cityName,
    this.longitude,
    this.countryId,
    this.hotelName,
    this.hotelType,
    this.provinceId,
    this.countryCode,
    this.countryName,
    this.requestFrom,
    this.hotelAddress,
    this.provinceName,
    this.hotelStarRate,
    this.isInternational,
  });
  ResponseBookingHotelDataHotelExtraInfo.fromJson(Map<String, dynamic> json) {
    eanId = json['ean_id']?.toString();
    areaId = json['area_id']?.toString();
    cityId = json['city_id']?.toInt();
    hotelId = json['hotel_id']?.toInt();
    latitude = json['latitude']?.toString();
    areaName = json['area_name']?.toString();
    cityName = json['city_name']?.toString();
    longitude = json['longitude']?.toString();
    countryId = json['country_id']?.toInt();
    hotelName = json['hotel_name']?.toString();
    hotelType = json['hotel_type']?.toString();
    provinceId = json['province_id']?.toInt();
    countryCode = json['country_code']?.toString();
    countryName = json['country_name']?.toString();
    requestFrom = json['request_from']?.toString();
    hotelAddress = json['hotel_address']?.toString();
    provinceName = json['province_name']?.toString();
    hotelStarRate = json['hotel_star_rate']?.toString();
    isInternational = json['is_international'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['ean_id'] = eanId;
    data['area_id'] = areaId;
    data['city_id'] = cityId;
    data['hotel_id'] = hotelId;
    data['latitude'] = latitude;
    data['area_name'] = areaName;
    data['city_name'] = cityName;
    data['longitude'] = longitude;
    data['country_id'] = countryId;
    data['hotel_name'] = hotelName;
    data['hotel_type'] = hotelType;
    data['province_id'] = provinceId;
    data['country_code'] = countryCode;
    data['country_name'] = countryName;
    data['request_from'] = requestFrom;
    data['hotel_address'] = hotelAddress;
    data['province_name'] = provinceName;
    data['hotel_star_rate'] = hotelStarRate;
    data['is_international'] = isInternational;
    return data;
  }
}

class ResponseBookingHotelDataHotel {
/*
{
  "hotel_suggestion_id": "c9e63fcb-cf9f-4654-965a-551a93688f7e",
  "extra_info": {
    "ean_id": null,
    "area_id": null,
    "city_id": 711,
    "hotel_id": 70518,
    "latitude": "21.0253508",
    "area_name": null,
    "city_name": "Quận Ba Đình",
    "longitude": "105.8217117",
    "country_id": 1,
    "hotel_name": "Grand Vista Hanoi Hotel",
    "hotel_type": "ota_hotels",
    "province_id": 66,
    "country_code": "VN",
    "country_name": "Việt Nam",
    "request_from": "APP_ANDROID",
    "hotel_address": "146 Giảng Võ, Ba Đình, Hà Nội",
    "province_name": "Hà Nội",
    "hotel_star_rate": "5.0",
    "is_international": false
  },
  "check_in_date": "2022-09-08T00:00:00+07:00",
  "check_out_date": "2022-09-09T00:00:00+07:00",
  "extra_rate": null,
  "customer_request": null,
  "booking_request_rate_id": "d27439b2-6a73-4a50-bcb1-5fef7b2a97a4",
  "token_data": {
    "hotel_id": 70518,
    "raw_info": {
      "id": 52108,
      "vat": true,
      "name": "Standard Rate",
      "tags": [
        null
      ],
      "price": 500000,
      "bookable": true,
      "hotel_id": 70518,
      "provider": "VNTRIP",
      "deal_type": "",
      "extra_bed": 1,
      "meal_plan": "breakfast",
      "net_price": 425000,
      "surcharge": {
        "price": 0
      },
      "commission": 15,
      "is_ta_rate": false,
      "refundable": true,
      "room_count": 5,
      "show_price": 500000,
      "adult_count": 2,
      "avail_token": "d1ededee7e7541aa97593387c669eaaf",
      "cc_required": true,
      "child_count": 1,
      "hotel_price": 425000,
      "show_prices": {
        "promotion": {
          "show": false,
          "order": 1,
          "title": "",
          "end_time": -1,
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "final_price": {
          "show": false,
          "order": 6,
          "title": "Giá cuối",
          "discount_type": "PERCENT",
          "excl_vat_fee_price": 425000,
          "incl_vat_fee_price": 500000,
          "excl_discount_value": 0,
          "incl_discount_value": 0
        },
        "mobile_rate": {
          "show": false,
          "order": 3,
          "title": "MOBILE_RATE",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "discount_coupon": {
          "show": false,
          "order": 5,
          "title": "",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "member_discount": {
          "show": false,
          "order": 2,
          "title": "SECRET_DEALS",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "loyalty_discount": {
          "show": false,
          "order": 4,
          "title": "",
          "discount_type": "",
          "discount_value": 0,
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        }
      },
      "total_price": 500000,
      "unit_prices": [
        {
          "day": "20220908",
          "price": 500000,
          "promotion_price": 500000
        }
      ],
      "arrival_date": "20220908",
      "block_prices": [
        {
          "id": "52108_1",
          "price": 500000,
          "origin_price": 500000,
          "promotion_price": 500000
        }
      ],
      "included_VAT": 10,
      "instant_book": true,
      "is_promotion": false,
      "promotion_id": null,
      "pretty_prices": {
        "nights": 1,
        "base_price": 500000,
        "total_price": 500000,
        "checkin_date": "20220908",
        "checkout_date": "20220909",
        "base_net_price": 425000,
        "total_net_price": 425000,
        "base_price_per_room": 500000,
        "number_of_book_room": 1,
        "base_price_per_night": 500000,
        "number_of_room_avail": 5,
        "total_price_per_room": 500000,
        "total_price_per_night": 500000,
        "base_price_per_night_per_room": 500000,
        "total_price_per_night_per_room": 500000,
        "base_net_price_per_night_per_room": 425000,
        "total_net_price_per_night_per_room": 425000
      },
      "departure_date": "20220909",
      "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
      "extra_bed_price": 0,
      "price_breakdown": {
        "sales_tax": 0,
        "included_fee": true,
        "charges_total": 75000,
        "mandatory_tax": 0,
        "tax_and_service_fee": 75000,
        "price_without_charges": 425000
      },
      "rate_identifier": "OO",
      "vntrip_metadata": {},
      "vntrip_rate_type": "ota_rate",
      "children_free_age": 0,
      "is_payment_online": true,
      "vntrip_markup_vat": 0,
      "is_tms_special_deal": false,
      "raw_cancel_policies": {
        "is_general": true,
        "refundable": true,
        "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
        "cancel_policies": [
          {
            "type": "BeforeArrival",
            "Amount": "0",
            "TimeUnit": "Days",
            "PenaltyType": "RoomPercent",
            "UnitTimeMultiplier": "3"
          }
        ],
        "discount_member": {
          "discount_active": false
        }
      },
      "included_service_fee": 5,
      "allow_member_discount": false
    },
    "rate_info": {
      "id": 52108,
      "vat": true,
      "name": "Standard Rate",
      "tags": [
        null
      ],
      "price": 500000,
      "bookable": true,
      "hotel_id": 70518,
      "provider": "VNTRIP",
      "deal_type": "",
      "extra_bed": 1,
      "meal_plan": "breakfast",
      "net_price": 425000,
      "surcharge": {
        "price": 0
      },
      "commission": 15,
      "is_ta_rate": false,
      "refundable": true,
      "room_count": 5,
      "show_price": 500000,
      "adult_count": 2,
      "avail_token": "d1ededee7e7541aa97593387c669eaaf",
      "cc_required": true,
      "child_count": 1,
      "hotel_price": 425000,
      "show_prices": {
        "promotion": {
          "show": false,
          "order": 1,
          "title": "",
          "end_time": -1,
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "final_price": {
          "show": false,
          "order": 6,
          "title": "Giá cuối",
          "discount_type": "PERCENT",
          "excl_vat_fee_price": 425000,
          "incl_vat_fee_price": 500000,
          "excl_discount_value": 0,
          "incl_discount_value": 0
        },
        "mobile_rate": {
          "show": false,
          "order": 3,
          "title": "MOBILE_RATE",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "discount_coupon": {
          "show": false,
          "order": 5,
          "title": "",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "member_discount": {
          "show": false,
          "order": 2,
          "title": "SECRET_DEALS",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "loyalty_discount": {
          "show": false,
          "order": 4,
          "title": "",
          "discount_type": "",
          "discount_value": 0,
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        }
      },
      "total_price": 500000,
      "unit_prices": [
        {
          "day": "20220908",
          "price": 500000,
          "promotion_price": 500000
        }
      ],
      "arrival_date": "20220908",
      "block_prices": [
        {
          "id": "52108_1",
          "price": 500000,
          "origin_price": 500000,
          "promotion_price": 500000
        }
      ],
      "included_VAT": 10,
      "instant_book": true,
      "is_promotion": false,
      "promotion_id": null,
      "pretty_prices": {
        "nights": 1,
        "base_price": 500000,
        "total_price": 500000,
        "checkin_date": "20220908",
        "checkout_date": "20220909",
        "base_net_price": 425000,
        "total_net_price": 425000,
        "base_price_per_room": 500000,
        "number_of_book_room": 1,
        "base_price_per_night": 500000,
        "number_of_room_avail": 5,
        "total_price_per_room": 500000,
        "total_price_per_night": 500000,
        "base_price_per_night_per_room": 500000,
        "total_price_per_night_per_room": 500000,
        "base_net_price_per_night_per_room": 425000,
        "total_net_price_per_night_per_room": 425000
      },
      "departure_date": "20220909",
      "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
      "extra_bed_price": 0,
      "price_breakdown": {
        "sales_tax": 0,
        "included_fee": true,
        "charges_total": 75000,
        "mandatory_tax": 0,
        "tax_and_service_fee": 75000,
        "price_without_charges": 425000
      },
      "rate_identifier": "OO",
      "vntrip_metadata": {},
      "vntrip_rate_type": "ota_rate",
      "children_free_age": 0,
      "is_payment_online": true,
      "vntrip_markup_vat": 0,
      "is_tms_special_deal": false,
      "raw_cancel_policies": {
        "is_general": true,
        "refundable": true,
        "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
        "cancel_policies": [
          {
            "type": "BeforeArrival",
            "Amount": "0",
            "TimeUnit": "Days",
            "PenaltyType": "RoomPercent",
            "UnitTimeMultiplier": "3"
          }
        ],
        "discount_member": {
          "discount_active": false
        }
      },
      "included_service_fee": 5,
      "allow_member_discount": false
    },
    "room_info": {
      "id": 50195,
      "name": "Executive Double/Twin",
      "count": 5,
      "thumb": {
        "order": 2,
        "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
        "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
      },
      "photos": [
        {
          "order": 2,
          "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
          "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
        }
      ],
      "hotel_id": 70518,
      "provider": "VNTRIP",
      "bed_types": [
        [
          {
            "type": "Giường cỡ King",
            "count": "1",
            "extra": false,
            "description": ""
          }
        ]
      ],
      "max_adult": 2,
      "min_price": 500000,
      "room_area": "38.0 m2",
      "facilities": "Điều hòa, Giá treo quần áo, Bàn, Bồn tắm, Két sắt, Tường cách âm, Máy sấy, Tủ quần áo, Phòng không hút thuốc, Phòng tắm của khách, Bồn tắm, Áo choàng tắm, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Bồn tắm và vòi sen riêng biệt, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Máy pha trà/ café, Đồng hồ báo thức , Khăn, Dịch vụ báo thức, Đồng hồ báo thức, Hướng thành phố",
      "sort_price": 500000,
      "description": "",
      "max_children": 1,
      "max_extra_bed": 1,
      "extra_bed_info": {
        "adult_age": null,
        "child_age": null,
        "extra_bed_price": 0,
        "same_bed_child_price": 0,
        "extra_bed_child_price": 0,
        "extra_bed_other_policies": "",
        "extra_bed_little_child_price": 0
      },
      "additional_info": null,
      "client_metadata": {
        "request_from": "app_android",
        "customerIpAddress": "118.70.118.215",
        "customerSessionId": "16GuKzV8K1@92YcLg85uR5ku;peVriRZSn!1.UTh, qHGT0xYHSPLyscJP",
        "customerUserAgent": "vntrip.vn/129 ( Android 7.0 )"
      },
      "reformat_bed_types": [
        {
          "bed_data": [
            {
              "type": "Giường cỡ King",
              "count": "1",
              "description": ""
            }
          ],
          "group_id": "0"
        }
      ],
      "specific_facilities": {
        "lcd": true,
        "bathtub": true,
        "minibar": true,
        "no_smoking": true,
        "private_pool": false,
        "tv_and_cable": true,
        "air_conditioner": true
      }
    },
    "commission": 15,
    "room_count": 1,
    "median_price": 0,
    "person_count": 2,
    "check_in_date": "20220908",
    "check_out_date": "20220909"
  },
  "rate_base_price": 500000,
  "rate_total_price": 500000,
  "hotel_id": 70518,
  "room_id": 50195,
  "room_name": "Executive Double/Twin",
  "rooms": 1,
  "extra_bed_price": 0,
  "extra_bed": 0,
  "receiver_data": [
    {
      "phone": "344850761",
      "last_name": "Bùi",
      "first_name": "Chiên",
      "country_code": "84"
    }
  ],
  "bed_type_data": {
    "selected_group_id": 0,
    "reformat_bed_types": [
      {
        "bed_data": [
          {
            "type": "Giường cỡ King",
            "count": "1",
            "description": ""
          }
        ],
        "group_id": "0"
      }
    ]
  },
  "resident_data": [
    null
  ],
  "total_extra_rate_price": 0,
  "show_prices": {
    "promotion": {
      "show": false,
      "order": 1,
      "title": "",
      "end_time": -1,
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "final_price": {
      "show": false,
      "order": 6,
      "title": "Giá cuối",
      "discount_type": "PERCENT",
      "excl_vat_fee_price": 425000,
      "incl_vat_fee_price": 500000,
      "excl_discount_value": 0,
      "incl_discount_value": 0
    },
    "mobile_rate": {
      "show": false,
      "order": 3,
      "title": "MOBILE_RATE",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "discount_coupon": {
      "show": false,
      "order": 5,
      "title": "",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "member_discount": {
      "show": false,
      "order": 2,
      "title": "SECRET_DEALS",
      "discount_type": "",
      "discount_value": "",
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    },
    "loyalty_discount": {
      "show": false,
      "order": 4,
      "title": "",
      "discount_type": "",
      "discount_value": 0,
      "excl_vat_fee_price": 0,
      "incl_vat_fee_price": 0
    }
  }
}
*/

  String? hotelSuggestionId;
  ResponseBookingHotelDataHotelExtraInfo? extraInfo;
  String? checkInDate;
  String? checkOutDate;
  String? extraRate;
  String? customerRequest;
  String? bookingRequestRateId;
  ResponseBookingHotelDataHotelTokenData? tokenData;
  int? rateBasePrice;
  int? rateTotalPrice;
  int? hotelId;
  int? roomId;
  String? roomName;
  int? rooms;
  int? extraBedPrice;
  int? extraBed;
  List<ResponseBookingHotelDataHotelReceiverData?>? receiverData;
  ResponseBookingHotelDataHotelBedTypeData? bedTypeData;
  // List<ResponseBookingHotelDataHotelResidentData?>? residentData;
  int? totalExtraRatePrice;
  ResponseBookingHotelDataHotelShowPrices? showPrices;

  ResponseBookingHotelDataHotel({
    this.hotelSuggestionId,
    this.extraInfo,
    this.checkInDate,
    this.checkOutDate,
    this.extraRate,
    this.customerRequest,
    this.bookingRequestRateId,
    this.tokenData,
    this.rateBasePrice,
    this.rateTotalPrice,
    this.hotelId,
    this.roomId,
    this.roomName,
    this.rooms,
    this.extraBedPrice,
    this.extraBed,
    this.receiverData,
    this.bedTypeData,
    // this.residentData,
    this.totalExtraRatePrice,
    this.showPrices,
  });
  ResponseBookingHotelDataHotel.fromJson(Map<String, dynamic> json) {
    hotelSuggestionId = json['hotel_suggestion_id']?.toString();
    extraInfo = (json['extra_info'] != null) ? ResponseBookingHotelDataHotelExtraInfo.fromJson(json['extra_info']) : null;
    checkInDate = json['check_in_date']?.toString();
    checkOutDate = json['check_out_date']?.toString();
    extraRate = json['extra_rate']?.toString();
    customerRequest = json['customer_request']?.toString();
    bookingRequestRateId = json['booking_request_rate_id']?.toString();
    tokenData = (json['token_data'] != null) ? ResponseBookingHotelDataHotelTokenData.fromJson(json['token_data']) : null;
    rateBasePrice = json['rate_base_price']?.toInt();
    rateTotalPrice = json['rate_total_price']?.toInt();
    hotelId = json['hotel_id']?.toInt();
    roomId = json['room_id']?.toInt();
    roomName = json['room_name']?.toString();
    rooms = json['rooms']?.toInt();
    extraBedPrice = json['extra_bed_price']?.toInt();
    extraBed = json['extra_bed']?.toInt();
    if (json['receiver_data'] != null) {
      final v = json['receiver_data'];
      final arr0 = <ResponseBookingHotelDataHotelReceiverData>[];
      v.forEach((v) {
        arr0.add(ResponseBookingHotelDataHotelReceiverData.fromJson(v));
      });
      receiverData = arr0;
    }
    bedTypeData = (json['bed_type_data'] != null) ? ResponseBookingHotelDataHotelBedTypeData.fromJson(json['bed_type_data']) : null;
    totalExtraRatePrice = json['total_extra_rate_price']?.toInt();
    showPrices = (json['show_prices'] != null) ? ResponseBookingHotelDataHotelShowPrices.fromJson(json['show_prices']) : null;
    }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['hotel_suggestion_id'] = hotelSuggestionId;
    if (extraInfo != null) {
      data['extra_info'] = extraInfo!.toJson();
    }
    data['check_in_date'] = checkInDate;
    data['check_out_date'] = checkOutDate;
    data['extra_rate'] = extraRate;
    data['customer_request'] = customerRequest;
    data['booking_request_rate_id'] = bookingRequestRateId;
    if (tokenData != null) {
      data['token_data'] = tokenData!.toJson();
    }
    data['rate_base_price'] = rateBasePrice;
    data['rate_total_price'] = rateTotalPrice;
    data['hotel_id'] = hotelId;
    data['room_id'] = roomId;
    data['room_name'] = roomName;
    data['rooms'] = rooms;
    data['extra_bed_price'] = extraBedPrice;
    data['extra_bed'] = extraBed;
    if (receiverData != null) {
      final v = receiverData;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['receiver_data'] = arr0;
    }
    if (bedTypeData != null) {
      data['bed_type_data'] = bedTypeData!.toJson();
    }
    data['total_extra_rate_price'] = totalExtraRatePrice;
    if (showPrices != null) {
    data['show_prices'] = showPrices!.toJson();
    }
    return data;
  }
}

class ResponseBookingHotelDataLoginInfo {
/*
{
  "is_logged_in": false,
  "login_user_data": null
}
*/

  bool? isLoggedIn;
  String? loginUserData;

  ResponseBookingHotelDataLoginInfo({
    this.isLoggedIn,
    this.loginUserData,
  });
  ResponseBookingHotelDataLoginInfo.fromJson(Map<String, dynamic> json) {
    isLoggedIn = json['is_logged_in'];
    loginUserData = json['login_user_data']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['is_logged_in'] = isLoggedIn;
    data['login_user_data'] = loginUserData;
    return data;
  }
}

class ResponseBookingHotelDataBookerData {
/*
{
  "type": "person",
  "email": "tan@gmail.com",
  "phone": "344850761",
  "gender": 2,
  "user_id": null,
  "language": "vi",
  "last_name": "Bùi",
  "first_name": "Chiên"
}
*/

  String? type;
  String? email;
  String? phone;
  int? gender;
  String? userId;
  String? language;
  String? lastName;
  String? firstName;

  ResponseBookingHotelDataBookerData({
    this.type,
    this.email,
    this.phone,
    this.gender,
    this.userId,
    this.language,
    this.lastName,
    this.firstName,
  });
  ResponseBookingHotelDataBookerData.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    email = json['email']?.toString();
    phone = json['phone']?.toString();
    gender = json['gender']?.toInt();
    userId = json['user_id']?.toString();
    language = json['language']?.toString();
    lastName = json['last_name']?.toString();
    firstName = json['first_name']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['email'] = email;
    data['phone'] = phone;
    data['gender'] = gender;
    data['user_id'] = userId;
    data['language'] = language;
    data['last_name'] = lastName;
    data['first_name'] = firstName;
    return data;
  }
}

class ResponseBookingHotelData {
/*
{
  "id": "19be6306-07e6-4309-825c-2d9d73dfd869",
  "code": "BR-20220913-25583032",
  "created_at": "2022-09-13T04:01:25.562Z",
  "completed_at": null,
  "creator_id": null,
  "handler_id": null,
  "status": 1,
  "fail_reason": null,
  "comments": [
    null
  ],
  "updated_at": "2022-09-13T04:01:25.562Z",
  "business_account_id": null,
  "booker_data": {
    "type": "person",
    "email": "tan@gmail.com",
    "phone": "344850761",
    "gender": 2,
    "user_id": null,
    "language": "vi",
    "last_name": "Bùi",
    "first_name": "Chiên"
  },
  "other_expense": null,
  "account_data": null,
  "customer_request": null,
  "payment_method": null,
  "currency": null,
  "request_from": "APP_ANDROID",
  "coupon_code": null,
  "type": "hotel",
  "book_for_me": 0,
  "business_account_type": null,
  "publisher_data": null,
  "payment_method_fee": 0,
  "loyalty_benefit": null,
  "has_rates": false,
  "related_order": null,
  "deal_id": null,
  "deal_options": null,
  "approver_id": null,
  "is_hidden": null,
  "ip_address": null,
  "login_info": {
    "is_logged_in": false,
    "login_user_data": null
  },
  "other_expense_source": null,
  "verified_voucher": null,
  "utm_data": null,
  "partner_id": null,
  "partner_product_source": null,
  "reorder": false,
  "reorder_list": null,
  "trip_voucher": null,
  "markup_vat": 0,
  "airline_ca": null,
  "trip_business_id": null,
  "use_wallet": false,
  "wallet_amount": 0,
  "verified_otp": false,
  "request_otp": false,
  "partner_booking_code": null,
  "hotel": [
    {
      "hotel_suggestion_id": "c9e63fcb-cf9f-4654-965a-551a93688f7e",
      "extra_info": {
        "ean_id": null,
        "area_id": null,
        "city_id": 711,
        "hotel_id": 70518,
        "latitude": "21.0253508",
        "area_name": null,
        "city_name": "Quận Ba Đình",
        "longitude": "105.8217117",
        "country_id": 1,
        "hotel_name": "Grand Vista Hanoi Hotel",
        "hotel_type": "ota_hotels",
        "province_id": 66,
        "country_code": "VN",
        "country_name": "Việt Nam",
        "request_from": "APP_ANDROID",
        "hotel_address": "146 Giảng Võ, Ba Đình, Hà Nội",
        "province_name": "Hà Nội",
        "hotel_star_rate": "5.0",
        "is_international": false
      },
      "check_in_date": "2022-09-08T00:00:00+07:00",
      "check_out_date": "2022-09-09T00:00:00+07:00",
      "extra_rate": null,
      "customer_request": null,
      "booking_request_rate_id": "d27439b2-6a73-4a50-bcb1-5fef7b2a97a4",
      "token_data": {
        "hotel_id": 70518,
        "raw_info": {
          "id": 52108,
          "vat": true,
          "name": "Standard Rate",
          "tags": [
            null
          ],
          "price": 500000,
          "bookable": true,
          "hotel_id": 70518,
          "provider": "VNTRIP",
          "deal_type": "",
          "extra_bed": 1,
          "meal_plan": "breakfast",
          "net_price": 425000,
          "surcharge": {
            "price": 0
          },
          "commission": 15,
          "is_ta_rate": false,
          "refundable": true,
          "room_count": 5,
          "show_price": 500000,
          "adult_count": 2,
          "avail_token": "d1ededee7e7541aa97593387c669eaaf",
          "cc_required": true,
          "child_count": 1,
          "hotel_price": 425000,
          "show_prices": {
            "promotion": {
              "show": false,
              "order": 1,
              "title": "",
              "end_time": -1,
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "final_price": {
              "show": false,
              "order": 6,
              "title": "Giá cuối",
              "discount_type": "PERCENT",
              "excl_vat_fee_price": 425000,
              "incl_vat_fee_price": 500000,
              "excl_discount_value": 0,
              "incl_discount_value": 0
            },
            "mobile_rate": {
              "show": false,
              "order": 3,
              "title": "MOBILE_RATE",
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "discount_coupon": {
              "show": false,
              "order": 5,
              "title": "",
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "member_discount": {
              "show": false,
              "order": 2,
              "title": "SECRET_DEALS",
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "loyalty_discount": {
              "show": false,
              "order": 4,
              "title": "",
              "discount_type": "",
              "discount_value": 0,
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            }
          },
          "total_price": 500000,
          "unit_prices": [
            {
              "day": "20220908",
              "price": 500000,
              "promotion_price": 500000
            }
          ],
          "arrival_date": "20220908",
          "block_prices": [
            {
              "id": "52108_1",
              "price": 500000,
              "origin_price": 500000,
              "promotion_price": 500000
            }
          ],
          "included_VAT": 10,
          "instant_book": true,
          "is_promotion": false,
          "promotion_id": null,
          "pretty_prices": {
            "nights": 1,
            "base_price": 500000,
            "total_price": 500000,
            "checkin_date": "20220908",
            "checkout_date": "20220909",
            "base_net_price": 425000,
            "total_net_price": 425000,
            "base_price_per_room": 500000,
            "number_of_book_room": 1,
            "base_price_per_night": 500000,
            "number_of_room_avail": 5,
            "total_price_per_room": 500000,
            "total_price_per_night": 500000,
            "base_price_per_night_per_room": 500000,
            "total_price_per_night_per_room": 500000,
            "base_net_price_per_night_per_room": 425000,
            "total_net_price_per_night_per_room": 425000
          },
          "departure_date": "20220909",
          "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
          "extra_bed_price": 0,
          "price_breakdown": {
            "sales_tax": 0,
            "included_fee": true,
            "charges_total": 75000,
            "mandatory_tax": 0,
            "tax_and_service_fee": 75000,
            "price_without_charges": 425000
          },
          "rate_identifier": "OO",
          "vntrip_metadata": {},
          "vntrip_rate_type": "ota_rate",
          "children_free_age": 0,
          "is_payment_online": true,
          "vntrip_markup_vat": 0,
          "is_tms_special_deal": false,
          "raw_cancel_policies": {
            "is_general": true,
            "refundable": true,
            "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
            "cancel_policies": [
              {
                "type": "BeforeArrival",
                "Amount": "0",
                "TimeUnit": "Days",
                "PenaltyType": "RoomPercent",
                "UnitTimeMultiplier": "3"
              }
            ],
            "discount_member": {
              "discount_active": false
            }
          },
          "included_service_fee": 5,
          "allow_member_discount": false
        },
        "rate_info": {
          "id": 52108,
          "vat": true,
          "name": "Standard Rate",
          "tags": [
            null
          ],
          "price": 500000,
          "bookable": true,
          "hotel_id": 70518,
          "provider": "VNTRIP",
          "deal_type": "",
          "extra_bed": 1,
          "meal_plan": "breakfast",
          "net_price": 425000,
          "surcharge": {
            "price": 0
          },
          "commission": 15,
          "is_ta_rate": false,
          "refundable": true,
          "room_count": 5,
          "show_price": 500000,
          "adult_count": 2,
          "avail_token": "d1ededee7e7541aa97593387c669eaaf",
          "cc_required": true,
          "child_count": 1,
          "hotel_price": 425000,
          "show_prices": {
            "promotion": {
              "show": false,
              "order": 1,
              "title": "",
              "end_time": -1,
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "final_price": {
              "show": false,
              "order": 6,
              "title": "Giá cuối",
              "discount_type": "PERCENT",
              "excl_vat_fee_price": 425000,
              "incl_vat_fee_price": 500000,
              "excl_discount_value": 0,
              "incl_discount_value": 0
            },
            "mobile_rate": {
              "show": false,
              "order": 3,
              "title": "MOBILE_RATE",
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "discount_coupon": {
              "show": false,
              "order": 5,
              "title": "",
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "member_discount": {
              "show": false,
              "order": 2,
              "title": "SECRET_DEALS",
              "discount_type": "",
              "discount_value": "",
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            },
            "loyalty_discount": {
              "show": false,
              "order": 4,
              "title": "",
              "discount_type": "",
              "discount_value": 0,
              "excl_vat_fee_price": 0,
              "incl_vat_fee_price": 0
            }
          },
          "total_price": 500000,
          "unit_prices": [
            {
              "day": "20220908",
              "price": 500000,
              "promotion_price": 500000
            }
          ],
          "arrival_date": "20220908",
          "block_prices": [
            {
              "id": "52108_1",
              "price": 500000,
              "origin_price": 500000,
              "promotion_price": 500000
            }
          ],
          "included_VAT": 10,
          "instant_book": true,
          "is_promotion": false,
          "promotion_id": null,
          "pretty_prices": {
            "nights": 1,
            "base_price": 500000,
            "total_price": 500000,
            "checkin_date": "20220908",
            "checkout_date": "20220909",
            "base_net_price": 425000,
            "total_net_price": 425000,
            "base_price_per_room": 500000,
            "number_of_book_room": 1,
            "base_price_per_night": 500000,
            "number_of_room_avail": 5,
            "total_price_per_room": 500000,
            "total_price_per_night": 500000,
            "base_price_per_night_per_room": 500000,
            "total_price_per_night_per_room": 500000,
            "base_net_price_per_night_per_room": 425000,
            "total_net_price_per_night_per_room": 425000
          },
          "departure_date": "20220909",
          "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
          "extra_bed_price": 0,
          "price_breakdown": {
            "sales_tax": 0,
            "included_fee": true,
            "charges_total": 75000,
            "mandatory_tax": 0,
            "tax_and_service_fee": 75000,
            "price_without_charges": 425000
          },
          "rate_identifier": "OO",
          "vntrip_metadata": {},
          "vntrip_rate_type": "ota_rate",
          "children_free_age": 0,
          "is_payment_online": true,
          "vntrip_markup_vat": 0,
          "is_tms_special_deal": false,
          "raw_cancel_policies": {
            "is_general": true,
            "refundable": true,
            "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
            "cancel_policies": [
              {
                "type": "BeforeArrival",
                "Amount": "0",
                "TimeUnit": "Days",
                "PenaltyType": "RoomPercent",
                "UnitTimeMultiplier": "3"
              }
            ],
            "discount_member": {
              "discount_active": false
            }
          },
          "included_service_fee": 5,
          "allow_member_discount": false
        },
        "room_info": {
          "id": 50195,
          "name": "Executive Double/Twin",
          "count": 5,
          "thumb": {
            "order": 2,
            "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
            "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
          },
          "photos": [
            {
              "order": 2,
              "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
              "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
            }
          ],
          "hotel_id": 70518,
          "provider": "VNTRIP",
          "bed_types": [
            [
              {
                "type": "Giường cỡ King",
                "count": "1",
                "extra": false,
                "description": ""
              }
            ]
          ],
          "max_adult": 2,
          "min_price": 500000,
          "room_area": "38.0 m2",
          "facilities": "Điều hòa, Giá treo quần áo, Bàn, Bồn tắm, Két sắt, Tường cách âm, Máy sấy, Tủ quần áo, Phòng không hút thuốc, Phòng tắm của khách, Bồn tắm, Áo choàng tắm, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Bồn tắm và vòi sen riêng biệt, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Máy pha trà/ café, Đồng hồ báo thức , Khăn, Dịch vụ báo thức, Đồng hồ báo thức, Hướng thành phố",
          "sort_price": 500000,
          "description": "",
          "max_children": 1,
          "max_extra_bed": 1,
          "extra_bed_info": {
            "adult_age": null,
            "child_age": null,
            "extra_bed_price": 0,
            "same_bed_child_price": 0,
            "extra_bed_child_price": 0,
            "extra_bed_other_policies": "",
            "extra_bed_little_child_price": 0
          },
          "additional_info": null,
          "client_metadata": {
            "request_from": "app_android",
            "customerIpAddress": "118.70.118.215",
            "customerSessionId": "16GuKzV8K1@92YcLg85uR5ku;peVriRZSn!1.UTh, qHGT0xYHSPLyscJP",
            "customerUserAgent": "vntrip.vn/129 ( Android 7.0 )"
          },
          "reformat_bed_types": [
            {
              "bed_data": [
                {
                  "type": "Giường cỡ King",
                  "count": "1",
                  "description": ""
                }
              ],
              "group_id": "0"
            }
          ],
          "specific_facilities": {
            "lcd": true,
            "bathtub": true,
            "minibar": true,
            "no_smoking": true,
            "private_pool": false,
            "tv_and_cable": true,
            "air_conditioner": true
          }
        },
        "commission": 15,
        "room_count": 1,
        "median_price": 0,
        "person_count": 2,
        "check_in_date": "20220908",
        "check_out_date": "20220909"
      },
      "rate_base_price": 500000,
      "rate_total_price": 500000,
      "hotel_id": 70518,
      "room_id": 50195,
      "room_name": "Executive Double/Twin",
      "rooms": 1,
      "extra_bed_price": 0,
      "extra_bed": 0,
      "receiver_data": [
        {
          "phone": "344850761",
          "last_name": "Bùi",
          "first_name": "Chiên",
          "country_code": "84"
        }
      ],
      "bed_type_data": {
        "selected_group_id": 0,
        "reformat_bed_types": [
          {
            "bed_data": [
              {
                "type": "Giường cỡ King",
                "count": "1",
                "description": ""
              }
            ],
            "group_id": "0"
          }
        ]
      },
      "resident_data": [
        null
      ],
      "total_extra_rate_price": 0,
      "show_prices": {
        "promotion": {
          "show": false,
          "order": 1,
          "title": "",
          "end_time": -1,
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "final_price": {
          "show": false,
          "order": 6,
          "title": "Giá cuối",
          "discount_type": "PERCENT",
          "excl_vat_fee_price": 425000,
          "incl_vat_fee_price": 500000,
          "excl_discount_value": 0,
          "incl_discount_value": 0
        },
        "mobile_rate": {
          "show": false,
          "order": 3,
          "title": "MOBILE_RATE",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "discount_coupon": {
          "show": false,
          "order": 5,
          "title": "",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "member_discount": {
          "show": false,
          "order": 2,
          "title": "SECRET_DEALS",
          "discount_type": "",
          "discount_value": "",
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        },
        "loyalty_discount": {
          "show": false,
          "order": 4,
          "title": "",
          "discount_type": "",
          "discount_value": 0,
          "excl_vat_fee_price": 0,
          "incl_vat_fee_price": 0
        }
      }
    }
  ],
  "flight": null,
  "combo": null,
  "loyalty_redeem_info": null,
  "loyalty_cashback_info": null,
  "coupon_info": null,
  "validations": {
    "loyalty_redeem_info": null,
    "coupon_info": null
  },
  "from_date": "20220908",
  "to_date": "20220909",
  "bonus_cashback": {
    "coupon_cashback": null,
    "allow_cashback": true,
    "allow_redeem": true,
    "bonus_id": null,
    "campaign_id": null,
    "campaign_type": null
  },
  "prices": {
    "total_price": 500000,
    "final_discount_value": 0,
    "final_price": 500000,
    "coupon_price": 0,
    "hotel_item_total_price": 500000,
    "flight_item_total_price": 0,
    "addons_price": 0,
    "loyalty_benefit_price": 0,
    "vat": 0,
    "loyalty_redeem_price": 0,
    "payment_fee": 0
  },
  "total_price": 500000,
  "final_discount_value": 0,
  "final_price": 500000,
  "coupon_price": 0,
  "hotel_item_total_price": 500000,
  "flight_item_total_price": 0,
  "addons_price": 0,
  "loyalty_benefit_price": 0,
  "vat": 0,
  "loyalty_redeem_price": 0,
  "payment_fee": 0,
  "reward_amount": 0,
  "order_id": null,
  "order_code": null,
  "order_status": null,
  "bank_code": null,
  "order_pdf_link": null
}
*/

  String? id;
  String? code;
  String? createdAt;
  String? completedAt;
  String? creatorId;
  String? handlerId;
  int? status;
  String? failReason;
  // List<ResponseBookingHotelDataComments?>? comments;
  String? updatedAt;
  String? businessAccountId;
  ResponseBookingHotelDataBookerData? bookerData;
  String? otherExpense;
  String? accountData;
  String? customerRequest;
  String? paymentMethod;
  String? currency;
  String? requestFrom;
  String? couponCode;
  String? type;
  int? bookForMe;
  String? businessAccountType;
  String? publisherData;
  int? paymentMethodFee;
  String? loyaltyBenefit;
  bool? hasRates;
  String? relatedOrder;
  String? dealId;
  String? dealOptions;
  String? approverId;
  String? isHidden;
  String? ipAddress;
  ResponseBookingHotelDataLoginInfo? loginInfo;
  String? otherExpenseSource;
  String? verifiedVoucher;
  String? utmData;
  String? partnerId;
  String? partnerProductSource;
  bool? reorder;
  String? reorderList;
  String? tripVoucher;
  int? markupVat;
  String? airlineCa;
  String? tripBusinessId;
  bool? useWallet;
  int? walletAmount;
  bool? verifiedOtp;
  bool? requestOtp;
  String? partnerBookingCode;
  List<ResponseBookingHotelDataHotel?>? hotel;
  String? flight;
  String? combo;
  String? loyaltyRedeemInfo;
  String? loyaltyCashbackInfo;
  String? couponInfo;
  ResponseBookingHotelDataValidations? validations;
  String? fromDate;
  String? toDate;
  ResponseBookingHotelDataBonusCashback? bonusCashback;
  ResponseBookingHotelDataPrices? prices;
  int? totalPrice;
  int? finalDiscountValue;
  int? finalPrice;
  int? couponPrice;
  int? hotelItemTotalPrice;
  int? flightItemTotalPrice;
  int? addonsPrice;
  int? loyaltyBenefitPrice;
  int? vat;
  int? loyaltyRedeemPrice;
  int? paymentFee;
  int? rewardAmount;
  String? orderId;
  String? orderCode;
  String? orderStatus;
  String? bankCode;
  String? orderPdfLink;

  ResponseBookingHotelData({
    this.id,
    this.code,
    this.createdAt,
    this.completedAt,
    this.creatorId,
    this.handlerId,
    this.status,
    this.failReason,
    // this.comments,
    this.updatedAt,
    this.businessAccountId,
    this.bookerData,
    this.otherExpense,
    this.accountData,
    this.customerRequest,
    this.paymentMethod,
    this.currency,
    this.requestFrom,
    this.couponCode,
    this.type,
    this.bookForMe,
    this.businessAccountType,
    this.publisherData,
    this.paymentMethodFee,
    this.loyaltyBenefit,
    this.hasRates,
    this.relatedOrder,
    this.dealId,
    this.dealOptions,
    this.approverId,
    this.isHidden,
    this.ipAddress,
    this.loginInfo,
    this.otherExpenseSource,
    this.verifiedVoucher,
    this.utmData,
    this.partnerId,
    this.partnerProductSource,
    this.reorder,
    this.reorderList,
    this.tripVoucher,
    this.markupVat,
    this.airlineCa,
    this.tripBusinessId,
    this.useWallet,
    this.walletAmount,
    this.verifiedOtp,
    this.requestOtp,
    this.partnerBookingCode,
    this.hotel,
    this.flight,
    this.combo,
    this.loyaltyRedeemInfo,
    this.loyaltyCashbackInfo,
    this.couponInfo,
    this.validations,
    this.fromDate,
    this.toDate,
    this.bonusCashback,
    this.prices,
    this.totalPrice,
    this.finalDiscountValue,
    this.finalPrice,
    this.couponPrice,
    this.hotelItemTotalPrice,
    this.flightItemTotalPrice,
    this.addonsPrice,
    this.loyaltyBenefitPrice,
    this.vat,
    this.loyaltyRedeemPrice,
    this.paymentFee,
    this.rewardAmount,
    this.orderId,
    this.orderCode,
    this.orderStatus,
    this.bankCode,
    this.orderPdfLink,
  });
  ResponseBookingHotelData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    code = json['code']?.toString();
    createdAt = json['created_at']?.toString();
    completedAt = json['completed_at']?.toString();
    creatorId = json['creator_id']?.toString();
    handlerId = json['handler_id']?.toString();
    status = json['status']?.toInt();
    failReason = json['fail_reason']?.toString();
    updatedAt = json['updated_at']?.toString();
    businessAccountId = json['business_account_id']?.toString();
    bookerData = (json['booker_data'] != null) ? ResponseBookingHotelDataBookerData.fromJson(json['booker_data']) : null;
    otherExpense = json['other_expense']?.toString();
    accountData = json['account_data']?.toString();
    customerRequest = json['customer_request']?.toString();
    paymentMethod = json['payment_method']?.toString();
    currency = json['currency']?.toString();
    requestFrom = json['request_from']?.toString();
    couponCode = json['coupon_code']?.toString();
    type = json['type']?.toString();
    bookForMe = json['book_for_me']?.toInt();
    businessAccountType = json['business_account_type']?.toString();
    publisherData = json['publisher_data']?.toString();
    paymentMethodFee = json['payment_method_fee']?.toInt();
    loyaltyBenefit = json['loyalty_benefit']?.toString();
    hasRates = json['has_rates'];
    relatedOrder = json['related_order']?.toString();
    dealId = json['deal_id']?.toString();
    dealOptions = json['deal_options']?.toString();
    approverId = json['approver_id']?.toString();
    isHidden = json['is_hidden']?.toString();
    ipAddress = json['ip_address']?.toString();
    loginInfo = (json['login_info'] != null) ? ResponseBookingHotelDataLoginInfo.fromJson(json['login_info']) : null;
    otherExpenseSource = json['other_expense_source']?.toString();
    verifiedVoucher = json['verified_voucher']?.toString();
    utmData = json['utm_data']?.toString();
    partnerId = json['partner_id']?.toString();
    partnerProductSource = json['partner_product_source']?.toString();
    reorder = json['reorder'];
    reorderList = json['reorder_list']?.toString();
    tripVoucher = json['trip_voucher']?.toString();
    markupVat = json['markup_vat']?.toInt();
    airlineCa = json['airline_ca']?.toString();
    tripBusinessId = json['trip_business_id']?.toString();
    useWallet = json['use_wallet'];
    walletAmount = json['wallet_amount']?.toInt();
    verifiedOtp = json['verified_otp'];
    requestOtp = json['request_otp'];
    partnerBookingCode = json['partner_booking_code']?.toString();
    if (json['hotel'] != null) {
    final v = json['hotel'];
    final arr0 = <ResponseBookingHotelDataHotel>[];
    v.forEach((v) {
    arr0.add(ResponseBookingHotelDataHotel.fromJson(v));
    });
    hotel = arr0;
    }
    flight = json['flight']?.toString();
    combo = json['combo']?.toString();
    loyaltyRedeemInfo = json['loyalty_redeem_info']?.toString();
    loyaltyCashbackInfo = json['loyalty_cashback_info']?.toString();
    couponInfo = json['coupon_info']?.toString();
    validations = (json['validations'] != null) ? ResponseBookingHotelDataValidations.fromJson(json['validations']) : null;
    fromDate = json['from_date']?.toString();
    toDate = json['to_date']?.toString();
    bonusCashback = (json['bonus_cashback'] != null) ? ResponseBookingHotelDataBonusCashback.fromJson(json['bonus_cashback']) : null;
    prices = (json['prices'] != null) ? ResponseBookingHotelDataPrices.fromJson(json['prices']) : null;
    totalPrice = json['total_price']?.toInt();
    finalDiscountValue = json['final_discount_value']?.toInt();
    finalPrice = json['final_price']?.toInt();
    couponPrice = json['coupon_price']?.toInt();
    hotelItemTotalPrice = json['hotel_item_total_price']?.toInt();
    flightItemTotalPrice = json['flight_item_total_price']?.toInt();
    addonsPrice = json['addons_price']?.toInt();
    loyaltyBenefitPrice = json['loyalty_benefit_price']?.toInt();
    vat = json['vat']?.toInt();
    loyaltyRedeemPrice = json['loyalty_redeem_price']?.toInt();
    paymentFee = json['payment_fee']?.toInt();
    rewardAmount = json['reward_amount']?.toInt();
    orderId = json['order_id']?.toString();
    orderCode = json['order_code']?.toString();
    orderStatus = json['order_status']?.toString();
    bankCode = json['bank_code']?.toString();
    orderPdfLink = json['order_pdf_link']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['code'] = code;
    data['created_at'] = createdAt;
    data['completed_at'] = completedAt;
    data['creator_id'] = creatorId;
    data['handler_id'] = handlerId;
    data['status'] = status;
    data['fail_reason'] = failReason;
    data['updated_at'] = updatedAt;
    data['business_account_id'] = businessAccountId;
    if (bookerData != null) {
    data['booker_data'] = bookerData!.toJson();
    }
    data['other_expense'] = otherExpense;
    data['account_data'] = accountData;
    data['customer_request'] = customerRequest;
    data['payment_method'] = paymentMethod;
    data['currency'] = currency;
    data['request_from'] = requestFrom;
    data['coupon_code'] = couponCode;
    data['type'] = type;
    data['book_for_me'] = bookForMe;
    data['business_account_type'] = businessAccountType;
    data['publisher_data'] = publisherData;
    data['payment_method_fee'] = paymentMethodFee;
    data['loyalty_benefit'] = loyaltyBenefit;
    data['has_rates'] = hasRates;
    data['related_order'] = relatedOrder;
    data['deal_id'] = dealId;
    data['deal_options'] = dealOptions;
    data['approver_id'] = approverId;
    data['is_hidden'] = isHidden;
    data['ip_address'] = ipAddress;
    if (loginInfo != null) {
    data['login_info'] = loginInfo!.toJson();
    }
    data['other_expense_source'] = otherExpenseSource;
    data['verified_voucher'] = verifiedVoucher;
    data['utm_data'] = utmData;
    data['partner_id'] = partnerId;
    data['partner_product_source'] = partnerProductSource;
    data['reorder'] = reorder;
    data['reorder_list'] = reorderList;
    data['trip_voucher'] = tripVoucher;
    data['markup_vat'] = markupVat;
    data['airline_ca'] = airlineCa;
    data['trip_business_id'] = tripBusinessId;
    data['use_wallet'] = useWallet;
    data['wallet_amount'] = walletAmount;
    data['verified_otp'] = verifiedOtp;
    data['request_otp'] = requestOtp;
    data['partner_booking_code'] = partnerBookingCode;
    if (hotel != null) {
    final v = hotel;
    final arr0 = [];
    v!.forEach((v) {
    arr0.add(v!.toJson());
    });
    data['hotel'] = arr0;
    }
    data['flight'] = flight;
    data['combo'] = combo;
    data['loyalty_redeem_info'] = loyaltyRedeemInfo;
    data['loyalty_cashback_info'] = loyaltyCashbackInfo;
    data['coupon_info'] = couponInfo;
    if (validations != null) {
    data['validations'] = validations!.toJson();
    }
    data['from_date'] = fromDate;
    data['to_date'] = toDate;
    if (bonusCashback != null) {
    data['bonus_cashback'] = bonusCashback!.toJson();
    }
    if (prices != null) {
    data['prices'] = prices!.toJson();
    }
    data['total_price'] = totalPrice;
    data['final_discount_value'] = finalDiscountValue;
    data['final_price'] = finalPrice;
    data['coupon_price'] = couponPrice;
    data['hotel_item_total_price'] = hotelItemTotalPrice;
    data['flight_item_total_price'] = flightItemTotalPrice;
    data['addons_price'] = addonsPrice;
    data['loyalty_benefit_price'] = loyaltyBenefitPrice;
    data['vat'] = vat;
    data['loyalty_redeem_price'] = loyaltyRedeemPrice;
    data['payment_fee'] = paymentFee;
    data['reward_amount'] = rewardAmount;
    data['order_id'] = orderId;
    data['order_code'] = orderCode;
    data['order_status'] = orderStatus;
    data['bank_code'] = bankCode;
    data['order_pdf_link'] = orderPdfLink;
    return data;
  }
}

class ResponseBookingHotel {
/*
{
  "status": "success",
  "message": "Success",
  "data": {
    "id": "19be6306-07e6-4309-825c-2d9d73dfd869",
    "code": "BR-20220913-25583032",
    "created_at": "2022-09-13T04:01:25.562Z",
    "completed_at": null,
    "creator_id": null,
    "handler_id": null,
    "status": 1,
    "fail_reason": null,
    "comments": [
      null
    ],
    "updated_at": "2022-09-13T04:01:25.562Z",
    "business_account_id": null,
    "booker_data": {
      "type": "person",
      "email": "tan@gmail.com",
      "phone": "344850761",
      "gender": 2,
      "user_id": null,
      "language": "vi",
      "last_name": "Bùi",
      "first_name": "Chiên"
    },
    "other_expense": null,
    "account_data": null,
    "customer_request": null,
    "payment_method": null,
    "currency": null,
    "request_from": "APP_ANDROID",
    "coupon_code": null,
    "type": "hotel",
    "book_for_me": 0,
    "business_account_type": null,
    "publisher_data": null,
    "payment_method_fee": 0,
    "loyalty_benefit": null,
    "has_rates": false,
    "related_order": null,
    "deal_id": null,
    "deal_options": null,
    "approver_id": null,
    "is_hidden": null,
    "ip_address": null,
    "login_info": {
      "is_logged_in": false,
      "login_user_data": null
    },
    "other_expense_source": null,
    "verified_voucher": null,
    "utm_data": null,
    "partner_id": null,
    "partner_product_source": null,
    "reorder": false,
    "reorder_list": null,
    "trip_voucher": null,
    "markup_vat": 0,
    "airline_ca": null,
    "trip_business_id": null,
    "use_wallet": false,
    "wallet_amount": 0,
    "verified_otp": false,
    "request_otp": false,
    "partner_booking_code": null,
    "hotel": [
      {
        "hotel_suggestion_id": "c9e63fcb-cf9f-4654-965a-551a93688f7e",
        "extra_info": {
          "ean_id": null,
          "area_id": null,
          "city_id": 711,
          "hotel_id": 70518,
          "latitude": "21.0253508",
          "area_name": null,
          "city_name": "Quận Ba Đình",
          "longitude": "105.8217117",
          "country_id": 1,
          "hotel_name": "Grand Vista Hanoi Hotel",
          "hotel_type": "ota_hotels",
          "province_id": 66,
          "country_code": "VN",
          "country_name": "Việt Nam",
          "request_from": "APP_ANDROID",
          "hotel_address": "146 Giảng Võ, Ba Đình, Hà Nội",
          "province_name": "Hà Nội",
          "hotel_star_rate": "5.0",
          "is_international": false
        },
        "check_in_date": "2022-09-08T00:00:00+07:00",
        "check_out_date": "2022-09-09T00:00:00+07:00",
        "extra_rate": null,
        "customer_request": null,
        "booking_request_rate_id": "d27439b2-6a73-4a50-bcb1-5fef7b2a97a4",
        "token_data": {
          "hotel_id": 70518,
          "raw_info": {
            "id": 52108,
            "vat": true,
            "name": "Standard Rate",
            "tags": [
              null
            ],
            "price": 500000,
            "bookable": true,
            "hotel_id": 70518,
            "provider": "VNTRIP",
            "deal_type": "",
            "extra_bed": 1,
            "meal_plan": "breakfast",
            "net_price": 425000,
            "surcharge": {
              "price": 0
            },
            "commission": 15,
            "is_ta_rate": false,
            "refundable": true,
            "room_count": 5,
            "show_price": 500000,
            "adult_count": 2,
            "avail_token": "d1ededee7e7541aa97593387c669eaaf",
            "cc_required": true,
            "child_count": 1,
            "hotel_price": 425000,
            "show_prices": {
              "promotion": {
                "show": false,
                "order": 1,
                "title": "",
                "end_time": -1,
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "final_price": {
                "show": false,
                "order": 6,
                "title": "Giá cuối",
                "discount_type": "PERCENT",
                "excl_vat_fee_price": 425000,
                "incl_vat_fee_price": 500000,
                "excl_discount_value": 0,
                "incl_discount_value": 0
              },
              "mobile_rate": {
                "show": false,
                "order": 3,
                "title": "MOBILE_RATE",
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "discount_coupon": {
                "show": false,
                "order": 5,
                "title": "",
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "member_discount": {
                "show": false,
                "order": 2,
                "title": "SECRET_DEALS",
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "loyalty_discount": {
                "show": false,
                "order": 4,
                "title": "",
                "discount_type": "",
                "discount_value": 0,
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              }
            },
            "total_price": 500000,
            "unit_prices": [
              {
                "day": "20220908",
                "price": 500000,
                "promotion_price": 500000
              }
            ],
            "arrival_date": "20220908",
            "block_prices": [
              {
                "id": "52108_1",
                "price": 500000,
                "origin_price": 500000,
                "promotion_price": 500000
              }
            ],
            "included_VAT": 10,
            "instant_book": true,
            "is_promotion": false,
            "promotion_id": null,
            "pretty_prices": {
              "nights": 1,
              "base_price": 500000,
              "total_price": 500000,
              "checkin_date": "20220908",
              "checkout_date": "20220909",
              "base_net_price": 425000,
              "total_net_price": 425000,
              "base_price_per_room": 500000,
              "number_of_book_room": 1,
              "base_price_per_night": 500000,
              "number_of_room_avail": 5,
              "total_price_per_room": 500000,
              "total_price_per_night": 500000,
              "base_price_per_night_per_room": 500000,
              "total_price_per_night_per_room": 500000,
              "base_net_price_per_night_per_room": 425000,
              "total_net_price_per_night_per_room": 425000
            },
            "departure_date": "20220909",
            "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
            "extra_bed_price": 0,
            "price_breakdown": {
              "sales_tax": 0,
              "included_fee": true,
              "charges_total": 75000,
              "mandatory_tax": 0,
              "tax_and_service_fee": 75000,
              "price_without_charges": 425000
            },
            "rate_identifier": "OO",
            "vntrip_metadata": {},
            "vntrip_rate_type": "ota_rate",
            "children_free_age": 0,
            "is_payment_online": true,
            "vntrip_markup_vat": 0,
            "is_tms_special_deal": false,
            "raw_cancel_policies": {
              "is_general": true,
              "refundable": true,
              "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
              "cancel_policies": [
                {
                  "type": "BeforeArrival",
                  "Amount": "0",
                  "TimeUnit": "Days",
                  "PenaltyType": "RoomPercent",
                  "UnitTimeMultiplier": "3"
                }
              ],
              "discount_member": {
                "discount_active": false
              }
            },
            "included_service_fee": 5,
            "allow_member_discount": false
          },
          "rate_info": {
            "id": 52108,
            "vat": true,
            "name": "Standard Rate",
            "tags": [
              null
            ],
            "price": 500000,
            "bookable": true,
            "hotel_id": 70518,
            "provider": "VNTRIP",
            "deal_type": "",
            "extra_bed": 1,
            "meal_plan": "breakfast",
            "net_price": 425000,
            "surcharge": {
              "price": 0
            },
            "commission": 15,
            "is_ta_rate": false,
            "refundable": true,
            "room_count": 5,
            "show_price": 500000,
            "adult_count": 2,
            "avail_token": "d1ededee7e7541aa97593387c669eaaf",
            "cc_required": true,
            "child_count": 1,
            "hotel_price": 425000,
            "show_prices": {
              "promotion": {
                "show": false,
                "order": 1,
                "title": "",
                "end_time": -1,
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "final_price": {
                "show": false,
                "order": 6,
                "title": "Giá cuối",
                "discount_type": "PERCENT",
                "excl_vat_fee_price": 425000,
                "incl_vat_fee_price": 500000,
                "excl_discount_value": 0,
                "incl_discount_value": 0
              },
              "mobile_rate": {
                "show": false,
                "order": 3,
                "title": "MOBILE_RATE",
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "discount_coupon": {
                "show": false,
                "order": 5,
                "title": "",
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "member_discount": {
                "show": false,
                "order": 2,
                "title": "SECRET_DEALS",
                "discount_type": "",
                "discount_value": "",
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              },
              "loyalty_discount": {
                "show": false,
                "order": 4,
                "title": "",
                "discount_type": "",
                "discount_value": 0,
                "excl_vat_fee_price": 0,
                "incl_vat_fee_price": 0
              }
            },
            "total_price": 500000,
            "unit_prices": [
              {
                "day": "20220908",
                "price": 500000,
                "promotion_price": 500000
              }
            ],
            "arrival_date": "20220908",
            "block_prices": [
              {
                "id": "52108_1",
                "price": 500000,
                "origin_price": 500000,
                "promotion_price": 500000
              }
            ],
            "included_VAT": 10,
            "instant_book": true,
            "is_promotion": false,
            "promotion_id": null,
            "pretty_prices": {
              "nights": 1,
              "base_price": 500000,
              "total_price": 500000,
              "checkin_date": "20220908",
              "checkout_date": "20220909",
              "base_net_price": 425000,
              "total_net_price": 425000,
              "base_price_per_room": 500000,
              "number_of_book_room": 1,
              "base_price_per_night": 500000,
              "number_of_room_avail": 5,
              "total_price_per_room": 500000,
              "total_price_per_night": 500000,
              "base_price_per_night_per_room": 500000,
              "total_price_per_night_per_room": 500000,
              "base_net_price_per_night_per_room": 425000,
              "total_net_price_per_night_per_room": 425000
            },
            "departure_date": "20220909",
            "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đặt phòng. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đặt phòng.",
            "extra_bed_price": 0,
            "price_breakdown": {
              "sales_tax": 0,
              "included_fee": true,
              "charges_total": 75000,
              "mandatory_tax": 0,
              "tax_and_service_fee": 75000,
              "price_without_charges": 425000
            },
            "rate_identifier": "OO",
            "vntrip_metadata": {},
            "vntrip_rate_type": "ota_rate",
            "children_free_age": 0,
            "is_payment_online": true,
            "vntrip_markup_vat": 0,
            "is_tms_special_deal": false,
            "raw_cancel_policies": {
              "is_general": true,
              "refundable": true,
              "other_policies": "The guest can cancel free of charge until 3days before arrival. The guest will be charged the total price if they cancel in the 3 days before arrival. If the guest doesn’t show up they will be charged the total price.\nThe guest will be charged a prepayment of the total price in the 3 days before arrival.",
              "cancel_policies": [
                {
                  "type": "BeforeArrival",
                  "Amount": "0",
                  "TimeUnit": "Days",
                  "PenaltyType": "RoomPercent",
                  "UnitTimeMultiplier": "3"
                }
              ],
              "discount_member": {
                "discount_active": false
              }
            },
            "included_service_fee": 5,
            "allow_member_discount": false
          },
          "room_info": {
            "id": 50195,
            "name": "Executive Double/Twin",
            "count": 5,
            "thumb": {
              "order": 2,
              "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
              "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
            },
            "photos": [
              {
                "order": 2,
                "room_image": "https://statics.vntrip.vn/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg",
                "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/70518/img_max/70518_1566554682_6c39cbc81f95f8cba184.jpg"
              }
            ],
            "hotel_id": 70518,
            "provider": "VNTRIP",
            "bed_types": [
              [
                {
                  "type": "Giường cỡ King",
                  "count": "1",
                  "extra": false,
                  "description": ""
                }
              ]
            ],
            "max_adult": 2,
            "min_price": 500000,
            "room_area": "38.0 m2",
            "facilities": "Điều hòa, Giá treo quần áo, Bàn, Bồn tắm, Két sắt, Tường cách âm, Máy sấy, Tủ quần áo, Phòng không hút thuốc, Phòng tắm của khách, Bồn tắm, Áo choàng tắm, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Bồn tắm và vòi sen riêng biệt, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Máy pha trà/ café, Đồng hồ báo thức , Khăn, Dịch vụ báo thức, Đồng hồ báo thức, Hướng thành phố",
            "sort_price": 500000,
            "description": "",
            "max_children": 1,
            "max_extra_bed": 1,
            "extra_bed_info": {
              "adult_age": null,
              "child_age": null,
              "extra_bed_price": 0,
              "same_bed_child_price": 0,
              "extra_bed_child_price": 0,
              "extra_bed_other_policies": "",
              "extra_bed_little_child_price": 0
            },
            "additional_info": null,
            "client_metadata": {
              "request_from": "app_android",
              "customerIpAddress": "118.70.118.215",
              "customerSessionId": "16GuKzV8K1@92YcLg85uR5ku;peVriRZSn!1.UTh, qHGT0xYHSPLyscJP",
              "customerUserAgent": "vntrip.vn/129 ( Android 7.0 )"
            },
            "reformat_bed_types": [
              {
                "bed_data": [
                  {
                    "type": "Giường cỡ King",
                    "count": "1",
                    "description": ""
                  }
                ],
                "group_id": "0"
              }
            ],
            "specific_facilities": {
              "lcd": true,
              "bathtub": true,
              "minibar": true,
              "no_smoking": true,
              "private_pool": false,
              "tv_and_cable": true,
              "air_conditioner": true
            }
          },
          "commission": 15,
          "room_count": 1,
          "median_price": 0,
          "person_count": 2,
          "check_in_date": "20220908",
          "check_out_date": "20220909"
        },
        "rate_base_price": 500000,
        "rate_total_price": 500000,
        "hotel_id": 70518,
        "room_id": 50195,
        "room_name": "Executive Double/Twin",
        "rooms": 1,
        "extra_bed_price": 0,
        "extra_bed": 0,
        "receiver_data": [
          {
            "phone": "344850761",
            "last_name": "Bùi",
            "first_name": "Chiên",
            "country_code": "84"
          }
        ],
        "bed_type_data": {
          "selected_group_id": 0,
          "reformat_bed_types": [
            {
              "bed_data": [
                {
                  "type": "Giường cỡ King",
                  "count": "1",
                  "description": ""
                }
              ],
              "group_id": "0"
            }
          ]
        },
        "resident_data": [
          null
        ],
        "total_extra_rate_price": 0,
        "show_prices": {
          "promotion": {
            "show": false,
            "order": 1,
            "title": "",
            "end_time": -1,
            "discount_type": "",
            "discount_value": "",
            "excl_vat_fee_price": 0,
            "incl_vat_fee_price": 0
          },
          "final_price": {
            "show": false,
            "order": 6,
            "title": "Giá cuối",
            "discount_type": "PERCENT",
            "excl_vat_fee_price": 425000,
            "incl_vat_fee_price": 500000,
            "excl_discount_value": 0,
            "incl_discount_value": 0
          },
          "mobile_rate": {
            "show": false,
            "order": 3,
            "title": "MOBILE_RATE",
            "discount_type": "",
            "discount_value": "",
            "excl_vat_fee_price": 0,
            "incl_vat_fee_price": 0
          },
          "discount_coupon": {
            "show": false,
            "order": 5,
            "title": "",
            "discount_type": "",
            "discount_value": "",
            "excl_vat_fee_price": 0,
            "incl_vat_fee_price": 0
          },
          "member_discount": {
            "show": false,
            "order": 2,
            "title": "SECRET_DEALS",
            "discount_type": "",
            "discount_value": "",
            "excl_vat_fee_price": 0,
            "incl_vat_fee_price": 0
          },
          "loyalty_discount": {
            "show": false,
            "order": 4,
            "title": "",
            "discount_type": "",
            "discount_value": 0,
            "excl_vat_fee_price": 0,
            "incl_vat_fee_price": 0
          }
        }
      }
    ],
    "flight": null,
    "combo": null,
    "loyalty_redeem_info": null,
    "loyalty_cashback_info": null,
    "coupon_info": null,
    "validations": {
      "loyalty_redeem_info": null,
      "coupon_info": null
    },
    "from_date": "20220908",
    "to_date": "20220909",
    "bonus_cashback": {
      "coupon_cashback": null,
      "allow_cashback": true,
      "allow_redeem": true,
      "bonus_id": null,
      "campaign_id": null,
      "campaign_type": null
    },
    "prices": {
      "total_price": 500000,
      "final_discount_value": 0,
      "final_price": 500000,
      "coupon_price": 0,
      "hotel_item_total_price": 500000,
      "flight_item_total_price": 0,
      "addons_price": 0,
      "loyalty_benefit_price": 0,
      "vat": 0,
      "loyalty_redeem_price": 0,
      "payment_fee": 0
    },
    "total_price": 500000,
    "final_discount_value": 0,
    "final_price": 500000,
    "coupon_price": 0,
    "hotel_item_total_price": 500000,
    "flight_item_total_price": 0,
    "addons_price": 0,
    "loyalty_benefit_price": 0,
    "vat": 0,
    "loyalty_redeem_price": 0,
    "payment_fee": 0,
    "reward_amount": 0,
    "order_id": null,
    "order_code": null,
    "order_status": null,
    "bank_code": null,
    "order_pdf_link": null
  }
}
*/

  String? status;
  String? message;
  ResponseBookingHotelData? data;

  ResponseBookingHotel({
    this.status,
    this.message,
    this.data,
  });
  ResponseBookingHotel.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toString();
    message = json['message']?.toString();
    data = (json['data'] != null) ? ResponseBookingHotelData.fromJson(json['data']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (data != null) {
      data['data'] = this.data!.toJson();
    }
    return data;
  }
}
