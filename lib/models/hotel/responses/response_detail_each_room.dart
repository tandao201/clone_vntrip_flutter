///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class ResponseDetailEachRoomDataRoomDataThumb {
/*
{
  "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
  "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
  "order": 0
}
*/

  String? roomImage;
  String? thumbImage;
  int? order;

  ResponseDetailEachRoomDataRoomDataThumb({
    this.roomImage,
    this.thumbImage,
    this.order,
  });
  ResponseDetailEachRoomDataRoomDataThumb.fromJson(Map<String, dynamic> json) {
    roomImage = json['room_image']?.toString();
    thumbImage = json['thumb_image']?.toString();
    order = json['order']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['room_image'] = roomImage;
    data['thumb_image'] = thumbImage;
    data['order'] = order;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataPhotos {
/*
{
  "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
  "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
  "order": 0
}
*/

  String? roomImage;
  String? thumbImage;
  int? order;

  ResponseDetailEachRoomDataRoomDataPhotos({
    this.roomImage,
    this.thumbImage,
    this.order,
  });
  ResponseDetailEachRoomDataRoomDataPhotos.fromJson(Map<String, dynamic> json) {
    roomImage = json['room_image']?.toString();
    thumbImage = json['thumb_image']?.toString();
    order = json['order']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['room_image'] = roomImage;
    data['thumb_image'] = thumbImage;
    data['order'] = order;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataExtraBedInfo {
/*
{
  "child_age": 5,
  "adult_age": 11,
  "same_bed_child_price": 0,
  "extra_bed_little_child_price": 0,
  "extra_bed_child_price": 50000,
  "extra_bed_price": 100000,
  "extra_bed_other_policies": "Đệm phụ"
}
*/

  int? childAge;
  int? adultAge;
  int? sameBedChildPrice;
  int? extraBedLittleChildPrice;
  int? extraBedChildPrice;
  int? extraBedPrice;
  String? extraBedOtherPolicies;

  ResponseDetailEachRoomDataRoomDataExtraBedInfo({
    this.childAge,
    this.adultAge,
    this.sameBedChildPrice,
    this.extraBedLittleChildPrice,
    this.extraBedChildPrice,
    this.extraBedPrice,
    this.extraBedOtherPolicies,
  });
  ResponseDetailEachRoomDataRoomDataExtraBedInfo.fromJson(Map<String, dynamic> json) {
    childAge = json['child_age']?.toInt();
    adultAge = json['adult_age']?.toInt();
    sameBedChildPrice = json['same_bed_child_price']?.toInt();
    extraBedLittleChildPrice = json['extra_bed_little_child_price']?.toInt();
    extraBedChildPrice = json['extra_bed_child_price']?.toInt();
    extraBedPrice = json['extra_bed_price']?.toInt();
    extraBedOtherPolicies = json['extra_bed_other_policies']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['child_age'] = childAge;
    data['adult_age'] = adultAge;
    data['same_bed_child_price'] = sameBedChildPrice;
    data['extra_bed_little_child_price'] = extraBedLittleChildPrice;
    data['extra_bed_child_price'] = extraBedChildPrice;
    data['extra_bed_price'] = extraBedPrice;
    data['extra_bed_other_policies'] = extraBedOtherPolicies;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataReformatBedTypesBedData {
/*
{
  "count": "1",
  "type": "Giường cỡ King",
  "description": ""
}
*/

  String? count;
  String? type;
  String? description;

  ResponseDetailEachRoomDataRoomDataReformatBedTypesBedData({
    this.count,
    this.type,
    this.description,
  });
  ResponseDetailEachRoomDataRoomDataReformatBedTypesBedData.fromJson(Map<String, dynamic> json) {
    count = json['count']?.toString();
    type = json['type']?.toString();
    description = json['description']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['count'] = count;
    data['type'] = type;
    data['description'] = description;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataReformatBedTypes {
/*
{
  "group_id": "0",
  "bed_data": [
    {
      "count": "1",
      "type": "Giường cỡ King",
      "description": ""
    }
  ]
}
*/

  String? groupId;
  List<ResponseDetailEachRoomDataRoomDataReformatBedTypesBedData?>? bedData;

  ResponseDetailEachRoomDataRoomDataReformatBedTypes({
    this.groupId,
    this.bedData,
  });
  ResponseDetailEachRoomDataRoomDataReformatBedTypes.fromJson(Map<String, dynamic> json) {
    groupId = json['group_id']?.toString();
    if (json['bed_data'] != null) {
      final v = json['bed_data'];
      final arr0 = <ResponseDetailEachRoomDataRoomDataReformatBedTypesBedData>[];
      v.forEach((v) {
        arr0.add(ResponseDetailEachRoomDataRoomDataReformatBedTypesBedData.fromJson(v));
      });
      bedData = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['group_id'] = groupId;
    if (bedData != null) {
      final v = bedData;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['bed_data'] = arr0;
    }
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataBedTypes {
/*
{
  "extra": false,
  "count": "1",
  "type": "Giường cỡ King",
  "description": ""
}
*/

  bool? extra;
  String? count;
  String? type;
  String? description;

  ResponseDetailEachRoomDataRoomDataBedTypes({
    this.extra,
    this.count,
    this.type,
    this.description,
  });
  ResponseDetailEachRoomDataRoomDataBedTypes.fromJson(Map<String, dynamic> json) {
    extra = json['extra'];
    count = json['count']?.toString();
    type = json['type']?.toString();
    description = json['description']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['extra'] = extra;
    data['count'] = count;
    data['type'] = type;
    data['description'] = description;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataSpecificFacilities {
/*
{
  "air_conditioner": true,
  "no_smoking": false,
  "private_pool": false,
  "bathtub": false,
  "tv_and_cable": true,
  "lcd": true,
  "minibar": true
}
*/

  bool? airConditioner;
  bool? noSmoking;
  bool? privatePool;
  bool? bathtub;
  bool? tvAndCable;
  bool? lcd;
  bool? minibar;

  ResponseDetailEachRoomDataRoomDataSpecificFacilities({
    this.airConditioner,
    this.noSmoking,
    this.privatePool,
    this.bathtub,
    this.tvAndCable,
    this.lcd,
    this.minibar,
  });
  ResponseDetailEachRoomDataRoomDataSpecificFacilities.fromJson(Map<String, dynamic> json) {
    airConditioner = json['air_conditioner'];
    noSmoking = json['no_smoking'];
    privatePool = json['private_pool'];
    bathtub = json['bathtub'];
    tvAndCable = json['tv_and_cable'];
    lcd = json['lcd'];
    minibar = json['minibar'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['air_conditioner'] = airConditioner;
    data['no_smoking'] = noSmoking;
    data['private_pool'] = privatePool;
    data['bathtub'] = bathtub;
    data['tv_and_cable'] = tvAndCable;
    data['lcd'] = lcd;
    data['minibar'] = minibar;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesShowPricesFinalPrice {
/*
{
  "title": "Giá cuối",
  "discount_type": "PERCENT",
  "incl_discount_value": 0,
  "excl_discount_value": 0,
  "incl_vat_fee_price": 600000,
  "excl_vat_fee_price": 570000,
  "order": 6,
  "show": false
}
*/

  String? title;
  String? discountType;
  int? inclDiscountValue;
  int? exclDiscountValue;
  int? inclVatFeePrice;
  int? exclVatFeePrice;
  int? order;
  bool? theShow;

  ResponseDetailEachRoomDataRoomDataRatesShowPricesFinalPrice({
    this.title,
    this.discountType,
    this.inclDiscountValue,
    this.exclDiscountValue,
    this.inclVatFeePrice,
    this.exclVatFeePrice,
    this.order,
    this.theShow,
  });
  ResponseDetailEachRoomDataRoomDataRatesShowPricesFinalPrice.fromJson(Map<String, dynamic> json) {
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    inclDiscountValue = json['incl_discount_value']?.toInt();
    exclDiscountValue = json['excl_discount_value']?.toInt();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    order = json['order']?.toInt();
    theShow = json['show'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['discount_type'] = discountType;
    data['incl_discount_value'] = inclDiscountValue;
    data['excl_discount_value'] = exclDiscountValue;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['order'] = order;
    data['show'] = theShow;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesShowPricesDiscountCoupon {
/*
{
  "title": "",
  "discount_type": "",
  "discount_value": "",
  "incl_vat_fee_price": 0,
  "excl_vat_fee_price": 0,
  "order": 5,
  "show": false
}
*/

  String? title;
  String? discountType;
  String? discountValue;
  int? inclVatFeePrice;
  int? exclVatFeePrice;
  int? order;
  bool? theShow;

  ResponseDetailEachRoomDataRoomDataRatesShowPricesDiscountCoupon({
    this.title,
    this.discountType,
    this.discountValue,
    this.inclVatFeePrice,
    this.exclVatFeePrice,
    this.order,
    this.theShow,
  });
  ResponseDetailEachRoomDataRoomDataRatesShowPricesDiscountCoupon.fromJson(Map<String, dynamic> json) {
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    order = json['order']?.toInt();
    theShow = json['show'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['order'] = order;
    data['show'] = theShow;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesShowPricesLoyaltyDiscount {
/*
{
  "title": "",
  "discount_type": "",
  "discount_value": "",
  "incl_vat_fee_price": 0,
  "excl_vat_fee_price": 0,
  "order": 4,
  "show": false
}
*/

  String? title;
  String? discountType;
  String? discountValue;
  int? inclVatFeePrice;
  int? exclVatFeePrice;
  int? order;
  bool? theShow;

  ResponseDetailEachRoomDataRoomDataRatesShowPricesLoyaltyDiscount({
    this.title,
    this.discountType,
    this.discountValue,
    this.inclVatFeePrice,
    this.exclVatFeePrice,
    this.order,
    this.theShow,
  });
  ResponseDetailEachRoomDataRoomDataRatesShowPricesLoyaltyDiscount.fromJson(Map<String, dynamic> json) {
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    order = json['order']?.toInt();
    theShow = json['show'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['order'] = order;
    data['show'] = theShow;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesShowPricesMobileRate {
/*
{
  "title": "MOBILE_RATE",
  "discount_type": "",
  "discount_value": "",
  "incl_vat_fee_price": 0,
  "excl_vat_fee_price": 0,
  "order": 3,
  "show": false
}
*/

  String? title;
  String? discountType;
  String? discountValue;
  int? inclVatFeePrice;
  int? exclVatFeePrice;
  int? order;
  bool? theShow;

  ResponseDetailEachRoomDataRoomDataRatesShowPricesMobileRate({
    this.title,
    this.discountType,
    this.discountValue,
    this.inclVatFeePrice,
    this.exclVatFeePrice,
    this.order,
    this.theShow,
  });
  ResponseDetailEachRoomDataRoomDataRatesShowPricesMobileRate.fromJson(Map<String, dynamic> json) {
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    order = json['order']?.toInt();
    theShow = json['show'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['order'] = order;
    data['show'] = theShow;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesShowPricesMemberDiscount {
/*
{
  "title": "SECRET_DEALS",
  "discount_type": "",
  "discount_value": "",
  "incl_vat_fee_price": 0,
  "excl_vat_fee_price": 0,
  "order": 2,
  "show": false
}
*/

  String? title;
  String? discountType;
  String? discountValue;
  int? inclVatFeePrice;
  int? exclVatFeePrice;
  int? order;
  bool? theShow;

  ResponseDetailEachRoomDataRoomDataRatesShowPricesMemberDiscount({
    this.title,
    this.discountType,
    this.discountValue,
    this.inclVatFeePrice,
    this.exclVatFeePrice,
    this.order,
    this.theShow,
  });
  ResponseDetailEachRoomDataRoomDataRatesShowPricesMemberDiscount.fromJson(Map<String, dynamic> json) {
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    order = json['order']?.toInt();
    theShow = json['show'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['order'] = order;
    data['show'] = theShow;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesShowPricesPromotion {
/*
{
  "title": "",
  "discount_type": "",
  "discount_value": "",
  "incl_vat_fee_price": 0,
  "excl_vat_fee_price": 0,
  "order": 1,
  "end_time": -1,
  "show": false
}
*/

  String? title;
  String? discountType;
  String? discountValue;
  int? inclVatFeePrice;
  int? exclVatFeePrice;
  int? order;
  int? endTime;
  bool? theShow;

  ResponseDetailEachRoomDataRoomDataRatesShowPricesPromotion({
    this.title,
    this.discountType,
    this.discountValue,
    this.inclVatFeePrice,
    this.exclVatFeePrice,
    this.order,
    this.endTime,
    this.theShow,
  });
  ResponseDetailEachRoomDataRoomDataRatesShowPricesPromotion.fromJson(Map<String, dynamic> json) {
    title = json['title']?.toString();
    discountType = json['discount_type']?.toString();
    discountValue = json['discount_value']?.toString();
    inclVatFeePrice = json['incl_vat_fee_price']?.toInt();
    exclVatFeePrice = json['excl_vat_fee_price']?.toInt();
    order = json['order']?.toInt();
    endTime = json['end_time']?.toInt();
    theShow = json['show'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['title'] = title;
    data['discount_type'] = discountType;
    data['discount_value'] = discountValue;
    data['incl_vat_fee_price'] = inclVatFeePrice;
    data['excl_vat_fee_price'] = exclVatFeePrice;
    data['order'] = order;
    data['end_time'] = endTime;
    data['show'] = theShow;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesShowPrices {
/*
{
  "promotion": {
    "title": "",
    "discount_type": "",
    "discount_value": "",
    "incl_vat_fee_price": 0,
    "excl_vat_fee_price": 0,
    "order": 1,
    "end_time": -1,
    "show": false
  },
  "member_discount": {
    "title": "SECRET_DEALS",
    "discount_type": "",
    "discount_value": "",
    "incl_vat_fee_price": 0,
    "excl_vat_fee_price": 0,
    "order": 2,
    "show": false
  },
  "mobile_rate": {
    "title": "MOBILE_RATE",
    "discount_type": "",
    "discount_value": "",
    "incl_vat_fee_price": 0,
    "excl_vat_fee_price": 0,
    "order": 3,
    "show": false
  },
  "loyalty_discount": {
    "title": "",
    "discount_type": "",
    "discount_value": "",
    "incl_vat_fee_price": 0,
    "excl_vat_fee_price": 0,
    "order": 4,
    "show": false
  },
  "discount_coupon": {
    "title": "",
    "discount_type": "",
    "discount_value": "",
    "incl_vat_fee_price": 0,
    "excl_vat_fee_price": 0,
    "order": 5,
    "show": false
  },
  "final_price": {
    "title": "Giá cuối",
    "discount_type": "PERCENT",
    "incl_discount_value": 0,
    "excl_discount_value": 0,
    "incl_vat_fee_price": 600000,
    "excl_vat_fee_price": 570000,
    "order": 6,
    "show": false
  }
}
*/

  ResponseDetailEachRoomDataRoomDataRatesShowPricesPromotion? promotion;
  ResponseDetailEachRoomDataRoomDataRatesShowPricesMemberDiscount? memberDiscount;
  ResponseDetailEachRoomDataRoomDataRatesShowPricesMobileRate? mobileRate;
  ResponseDetailEachRoomDataRoomDataRatesShowPricesLoyaltyDiscount? loyaltyDiscount;
  ResponseDetailEachRoomDataRoomDataRatesShowPricesDiscountCoupon? discountCoupon;
  ResponseDetailEachRoomDataRoomDataRatesShowPricesFinalPrice? finalPrice;

  ResponseDetailEachRoomDataRoomDataRatesShowPrices({
    this.promotion,
    this.memberDiscount,
    this.mobileRate,
    this.loyaltyDiscount,
    this.discountCoupon,
    this.finalPrice,
  });
  ResponseDetailEachRoomDataRoomDataRatesShowPrices.fromJson(Map<String, dynamic> json) {
    promotion = (json['promotion'] != null) ? ResponseDetailEachRoomDataRoomDataRatesShowPricesPromotion.fromJson(json['promotion']) : null;
    memberDiscount = (json['member_discount'] != null) ? ResponseDetailEachRoomDataRoomDataRatesShowPricesMemberDiscount.fromJson(json['member_discount']) : null;
    mobileRate = (json['mobile_rate'] != null) ? ResponseDetailEachRoomDataRoomDataRatesShowPricesMobileRate.fromJson(json['mobile_rate']) : null;
    loyaltyDiscount = (json['loyalty_discount'] != null) ? ResponseDetailEachRoomDataRoomDataRatesShowPricesLoyaltyDiscount.fromJson(json['loyalty_discount']) : null;
    discountCoupon = (json['discount_coupon'] != null) ? ResponseDetailEachRoomDataRoomDataRatesShowPricesDiscountCoupon.fromJson(json['discount_coupon']) : null;
    finalPrice = (json['final_price'] != null) ? ResponseDetailEachRoomDataRoomDataRatesShowPricesFinalPrice.fromJson(json['final_price']) : null;
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (promotion != null) {
      data['promotion'] = promotion!.toJson();
    }
    if (memberDiscount != null) {
      data['member_discount'] = memberDiscount!.toJson();
    }
    if (mobileRate != null) {
      data['mobile_rate'] = mobileRate!.toJson();
    }
    if (loyaltyDiscount != null) {
      data['loyalty_discount'] = loyaltyDiscount!.toJson();
    }
    if (discountCoupon != null) {
      data['discount_coupon'] = discountCoupon!.toJson();
    }
    if (finalPrice != null) {
      data['final_price'] = finalPrice!.toJson();
    }
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesPriceBreakdown {
/*
{
  "price_without_charges": 570000,
  "charges_total": 30000,
  "tax_and_service_fee": 30000,
  "sales_tax": 0,
  "mandatory_tax": 0,
  "included_fee": true
}
*/

  int? priceWithoutCharges;
  int? chargesTotal;
  int? taxAndServiceFee;
  int? salesTax;
  int? mandatoryTax;
  bool? includedFee;

  ResponseDetailEachRoomDataRoomDataRatesPriceBreakdown({
    this.priceWithoutCharges,
    this.chargesTotal,
    this.taxAndServiceFee,
    this.salesTax,
    this.mandatoryTax,
    this.includedFee,
  });
  ResponseDetailEachRoomDataRoomDataRatesPriceBreakdown.fromJson(Map<String, dynamic> json) {
    priceWithoutCharges = json['price_without_charges']?.toInt();
    chargesTotal = json['charges_total']?.toInt();
    taxAndServiceFee = json['tax_and_service_fee']?.toInt();
    salesTax = json['sales_tax']?.toInt();
    mandatoryTax = json['mandatory_tax']?.toInt();
    includedFee = json['included_fee'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['price_without_charges'] = priceWithoutCharges;
    data['charges_total'] = chargesTotal;
    data['tax_and_service_fee'] = taxAndServiceFee;
    data['sales_tax'] = salesTax;
    data['mandatory_tax'] = mandatoryTax;
    data['included_fee'] = includedFee;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesSurcharge {
/*
{
  "price": 0
}
*/

  int? price;

  ResponseDetailEachRoomDataRoomDataRatesSurcharge({
    this.price,
  });
  ResponseDetailEachRoomDataRoomDataRatesSurcharge.fromJson(Map<String, dynamic> json) {
    price = json['price']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['price'] = price;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRatesPrettyPrices {
/*
{
  "base_net_price": 570000,
  "total_net_price": 570000,
  "base_net_price_per_night_per_room": 570000,
  "total_net_price_per_night_per_room": 570000,
  "base_price": 600000,
  "base_price_per_night": 600000,
  "base_price_per_night_per_room": 600000,
  "base_price_per_room": 600000,
  "total_price": 600000,
  "total_price_per_night": 600000,
  "total_price_per_night_per_room": 600000,
  "total_price_per_room": 600000,
  "checkin_date": "20220829",
  "nights": 1,
  "number_of_book_room": 1,
  "number_of_room_avail": 5,
  "checkout_date": "20220830"
}
*/

  int? baseNetPrice;
  int? totalNetPrice;
  int? baseNetPricePerNightPerRoom;
  int? totalNetPricePerNightPerRoom;
  int? basePrice;
  int? basePricePerNight;
  int? basePricePerNightPerRoom;
  int? basePricePerRoom;
  int? totalPrice;
  int? totalPricePerNight;
  int? totalPricePerNightPerRoom;
  int? totalPricePerRoom;
  String? checkinDate;
  int? nights;
  int? numberOfBookRoom;
  int? numberOfRoomAvail;
  String? checkoutDate;

  ResponseDetailEachRoomDataRoomDataRatesPrettyPrices({
    this.baseNetPrice,
    this.totalNetPrice,
    this.baseNetPricePerNightPerRoom,
    this.totalNetPricePerNightPerRoom,
    this.basePrice,
    this.basePricePerNight,
    this.basePricePerNightPerRoom,
    this.basePricePerRoom,
    this.totalPrice,
    this.totalPricePerNight,
    this.totalPricePerNightPerRoom,
    this.totalPricePerRoom,
    this.checkinDate,
    this.nights,
    this.numberOfBookRoom,
    this.numberOfRoomAvail,
    this.checkoutDate,
  });
  ResponseDetailEachRoomDataRoomDataRatesPrettyPrices.fromJson(Map<String, dynamic> json) {
    baseNetPrice = json['base_net_price']?.toInt();
    totalNetPrice = json['total_net_price']?.toInt();
    baseNetPricePerNightPerRoom = json['base_net_price_per_night_per_room']?.toInt();
    totalNetPricePerNightPerRoom = json['total_net_price_per_night_per_room']?.toInt();
    basePrice = json['base_price']?.toInt();
    basePricePerNight = json['base_price_per_night']?.toInt();
    basePricePerNightPerRoom = json['base_price_per_night_per_room']?.toInt();
    basePricePerRoom = json['base_price_per_room']?.toInt();
    totalPrice = json['total_price']?.toInt();
    totalPricePerNight = json['total_price_per_night']?.toInt();
    totalPricePerNightPerRoom = json['total_price_per_night_per_room']?.toInt();
    totalPricePerRoom = json['total_price_per_room']?.toInt();
    checkinDate = json['checkin_date']?.toString();
    nights = json['nights']?.toInt();
    numberOfBookRoom = json['number_of_book_room']?.toInt();
    numberOfRoomAvail = json['number_of_room_avail']?.toInt();
    checkoutDate = json['checkout_date']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['base_net_price'] = baseNetPrice;
    data['total_net_price'] = totalNetPrice;
    data['base_net_price_per_night_per_room'] = baseNetPricePerNightPerRoom;
    data['total_net_price_per_night_per_room'] = totalNetPricePerNightPerRoom;
    data['base_price'] = basePrice;
    data['base_price_per_night'] = basePricePerNight;
    data['base_price_per_night_per_room'] = basePricePerNightPerRoom;
    data['base_price_per_room'] = basePricePerRoom;
    data['total_price'] = totalPrice;
    data['total_price_per_night'] = totalPricePerNight;
    data['total_price_per_night_per_room'] = totalPricePerNightPerRoom;
    data['total_price_per_room'] = totalPricePerRoom;
    data['checkin_date'] = checkinDate;
    data['nights'] = nights;
    data['number_of_book_room'] = numberOfBookRoom;
    data['number_of_room_avail'] = numberOfRoomAvail;
    data['checkout_date'] = checkoutDate;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomDataRates {
/*
{
  "deal_type": "",
  "pretty_prices": {
    "base_net_price": 570000,
    "total_net_price": 570000,
    "base_net_price_per_night_per_room": 570000,
    "total_net_price_per_night_per_room": 570000,
    "base_price": 600000,
    "base_price_per_night": 600000,
    "base_price_per_night_per_room": 600000,
    "base_price_per_room": 600000,
    "total_price": 600000,
    "total_price_per_night": 600000,
    "total_price_per_night_per_room": 600000,
    "total_price_per_room": 600000,
    "checkin_date": "20220829",
    "nights": 1,
    "number_of_book_room": 1,
    "number_of_room_avail": 5,
    "checkout_date": "20220830"
  },
  "refundable": true,
  "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên.",
  "vntrip_rate_type": "ota_rate",
  "rate_identifier": "OO",
  "instant_book": true,
  "extra_bed_price": 100000,
  "departure_date": "20220830",
  "price": 600000,
  "hotel_id": 439,
  "room_count": 5,
  "promotion_id": null,
  "id": 26086,
  "arrival_date": "20220829",
  "total_price": 600000,
  "name": "No breakfast",
  "meal_plan": "no_meal",
  "child_count": 1,
  "adult_count": 2,
  "surcharge": {
    "price": 0
  },
  "extra_bed": 0,
  "show_price": 600000,
  "net_price": 570000,
  "provider": "VNTRIP",
  "is_payment_online": true,
  "cc_required": true,
  "children_free_age": 5,
  "included_VAT": 0,
  "included_service_fee": 5,
  "is_ta_rate": false,
  "bookable": true,
  "allow_member_discount": false,
  "is_promotion": false,
  "vntrip_markup_vat": 0,
  "tags": [
    null
  ],
  "price_breakdown": {
    "price_without_charges": 570000,
    "charges_total": 30000,
    "tax_and_service_fee": 30000,
    "sales_tax": 0,
    "mandatory_tax": 0,
    "included_fee": true
  },
  "vat": false,
  "avail_token": "32b815efeafa45debc27edc67d1a1017",
  "show_prices": {
    "promotion": {
      "title": "",
      "discount_type": "",
      "discount_value": "",
      "incl_vat_fee_price": 0,
      "excl_vat_fee_price": 0,
      "order": 1,
      "end_time": -1,
      "show": false
    },
    "member_discount": {
      "title": "SECRET_DEALS",
      "discount_type": "",
      "discount_value": "",
      "incl_vat_fee_price": 0,
      "excl_vat_fee_price": 0,
      "order": 2,
      "show": false
    },
    "mobile_rate": {
      "title": "MOBILE_RATE",
      "discount_type": "",
      "discount_value": "",
      "incl_vat_fee_price": 0,
      "excl_vat_fee_price": 0,
      "order": 3,
      "show": false
    },
    "loyalty_discount": {
      "title": "",
      "discount_type": "",
      "discount_value": "",
      "incl_vat_fee_price": 0,
      "excl_vat_fee_price": 0,
      "order": 4,
      "show": false
    },
    "discount_coupon": {
      "title": "",
      "discount_type": "",
      "discount_value": "",
      "incl_vat_fee_price": 0,
      "excl_vat_fee_price": 0,
      "order": 5,
      "show": false
    },
    "final_price": {
      "title": "Giá cuối",
      "discount_type": "PERCENT",
      "incl_discount_value": 0,
      "excl_discount_value": 0,
      "incl_vat_fee_price": 600000,
      "excl_vat_fee_price": 570000,
      "order": 6,
      "show": false
    }
  },
  "is_tms_special_deal": false
}
*/

  String? dealType;
  ResponseDetailEachRoomDataRoomDataRatesPrettyPrices? prettyPrices;
  bool? refundable;
  String? cancelPolicies;
  String? vntripRateType;
  String? rateIdentifier;
  bool? instantBook;
  int? extraBedPrice;
  String? departureDate;
  int? price;
  int? hotelId;
  int? roomCount;
  String? promotionId;
  int? id;
  String? arrivalDate;
  int? totalPrice;
  String? name;
  String? mealPlan;
  int? childCount;
  int? adultCount;
  ResponseDetailEachRoomDataRoomDataRatesSurcharge? surcharge;
  int? extraBed;
  int? showPrice;
  int? netPrice;
  String? provider;
  bool? isPaymentOnline;
  bool? ccRequired;
  int? childrenFreeAge;
  int? includedVAT;
  int? includedServiceFee;
  bool? isTaRate;
  bool? bookable;
  bool? allowMemberDiscount;
  bool? isPromotion;
  int? vntripMarkupVat;
  List<String?>? tags;
  ResponseDetailEachRoomDataRoomDataRatesPriceBreakdown? priceBreakdown;
  bool? vat;
  String? availToken;
  ResponseDetailEachRoomDataRoomDataRatesShowPrices? showPrices;
  bool? isTmsSpecialDeal;

  ResponseDetailEachRoomDataRoomDataRates({
    this.dealType,
    this.prettyPrices,
    this.refundable,
    this.cancelPolicies,
    this.vntripRateType,
    this.rateIdentifier,
    this.instantBook,
    this.extraBedPrice,
    this.departureDate,
    this.price,
    this.hotelId,
    this.roomCount,
    this.promotionId,
    this.id,
    this.arrivalDate,
    this.totalPrice,
    this.name,
    this.mealPlan,
    this.childCount,
    this.adultCount,
    this.surcharge,
    this.extraBed,
    this.showPrice,
    this.netPrice,
    this.provider,
    this.isPaymentOnline,
    this.ccRequired,
    this.childrenFreeAge,
    this.includedVAT,
    this.includedServiceFee,
    this.isTaRate,
    this.bookable,
    this.allowMemberDiscount,
    this.isPromotion,
    this.vntripMarkupVat,
    this.tags,
    this.priceBreakdown,
    this.vat,
    this.availToken,
    this.showPrices,
    this.isTmsSpecialDeal,
  });
  ResponseDetailEachRoomDataRoomDataRates.fromJson(Map<String, dynamic> json) {
    dealType = json['deal_type']?.toString();
    prettyPrices = (json['pretty_prices'] != null) ? ResponseDetailEachRoomDataRoomDataRatesPrettyPrices.fromJson(json['pretty_prices']) : null;
    refundable = json['refundable'];
    cancelPolicies = json['cancel_policies']?.toString();
    vntripRateType = json['vntrip_rate_type']?.toString();
    rateIdentifier = json['rate_identifier']?.toString();
    instantBook = json['instant_book'];
    extraBedPrice = json['extra_bed_price']?.toInt();
    departureDate = json['departure_date']?.toString();
    price = json['price']?.toInt();
    hotelId = json['hotel_id']?.toInt();
    roomCount = json['room_count']?.toInt();
    promotionId = json['promotion_id']?.toString();
    id = json['id']?.toInt();
    arrivalDate = json['arrival_date']?.toString();
    totalPrice = json['total_price']?.toInt();
    name = json['name']?.toString();
    mealPlan = json['meal_plan']?.toString();
    childCount = json['child_count']?.toInt();
    adultCount = json['adult_count']?.toInt();
    surcharge = (json['surcharge'] != null) ? ResponseDetailEachRoomDataRoomDataRatesSurcharge.fromJson(json['surcharge']) : null;
    extraBed = json['extra_bed']?.toInt();
    showPrice = json['show_price']?.toInt();
    netPrice = json['net_price']?.toInt();
    provider = json['provider']?.toString();
    isPaymentOnline = json['is_payment_online'];
    ccRequired = json['cc_required'];
    childrenFreeAge = json['children_free_age']?.toInt();
    includedVAT = json['included_VAT']?.toInt();
    includedServiceFee = json['included_service_fee']?.toInt();
    isTaRate = json['is_ta_rate'];
    bookable = json['bookable'];
    allowMemberDiscount = json['allow_member_discount'];
    isPromotion = json['is_promotion'];
    vntripMarkupVat = json['vntrip_markup_vat']?.toInt();
    priceBreakdown = (json['price_breakdown'] != null) ? ResponseDetailEachRoomDataRoomDataRatesPriceBreakdown.fromJson(json['price_breakdown']) : null;
    vat = json['vat'];
    availToken = json['avail_token']?.toString();
    showPrices = (json['show_prices'] != null) ? ResponseDetailEachRoomDataRoomDataRatesShowPrices.fromJson(json['show_prices']) : null;
    isTmsSpecialDeal = json['is_tms_special_deal'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['deal_type'] = dealType;
    if (prettyPrices != null) {
      data['pretty_prices'] = prettyPrices!.toJson();
    }
    data['refundable'] = refundable;
    data['cancel_policies'] = cancelPolicies;
    data['vntrip_rate_type'] = vntripRateType;
    data['rate_identifier'] = rateIdentifier;
    data['instant_book'] = instantBook;
    data['extra_bed_price'] = extraBedPrice;
    data['departure_date'] = departureDate;
    data['price'] = price;
    data['hotel_id'] = hotelId;
    data['room_count'] = roomCount;
    data['promotion_id'] = promotionId;
    data['id'] = id;
    data['arrival_date'] = arrivalDate;
    data['total_price'] = totalPrice;
    data['name'] = name;
    data['meal_plan'] = mealPlan;
    data['child_count'] = childCount;
    data['adult_count'] = adultCount;
    if (surcharge != null) {
      data['surcharge'] = surcharge!.toJson();
    }
    data['extra_bed'] = extraBed;
    data['show_price'] = showPrice;
    data['net_price'] = netPrice;
    data['provider'] = provider;
    data['is_payment_online'] = isPaymentOnline;
    data['cc_required'] = ccRequired;
    data['children_free_age'] = childrenFreeAge;
    data['included_VAT'] = includedVAT;
    data['included_service_fee'] = includedServiceFee;
    data['is_ta_rate'] = isTaRate;
    data['bookable'] = bookable;
    data['allow_member_discount'] = allowMemberDiscount;
    data['is_promotion'] = isPromotion;
    data['vntrip_markup_vat'] = vntripMarkupVat;
    if (priceBreakdown != null) {
    data['price_breakdown'] = priceBreakdown!.toJson();
    }
    data['vat'] = vat;
    data['avail_token'] = availToken;
    if (showPrices != null) {
    data['show_prices'] = showPrices!.toJson();
    }
    data['is_tms_special_deal'] = isTmsSpecialDeal;
    return data;
  }
}

class ResponseDetailEachRoomDataRoomData {
/*
{
  "id": 35721,
  "name": "Superior double room",
  "max_adult": 2,
  "max_children": 1,
  "count": 5,
  "rates": [
    {
      "deal_type": "",
      "pretty_prices": {
        "base_net_price": 570000,
        "total_net_price": 570000,
        "base_net_price_per_night_per_room": 570000,
        "total_net_price_per_night_per_room": 570000,
        "base_price": 600000,
        "base_price_per_night": 600000,
        "base_price_per_night_per_room": 600000,
        "base_price_per_room": 600000,
        "total_price": 600000,
        "total_price_per_night": 600000,
        "total_price_per_night_per_room": 600000,
        "total_price_per_room": 600000,
        "checkin_date": "20220829",
        "nights": 1,
        "number_of_book_room": 1,
        "number_of_room_avail": 5,
        "checkout_date": "20220830"
      },
      "refundable": true,
      "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên.",
      "vntrip_rate_type": "ota_rate",
      "rate_identifier": "OO",
      "instant_book": true,
      "extra_bed_price": 100000,
      "departure_date": "20220830",
      "price": 600000,
      "hotel_id": 439,
      "room_count": 5,
      "promotion_id": null,
      "id": 26086,
      "arrival_date": "20220829",
      "total_price": 600000,
      "name": "No breakfast",
      "meal_plan": "no_meal",
      "child_count": 1,
      "adult_count": 2,
      "surcharge": {
        "price": 0
      },
      "extra_bed": 0,
      "show_price": 600000,
      "net_price": 570000,
      "provider": "VNTRIP",
      "is_payment_online": true,
      "cc_required": true,
      "children_free_age": 5,
      "included_VAT": 0,
      "included_service_fee": 5,
      "is_ta_rate": false,
      "bookable": true,
      "allow_member_discount": false,
      "is_promotion": false,
      "vntrip_markup_vat": 0,
      "tags": [
        null
      ],
      "price_breakdown": {
        "price_without_charges": 570000,
        "charges_total": 30000,
        "tax_and_service_fee": 30000,
        "sales_tax": 0,
        "mandatory_tax": 0,
        "included_fee": true
      },
      "vat": false,
      "avail_token": "32b815efeafa45debc27edc67d1a1017",
      "show_prices": {
        "promotion": {
          "title": "",
          "discount_type": "",
          "discount_value": "",
          "incl_vat_fee_price": 0,
          "excl_vat_fee_price": 0,
          "order": 1,
          "end_time": -1,
          "show": false
        },
        "member_discount": {
          "title": "SECRET_DEALS",
          "discount_type": "",
          "discount_value": "",
          "incl_vat_fee_price": 0,
          "excl_vat_fee_price": 0,
          "order": 2,
          "show": false
        },
        "mobile_rate": {
          "title": "MOBILE_RATE",
          "discount_type": "",
          "discount_value": "",
          "incl_vat_fee_price": 0,
          "excl_vat_fee_price": 0,
          "order": 3,
          "show": false
        },
        "loyalty_discount": {
          "title": "",
          "discount_type": "",
          "discount_value": "",
          "incl_vat_fee_price": 0,
          "excl_vat_fee_price": 0,
          "order": 4,
          "show": false
        },
        "discount_coupon": {
          "title": "",
          "discount_type": "",
          "discount_value": "",
          "incl_vat_fee_price": 0,
          "excl_vat_fee_price": 0,
          "order": 5,
          "show": false
        },
        "final_price": {
          "title": "Giá cuối",
          "discount_type": "PERCENT",
          "incl_discount_value": 0,
          "excl_discount_value": 0,
          "incl_vat_fee_price": 600000,
          "excl_vat_fee_price": 570000,
          "order": 6,
          "show": false
        }
      },
      "is_tms_special_deal": false
    }
  ],
  "description": "<p>Ph&ograve;ng superior double room c&oacute; cửa sổ to&agrave;n cảnh c&oacute; thể mở ra như ban c&ocirc;ng.</p>\n\n<p>C&aacute;c ph&ograve;ng đều c&oacute; điều ho&agrave; nhiệt độ (m&aacute;y lạnh) k&egrave;m với tivi LCD 32&quot; truyền h&igrave;nh vệ tinh c&oacute; c&aacute;c k&ecirc;nh quốc tế, tủ lạnh, tủ quần &aacute;o v&agrave; ph&ograve;ng tắm ri&ecirc;ng. Ngo&agrave;i ra, ph&ograve;ng c&ograve;n cung cấp c&aacute;c cuộc gọi nội hạt miễn ph&iacute; v&agrave; Wi-Fi internet miễn ph&iacute;.</p>\n",
  "max_extra_bed": 0,
  "min_price": 600000,
  "sort_price": 600000,
  "additional_info": null,
  "hotel_id": 439,
  "provider": "VNTRIP",
  "room_area": "16.0 m2",
  "specific_facilities": {
    "air_conditioner": true,
    "no_smoking": false,
    "private_pool": false,
    "bathtub": false,
    "tv_and_cable": true,
    "lcd": true,
    "minibar": true
  },
  "facilities": "Điều hòa, Bàn, Sàn gỗ, Tủ quần áo, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Tủ lạnh, Khăn, Dịch vụ báo thức, Hướng thành phố, Hướng phố cổ",
  "bed_types": [
    [
      {
        "extra": false,
        "count": "1",
        "type": "Giường cỡ King",
        "description": ""
      }
    ]
  ],
  "reformat_bed_types": [
    {
      "group_id": "0",
      "bed_data": [
        {
          "count": "1",
          "type": "Giường cỡ King",
          "description": ""
        }
      ]
    }
  ],
  "extra_bed_info": {
    "child_age": 5,
    "adult_age": 11,
    "same_bed_child_price": 0,
    "extra_bed_little_child_price": 0,
    "extra_bed_child_price": 50000,
    "extra_bed_price": 100000,
    "extra_bed_other_policies": "Đệm phụ"
  },
  "photos": [
    {
      "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
      "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
      "order": 0
    }
  ],
  "thumb": {
    "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
    "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
    "order": 0
  },
  "has_tms_special_deal": false
}
*/

  String? id;
  String? name;
  int? maxAdult;
  int? maxChildren;
  int? count;
  List<ResponseDetailEachRoomDataRoomDataRates?>? rates;
  String? description;
  int? maxExtraBed;
  int? minPrice;
  int? sortPrice;
  String? additionalInfo;
  int? hotelId;
  String? provider;
  String? roomArea;
  ResponseDetailEachRoomDataRoomDataSpecificFacilities? specificFacilities;
  String? facilities;
  List<List<ResponseDetailEachRoomDataRoomDataBedTypes?>?>? bedTypes;
  List<ResponseDetailEachRoomDataRoomDataReformatBedTypes?>? reformatBedTypes;
  ResponseDetailEachRoomDataRoomDataExtraBedInfo? extraBedInfo;
  List<ResponseDetailEachRoomDataRoomDataPhotos?>? photos;
  ResponseDetailEachRoomDataRoomDataThumb? thumb;
  bool? hasTmsSpecialDeal;

  ResponseDetailEachRoomDataRoomData({
    this.id,
    this.name,
    this.maxAdult,
    this.maxChildren,
    this.count,
    this.rates,
    this.description,
    this.maxExtraBed,
    this.minPrice,
    this.sortPrice,
    this.additionalInfo,
    this.hotelId,
    this.provider,
    this.roomArea,
    this.specificFacilities,
    this.facilities,
    this.bedTypes,
    this.reformatBedTypes,
    this.extraBedInfo,
    this.photos,
    this.thumb,
    this.hasTmsSpecialDeal,
  });
  ResponseDetailEachRoomDataRoomData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toString();
    name = json['name']?.toString();
    maxAdult = json['max_adult']?.toInt();
    maxChildren = json['max_children']?.toInt();
    count = json['count']?.toInt();
    if (json['rates'] != null) {
      final v = json['rates'];
      final arr0 = <ResponseDetailEachRoomDataRoomDataRates>[];
      v.forEach((v) {
        arr0.add(ResponseDetailEachRoomDataRoomDataRates.fromJson(v));
      });
      rates = arr0;
    }
    description = json['description']?.toString();
    maxExtraBed = json['max_extra_bed']?.toInt();
    minPrice = json['min_price']?.toInt();
    sortPrice = json['sort_price']?.toInt();
    additionalInfo = json['additional_info']?.toString();
    hotelId = json['hotel_id']?.toInt();
    provider = json['provider']?.toString();
    roomArea = json['room_area']?.toString();
    specificFacilities = (json['specific_facilities'] != null) ? ResponseDetailEachRoomDataRoomDataSpecificFacilities.fromJson(json['specific_facilities']) : null;
    facilities = json['facilities']?.toString();
    if (json['bed_types'] != null) {
      final v = json['bed_types'];
      final arr0 = <List<ResponseDetailEachRoomDataRoomDataBedTypes>>[];
      v.forEach((v) {
        final arr1 = <ResponseDetailEachRoomDataRoomDataBedTypes>[];
        v.forEach((v) {
          arr1.add(ResponseDetailEachRoomDataRoomDataBedTypes.fromJson(v));
        });
        arr0.add(arr1);
      });
      bedTypes = arr0;
    }
    if (json['reformat_bed_types'] != null) {
      final v = json['reformat_bed_types'];
      final arr0 = <ResponseDetailEachRoomDataRoomDataReformatBedTypes>[];
      v.forEach((v) {
        arr0.add(ResponseDetailEachRoomDataRoomDataReformatBedTypes.fromJson(v));
      });
      reformatBedTypes = arr0;
    }
    extraBedInfo = (json['extra_bed_info'] != null) ? ResponseDetailEachRoomDataRoomDataExtraBedInfo.fromJson(json['extra_bed_info']) : null;
    if (json['photos'] != null) {
      final v = json['photos'];
      final arr0 = <ResponseDetailEachRoomDataRoomDataPhotos>[];
      v.forEach((v) {
        arr0.add(ResponseDetailEachRoomDataRoomDataPhotos.fromJson(v));
      });
      photos = arr0;
    }
    thumb = (json['thumb'] != null) ? ResponseDetailEachRoomDataRoomDataThumb.fromJson(json['thumb']) : null;
    hasTmsSpecialDeal = json['has_tms_special_deal'];
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['max_adult'] = maxAdult;
    data['max_children'] = maxChildren;
    data['count'] = count;
    if (rates != null) {
      final v = rates;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['rates'] = arr0;
    }
    data['description'] = description;
    data['max_extra_bed'] = maxExtraBed;
    data['min_price'] = minPrice;
    data['sort_price'] = sortPrice;
    data['additional_info'] = additionalInfo;
    data['hotel_id'] = hotelId;
    data['provider'] = provider;
    data['room_area'] = roomArea;
    if (specificFacilities != null) {
      data['specific_facilities'] = specificFacilities!.toJson();
    }
    data['facilities'] = facilities;
    if (bedTypes != null) {
      final v = bedTypes;
      final arr0 = [];
      v!.forEach((v) {
        final arr1 = [];
        v!.forEach((v) {
          arr1.add(v!.toJson());
        });
        arr0.add(arr1);
      });
      data['bed_types'] = arr0;
    }
    if (reformatBedTypes != null) {
      final v = reformatBedTypes;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['reformat_bed_types'] = arr0;
    }
    if (extraBedInfo != null) {
      data['extra_bed_info'] = extraBedInfo!.toJson();
    }
    if (photos != null) {
      final v = photos;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['photos'] = arr0;
    }
    if (thumb != null) {
      data['thumb'] = thumb!.toJson();
    }
    data['has_tms_special_deal'] = hasTmsSpecialDeal;
    return data;
  }
}

class ResponseDetailEachRoomData {
/*
{
  "room_data": [
    {
      "id": 35721,
      "name": "Superior double room",
      "max_adult": 2,
      "max_children": 1,
      "count": 5,
      "rates": [
        {
          "deal_type": "",
          "pretty_prices": {
            "base_net_price": 570000,
            "total_net_price": 570000,
            "base_net_price_per_night_per_room": 570000,
            "total_net_price_per_night_per_room": 570000,
            "base_price": 600000,
            "base_price_per_night": 600000,
            "base_price_per_night_per_room": 600000,
            "base_price_per_room": 600000,
            "total_price": 600000,
            "total_price_per_night": 600000,
            "total_price_per_night_per_room": 600000,
            "total_price_per_room": 600000,
            "checkin_date": "20220829",
            "nights": 1,
            "number_of_book_room": 1,
            "number_of_room_avail": 5,
            "checkout_date": "20220830"
          },
          "refundable": true,
          "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên.",
          "vntrip_rate_type": "ota_rate",
          "rate_identifier": "OO",
          "instant_book": true,
          "extra_bed_price": 100000,
          "departure_date": "20220830",
          "price": 600000,
          "hotel_id": 439,
          "room_count": 5,
          "promotion_id": null,
          "id": 26086,
          "arrival_date": "20220829",
          "total_price": 600000,
          "name": "No breakfast",
          "meal_plan": "no_meal",
          "child_count": 1,
          "adult_count": 2,
          "surcharge": {
            "price": 0
          },
          "extra_bed": 0,
          "show_price": 600000,
          "net_price": 570000,
          "provider": "VNTRIP",
          "is_payment_online": true,
          "cc_required": true,
          "children_free_age": 5,
          "included_VAT": 0,
          "included_service_fee": 5,
          "is_ta_rate": false,
          "bookable": true,
          "allow_member_discount": false,
          "is_promotion": false,
          "vntrip_markup_vat": 0,
          "tags": [
            null
          ],
          "price_breakdown": {
            "price_without_charges": 570000,
            "charges_total": 30000,
            "tax_and_service_fee": 30000,
            "sales_tax": 0,
            "mandatory_tax": 0,
            "included_fee": true
          },
          "vat": false,
          "avail_token": "32b815efeafa45debc27edc67d1a1017",
          "show_prices": {
            "promotion": {
              "title": "",
              "discount_type": "",
              "discount_value": "",
              "incl_vat_fee_price": 0,
              "excl_vat_fee_price": 0,
              "order": 1,
              "end_time": -1,
              "show": false
            },
            "member_discount": {
              "title": "SECRET_DEALS",
              "discount_type": "",
              "discount_value": "",
              "incl_vat_fee_price": 0,
              "excl_vat_fee_price": 0,
              "order": 2,
              "show": false
            },
            "mobile_rate": {
              "title": "MOBILE_RATE",
              "discount_type": "",
              "discount_value": "",
              "incl_vat_fee_price": 0,
              "excl_vat_fee_price": 0,
              "order": 3,
              "show": false
            },
            "loyalty_discount": {
              "title": "",
              "discount_type": "",
              "discount_value": "",
              "incl_vat_fee_price": 0,
              "excl_vat_fee_price": 0,
              "order": 4,
              "show": false
            },
            "discount_coupon": {
              "title": "",
              "discount_type": "",
              "discount_value": "",
              "incl_vat_fee_price": 0,
              "excl_vat_fee_price": 0,
              "order": 5,
              "show": false
            },
            "final_price": {
              "title": "Giá cuối",
              "discount_type": "PERCENT",
              "incl_discount_value": 0,
              "excl_discount_value": 0,
              "incl_vat_fee_price": 600000,
              "excl_vat_fee_price": 570000,
              "order": 6,
              "show": false
            }
          },
          "is_tms_special_deal": false
        }
      ],
      "description": "<p>Ph&ograve;ng superior double room c&oacute; cửa sổ to&agrave;n cảnh c&oacute; thể mở ra như ban c&ocirc;ng.</p>\n\n<p>C&aacute;c ph&ograve;ng đều c&oacute; điều ho&agrave; nhiệt độ (m&aacute;y lạnh) k&egrave;m với tivi LCD 32&quot; truyền h&igrave;nh vệ tinh c&oacute; c&aacute;c k&ecirc;nh quốc tế, tủ lạnh, tủ quần &aacute;o v&agrave; ph&ograve;ng tắm ri&ecirc;ng. Ngo&agrave;i ra, ph&ograve;ng c&ograve;n cung cấp c&aacute;c cuộc gọi nội hạt miễn ph&iacute; v&agrave; Wi-Fi internet miễn ph&iacute;.</p>\n",
      "max_extra_bed": 0,
      "min_price": 600000,
      "sort_price": 600000,
      "additional_info": null,
      "hotel_id": 439,
      "provider": "VNTRIP",
      "room_area": "16.0 m2",
      "specific_facilities": {
        "air_conditioner": true,
        "no_smoking": false,
        "private_pool": false,
        "bathtub": false,
        "tv_and_cable": true,
        "lcd": true,
        "minibar": true
      },
      "facilities": "Điều hòa, Bàn, Sàn gỗ, Tủ quần áo, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Tủ lạnh, Khăn, Dịch vụ báo thức, Hướng thành phố, Hướng phố cổ",
      "bed_types": [
        [
          {
            "extra": false,
            "count": "1",
            "type": "Giường cỡ King",
            "description": ""
          }
        ]
      ],
      "reformat_bed_types": [
        {
          "group_id": "0",
          "bed_data": [
            {
              "count": "1",
              "type": "Giường cỡ King",
              "description": ""
            }
          ]
        }
      ],
      "extra_bed_info": {
        "child_age": 5,
        "adult_age": 11,
        "same_bed_child_price": 0,
        "extra_bed_little_child_price": 0,
        "extra_bed_child_price": 50000,
        "extra_bed_price": 100000,
        "extra_bed_other_policies": "Đệm phụ"
      },
      "photos": [
        {
          "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
          "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
          "order": 0
        }
      ],
      "thumb": {
        "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
        "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
        "order": 0
      },
      "has_tms_special_deal": false
    }
  ],
  "hotel_id": 439
}
*/

  List<ResponseDetailEachRoomDataRoomData?>? roomData;
  int? hotelId;

  ResponseDetailEachRoomData({
    this.roomData,
    this.hotelId,
  });
  ResponseDetailEachRoomData.fromJson(Map<String, dynamic> json) {
    if (json['room_data'] != null) {
      final v = json['room_data'];
      final arr0 = <ResponseDetailEachRoomDataRoomData>[];
      v.forEach((v) {
        arr0.add(ResponseDetailEachRoomDataRoomData.fromJson(v));
      });
      roomData = arr0;
    }
    hotelId = json['hotel_id']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (roomData != null) {
      final v = roomData;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['room_data'] = arr0;
    }
    data['hotel_id'] = hotelId;
    return data;
  }
}

class ResponseDetailEachRoom {
/*
{
  "status": "success",
  "message": "success",
  "handle_duration": 72,
  "data": [
    {
      "room_data": [
        {
          "id": 35721,
          "name": "Superior double room",
          "max_adult": 2,
          "max_children": 1,
          "count": 5,
          "rates": [
            {
              "deal_type": "",
              "pretty_prices": {
                "base_net_price": 570000,
                "total_net_price": 570000,
                "base_net_price_per_night_per_room": 570000,
                "total_net_price_per_night_per_room": 570000,
                "base_price": 600000,
                "base_price_per_night": 600000,
                "base_price_per_night_per_room": 600000,
                "base_price_per_room": 600000,
                "total_price": 600000,
                "total_price_per_night": 600000,
                "total_price_per_night_per_room": 600000,
                "total_price_per_room": 600000,
                "checkin_date": "20220829",
                "nights": 1,
                "number_of_book_room": 1,
                "number_of_room_avail": 5,
                "checkout_date": "20220830"
              },
              "refundable": true,
              "cancel_policies": "Nếu hủy bỏ hoặc sửa đổi trước 3 ngày so với ngày đến khách sạn, bạn sẽ không bị tính phí. Nếu hủy bỏ hoặc sửa đổi muộn hơn 3 ngày trước ngày đến khách sạn, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên. Nếu bạn vắng mặt, bạn sẽ phải trả toàn bộ giá trị đêm đầu tiên.",
              "vntrip_rate_type": "ota_rate",
              "rate_identifier": "OO",
              "instant_book": true,
              "extra_bed_price": 100000,
              "departure_date": "20220830",
              "price": 600000,
              "hotel_id": 439,
              "room_count": 5,
              "promotion_id": null,
              "id": 26086,
              "arrival_date": "20220829",
              "total_price": 600000,
              "name": "No breakfast",
              "meal_plan": "no_meal",
              "child_count": 1,
              "adult_count": 2,
              "surcharge": {
                "price": 0
              },
              "extra_bed": 0,
              "show_price": 600000,
              "net_price": 570000,
              "provider": "VNTRIP",
              "is_payment_online": true,
              "cc_required": true,
              "children_free_age": 5,
              "included_VAT": 0,
              "included_service_fee": 5,
              "is_ta_rate": false,
              "bookable": true,
              "allow_member_discount": false,
              "is_promotion": false,
              "vntrip_markup_vat": 0,
              "tags": [
                null
              ],
              "price_breakdown": {
                "price_without_charges": 570000,
                "charges_total": 30000,
                "tax_and_service_fee": 30000,
                "sales_tax": 0,
                "mandatory_tax": 0,
                "included_fee": true
              },
              "vat": false,
              "avail_token": "32b815efeafa45debc27edc67d1a1017",
              "show_prices": {
                "promotion": {
                  "title": "",
                  "discount_type": "",
                  "discount_value": "",
                  "incl_vat_fee_price": 0,
                  "excl_vat_fee_price": 0,
                  "order": 1,
                  "end_time": -1,
                  "show": false
                },
                "member_discount": {
                  "title": "SECRET_DEALS",
                  "discount_type": "",
                  "discount_value": "",
                  "incl_vat_fee_price": 0,
                  "excl_vat_fee_price": 0,
                  "order": 2,
                  "show": false
                },
                "mobile_rate": {
                  "title": "MOBILE_RATE",
                  "discount_type": "",
                  "discount_value": "",
                  "incl_vat_fee_price": 0,
                  "excl_vat_fee_price": 0,
                  "order": 3,
                  "show": false
                },
                "loyalty_discount": {
                  "title": "",
                  "discount_type": "",
                  "discount_value": "",
                  "incl_vat_fee_price": 0,
                  "excl_vat_fee_price": 0,
                  "order": 4,
                  "show": false
                },
                "discount_coupon": {
                  "title": "",
                  "discount_type": "",
                  "discount_value": "",
                  "incl_vat_fee_price": 0,
                  "excl_vat_fee_price": 0,
                  "order": 5,
                  "show": false
                },
                "final_price": {
                  "title": "Giá cuối",
                  "discount_type": "PERCENT",
                  "incl_discount_value": 0,
                  "excl_discount_value": 0,
                  "incl_vat_fee_price": 600000,
                  "excl_vat_fee_price": 570000,
                  "order": 6,
                  "show": false
                }
              },
              "is_tms_special_deal": false
            }
          ],
          "description": "<p>Ph&ograve;ng superior double room c&oacute; cửa sổ to&agrave;n cảnh c&oacute; thể mở ra như ban c&ocirc;ng.</p>\n\n<p>C&aacute;c ph&ograve;ng đều c&oacute; điều ho&agrave; nhiệt độ (m&aacute;y lạnh) k&egrave;m với tivi LCD 32&quot; truyền h&igrave;nh vệ tinh c&oacute; c&aacute;c k&ecirc;nh quốc tế, tủ lạnh, tủ quần &aacute;o v&agrave; ph&ograve;ng tắm ri&ecirc;ng. Ngo&agrave;i ra, ph&ograve;ng c&ograve;n cung cấp c&aacute;c cuộc gọi nội hạt miễn ph&iacute; v&agrave; Wi-Fi internet miễn ph&iacute;.</p>\n",
          "max_extra_bed": 0,
          "min_price": 600000,
          "sort_price": 600000,
          "additional_info": null,
          "hotel_id": 439,
          "provider": "VNTRIP",
          "room_area": "16.0 m2",
          "specific_facilities": {
            "air_conditioner": true,
            "no_smoking": false,
            "private_pool": false,
            "bathtub": false,
            "tv_and_cable": true,
            "lcd": true,
            "minibar": true
          },
          "facilities": "Điều hòa, Bàn, Sàn gỗ, Tủ quần áo, Đồ dùng nhà tắm miễn phí, Máy sấy tóc, Vòi sen, Dép đi trong nhà, Nhà vệ sinh , Phòng tắm, Khăn tắm, Đồ dùng nhà tắm, TV, Truyền hình cáp, Màn hình phẳng, TV màn hình LCD, Truy cập Internet (miễn phí), Các kênh truyền hình TV, Điện thoại, Ấm điện đun nước, Mini bar, Tủ lạnh, Khăn, Dịch vụ báo thức, Hướng thành phố, Hướng phố cổ",
          "bed_types": [
            [
              {
                "extra": false,
                "count": "1",
                "type": "Giường cỡ King",
                "description": ""
              }
            ]
          ],
          "reformat_bed_types": [
            {
              "group_id": "0",
              "bed_data": [
                {
                  "count": "1",
                  "type": "Giường cỡ King",
                  "description": ""
                }
              ]
            }
          ],
          "extra_bed_info": {
            "child_age": 5,
            "adult_age": 11,
            "same_bed_child_price": 0,
            "extra_bed_little_child_price": 0,
            "extra_bed_child_price": 50000,
            "extra_bed_price": 100000,
            "extra_bed_other_policies": "Đệm phụ"
          },
          "photos": [
            {
              "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
              "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
              "order": 0
            }
          ],
          "thumb": {
            "room_image": "https://statics.vntrip.vn/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
            "thumb_image": "https://statics2.vntrip.vn/165x165/data-v2/hotels/439/img_max/439_1522585803_2013-04-07-14-24-35.jpg",
            "order": 0
          },
          "has_tms_special_deal": false
        }
      ],
      "hotel_id": 439
    }
  ]
}
*/

  String? status;
  String? message;
  int? handleDuration;
  List<ResponseDetailEachRoomData?>? data;

  ResponseDetailEachRoom({
    this.status,
    this.message,
    this.handleDuration,
    this.data,
  });
  ResponseDetailEachRoom.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toString();
    message = json['message']?.toString();
    handleDuration = json['handle_duration']?.toInt();
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <ResponseDetailEachRoomData>[];
      v.forEach((v) {
        arr0.add(ResponseDetailEachRoomData.fromJson(v));
      });
      this.data = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    data['handle_duration'] = handleDuration;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    return data;
  }
}
