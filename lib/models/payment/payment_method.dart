///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class PaymentMethodDataPaymentLimit {
/*
{
  "max": 500000000,
  "min": 20000
}
*/

  int? max;
  int? min;

  PaymentMethodDataPaymentLimit({
    this.max,
    this.min,
  });
  PaymentMethodDataPaymentLimit.fromJson(Map<String, dynamic> json) {
    max = json['max']?.toInt();
    min = json['min']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['max'] = max;
    data['min'] = min;
    return data;
  }
}

class PaymentMethodDataMarkup {
/*
{
  "type": "FLIGHT",
  "amount": 0,
  "percentage": 1.5
}
*/

  String? type;
  int? amount;
  double? percentage;

  PaymentMethodDataMarkup({
    this.type,
    this.amount,
    this.percentage,
  });
  PaymentMethodDataMarkup.fromJson(Map<String, dynamic> json) {
    type = json['type']?.toString();
    amount = json['amount']?.toInt();
    percentage = json['percentage']?.toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['type'] = type;
    data['amount'] = amount;
    data['percentage'] = percentage;
    return data;
  }
}

class PaymentMethodData {
/*
{
  "id": 35,
  "payment_method": "payment_method_momo_app",
  "rate_type": [
    "OTA"
  ],
  "order_type": [
    "HOTEL"
  ],
  "markup": [
    {
      "type": "FLIGHT",
      "amount": 0,
      "percentage": 1.5
    }
  ],
  "payment_limit": {
    "max": 500000000,
    "min": 20000
  },
  "payment_gateway": "momo",
  "affiliate": null,
  "created_at": "2018-10-18T03:44:49.367Z",
  "created_by": 399,
  "updated_at": "2018-10-18T03:44:49.367Z",
  "updated_by": null,
  "payment_method_id": 35,
  "affiliate_id": null,
  "name_vi": "Thanh toán bằng ví MoMo",
  "name_en": "Pay with MoMo E-wallet",
  "short_desc_vi": "Quý khách vui lòng cài app MoMo trước khi chọn hình thức này để thuận tiện cho việc thanh toán.",
  "short_desc_en": "Please install Momo app before using this payment method",
  "desc_vi": null,
  "desc_en": null,
  "logo": "https://statics.vntrip.vn/images/checkout/i-momo.png",
  "gateway_fee": true,
  "rank": 5,
  "request_from": "ANDROID",
  "all_active": null
}
*/

  int? id;
  String? paymentMethod;
  List<String?>? rateType;
  List<String?>? orderType;
  List<PaymentMethodDataMarkup?>? markup;
  PaymentMethodDataPaymentLimit? paymentLimit;
  String? paymentGateway;
  String? affiliate;
  String? createdAt;
  int? createdBy;
  String? updatedAt;
  String? updatedBy;
  int? paymentMethodId;
  String? affiliateId;
  String? nameVi;
  String? nameEn;
  String? shortDescVi;
  String? shortDescEn;
  String? descVi;
  String? descEn;
  String? logo;
  bool? gatewayFee;
  int? rank;
  String? requestFrom;
  String? allActive;

  PaymentMethodData({
    this.id,
    this.paymentMethod,
    this.rateType,
    this.orderType,
    this.markup,
    this.paymentLimit,
    this.paymentGateway,
    this.affiliate,
    this.createdAt,
    this.createdBy,
    this.updatedAt,
    this.updatedBy,
    this.paymentMethodId,
    this.affiliateId,
    this.nameVi,
    this.nameEn,
    this.shortDescVi,
    this.shortDescEn,
    this.descVi,
    this.descEn,
    this.logo,
    this.gatewayFee,
    this.rank,
    this.requestFrom,
    this.allActive,
  });
  PaymentMethodData.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    paymentMethod = json['payment_method']?.toString();
    if (json['rate_type'] != null) {
      final v = json['rate_type'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      rateType = arr0;
    }
    if (json['order_type'] != null) {
      final v = json['order_type'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      orderType = arr0;
    }
    if (json['markup'] != null) {
      final v = json['markup'];
      final arr0 = <PaymentMethodDataMarkup>[];
      v.forEach((v) {
        arr0.add(PaymentMethodDataMarkup.fromJson(v));
      });
      markup = arr0;
    }
    paymentLimit = (json['payment_limit'] != null) ? PaymentMethodDataPaymentLimit.fromJson(json['payment_limit']) : null;
    paymentGateway = json['payment_gateway']?.toString();
    affiliate = json['affiliate']?.toString();
    createdAt = json['created_at']?.toString();
    createdBy = json['created_by']?.toInt();
    updatedAt = json['updated_at']?.toString();
    updatedBy = json['updated_by']?.toString();
    paymentMethodId = json['payment_method_id']?.toInt();
    affiliateId = json['affiliate_id']?.toString();
    nameVi = json['name_vi']?.toString();
    nameEn = json['name_en']?.toString();
    shortDescVi = json['short_desc_vi']?.toString();
    shortDescEn = json['short_desc_en']?.toString();
    descVi = json['desc_vi']?.toString();
    descEn = json['desc_en']?.toString();
    logo = json['logo']?.toString();
    gatewayFee = json['gateway_fee'];
    rank = json['rank']?.toInt();
    requestFrom = json['request_from']?.toString();
    allActive = json['all_active']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['payment_method'] = paymentMethod;
    if (rateType != null) {
      final v = rateType;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['rate_type'] = arr0;
    }
    if (orderType != null) {
      final v = orderType;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['order_type'] = arr0;
    }
    if (markup != null) {
      final v = markup;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['markup'] = arr0;
    }
    if (paymentLimit != null) {
      data['payment_limit'] = paymentLimit!.toJson();
    }
    data['payment_gateway'] = paymentGateway;
    data['affiliate'] = affiliate;
    data['created_at'] = createdAt;
    data['created_by'] = createdBy;
    data['updated_at'] = updatedAt;
    data['updated_by'] = updatedBy;
    data['payment_method_id'] = paymentMethodId;
    data['affiliate_id'] = affiliateId;
    data['name_vi'] = nameVi;
    data['name_en'] = nameEn;
    data['short_desc_vi'] = shortDescVi;
    data['short_desc_en'] = shortDescEn;
    data['desc_vi'] = descVi;
    data['desc_en'] = descEn;
    data['logo'] = logo;
    data['gateway_fee'] = gatewayFee;
    data['rank'] = rank;
    data['request_from'] = requestFrom;
    data['all_active'] = allActive;
    return data;
  }
}

class PaymentMethod {
/*
{
  "status": "success",
  "message": "Success",
  "data": [
    {
      "id": 35,
      "payment_method": "payment_method_momo_app",
      "rate_type": [
        "OTA"
      ],
      "order_type": [
        "HOTEL"
      ],
      "markup": [
        {
          "type": "FLIGHT",
          "amount": 0,
          "percentage": 1.5
        }
      ],
      "payment_limit": {
        "max": 500000000,
        "min": 20000
      },
      "payment_gateway": "momo",
      "affiliate": null,
      "created_at": "2018-10-18T03:44:49.367Z",
      "created_by": 399,
      "updated_at": "2018-10-18T03:44:49.367Z",
      "updated_by": null,
      "payment_method_id": 35,
      "affiliate_id": null,
      "name_vi": "Thanh toán bằng ví MoMo",
      "name_en": "Pay with MoMo E-wallet",
      "short_desc_vi": "Quý khách vui lòng cài app MoMo trước khi chọn hình thức này để thuận tiện cho việc thanh toán.",
      "short_desc_en": "Please install Momo app before using this payment method",
      "desc_vi": null,
      "desc_en": null,
      "logo": "https://statics.vntrip.vn/images/checkout/i-momo.png",
      "gateway_fee": true,
      "rank": 5,
      "request_from": "ANDROID",
      "all_active": null
    }
  ],
  "return_code": 1
}
*/

  String? status;
  String? message;
  List<PaymentMethodData?>? data;
  int? returnCode;

  PaymentMethod({
    this.status,
    this.message,
    this.data,
    this.returnCode,
  });
  PaymentMethod.fromJson(Map<String, dynamic> json) {
    status = json['status']?.toString();
    message = json['message']?.toString();
    if (json['data'] != null) {
      final v = json['data'];
      final arr0 = <PaymentMethodData>[];
      v.forEach((v) {
        arr0.add(PaymentMethodData.fromJson(v));
      });
      this.data = arr0;
    }
    returnCode = json['return_code']?.toInt();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['status'] = status;
    data['message'] = message;
    if (this.data != null) {
      final v = this.data;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['data'] = arr0;
    }
    data['return_code'] = returnCode;
    return data;
  }
}
